# Refactored fmrireg DSL Specification v2.0
# Defines the structure for configuring fMRI analyses using fmrireg.

# --- Global Resources ---

dataset:
  description: "Configuration for loading BIDS dataset and scan parameters."
  required: true
  properties:
    path:
      type: string
      description: "Path to the root BIDS project directory."
      required: true
      validation: "Directory must exist and contain a valid BIDS structure."
    relpath:
      type: string
      description: "Relative path within the BIDS project to functional data (e.g., 'func', 'derivatives/fmriprep/.../func')."
      default: "func"
      required: false
    subjects:
      type: object
      description: "Subject selection criteria."
      required: false
      properties:
        include:
          type: array[string]
          description: "List of subject IDs (BIDS format, e.g., 'sub-01') to include."
          pattern: "^sub-[0-9A-Za-z]+$"
          required: false
          note: "If omitted, all subjects found are considered."
        exclude:
          type: array[string]
          description: "List of subject IDs to exclude."
          pattern: "^sub-[0-9A-Za-z]+$"
          required: false
    tasks:
      type: array[string]
      description: "List of task names (BIDS format, e.g., 'task-stroop') to include."
      required: false
      validation: "Tasks must exist in the BIDS dataset for selected subjects."
      note: "If omitted, all tasks found for selected subjects are used."
    runs:
      type: array[string]
      description: "List of run IDs (BIDS format, e.g., 'run-01') to include."
      pattern: "^run-[0-9]+$"
      required: false
      note: "If omitted, all runs found for selected subjects/tasks are used."
    scan_params:
      description: "Default and override parameters for scans. Useful if BIDS metadata is missing or needs correction."
      required: false
      properties:
        TR:
          type: object
          description: "TR (Repetition Time) specifications in seconds."
          required: false
          properties:
            default:
              type: number
              description: "Default TR for all scans if not found in BIDS metadata."
              required: true # A default is needed if relying on this mechanism
            overrides:
              type: array[object]
              description: "TR overrides for specific scans matching a pattern."
              required: false
              items:
                type: object
                properties:
                  pattern:
                    type: string
                    description: "Regex pattern to match subject/task/run string in BIDS filename."
                    required: true
                  value:
                    type: number
                    description: "TR value (seconds) for matching scans."
                    required: true
        run_length:
          type: object
          description: "Run length specifications in number of volumes."
          required: false
          properties:
            default:
              type: object
              description: "Default run lengths by task name."
              required: true # Defaults per task are needed if using this
              properties:
                "*": # Wildcard for task names
                  type: integer
                  description: "Number of volumes for this task."
            overrides:
              type: array[object]
              description: "Run length overrides for specific scans matching a pattern."
              required: false
              items:
                type: object
                properties:
                  pattern:
                    type: string
                    description: "Regex pattern to match subject/task/run string."
                    required: true
                  value:
                    type: integer
                    description: "Number of volumes for matching scans."
                    required: true

events:
  description: "Specifies the names of essential columns in BIDS events.tsv files."
  required: true
  properties:
    onset_column:
      type: string
      description: "Name of the column containing event onset times (in seconds)."
      required: true
    duration_column:
      type: string
      description: "Name of the column containing event durations (in seconds)."
      required: true
    block_column:
      type: string
      description: "Name of the column identifying the run or block number."
      required: true
      validation: "Column values must be numeric or convertible to numeric and non-decreasing within a session/subject."

hrfs:
  description: "Definitions of Hemodynamic Response Functions (HRFs) that can be referenced by terms."
  required: false
  properties:
    "*": # Wildcard for HRF names (e.g., 'canonical', 'gamma_fast')
      type: object
      description: "Definition for a single named HRF."
      properties:
        type:
          type: string
          description: "Type of HRF."
          required: true
          enum: [
            "HRF_SPMG1", "HRF_SPMG2", "HRF_SPMG3", # SPM canonicals
            "HRF_GAUSSIAN", "HRF_GAMMA",            # Basic shapes
            "HRF_BSPLINE",                           # Flexible basis
            "HRF_DAGUERRE", "HRF_DAGUERRE_BASIS",    # Orthogonal basis
            "custom"                                # User-defined R function
          ]
        parameters:
          type: object
          description: "Parameters specific to the HRF type (e.g., shape/rate for Gamma, mean/sd for Gaussian, nbasis/degree for Bspline)."
          required: false
          properties:
            "*":
              type: [number, integer, array[number]] # Allow different param types
              description: "Parameter value."
        definition:
          type: string
          description: "Name of the R function implementing a 'custom' HRF type."
          required: false
          note: "Required only if type is 'custom'."
          validation: "Function must exist in the R environment."

confounds:
  description: "Selection criteria for confound variables from BIDS confounds.tsv files."
  required: false
  properties:
    include:
      type: array[string]
      description: "List of confound variable names or regex patterns to include."
      required: false
      note: "If omitted, no confounds selected by default unless specified in baseline."
      examples: ["csf", "white_matter", "^trans_.*", "^rot_.*", "framewise_displacement"]
    exclude:
      type: array[string]
      description: "List of confound variable names or regex patterns to exclude. Takes precedence over 'include'."
      required: false
      examples: ["a_comp_cor_.*", "cosine.*"]

terms:
  description: "Definitions of model terms. Each term generates one or more regressors."
  required: true
  properties:
    "*": # Wildcard for term names (e.g., 'visual_stim', 'rt_pmod')
      type: object
      description: "Definition for a single named term."
      required: true
      properties:
        type:
          type: string
          description: "The type determines how the term's regressors are generated."
          required: true
          enum: [
            "hrf",          # Standard event convolution with HRF
            "parametric",   # Parametric modulation of events, convolved with HRF
            "trialwise",    # Separate regressor for each trial/event instance, convolved
            "nuisance"      # Direct inclusion of variable(s) without HRF convolution
          ]
        variables:
          type: array[string]
          description: >
            List of *model variable names* used by this term. The interpretation depends on 'type':
            - 'hrf': Factors defining conditions (e.g., [condition], [stim_type, accuracy]).
            - 'parametric': First element(s) select events, the *last* element is the modulator (e.g., [condition, rt], [rt]).
            - 'trialwise': A variable uniquely identifying trials (e.g., [trial_index]).
            - 'nuisance': Variables to include directly (e.g., [motion1, motion2]).
          required: true
          validation: "Variables must be defined in the 'model.variable_mapping' section."
        hrf:
          type: string
          description: "Name of the HRF to use (defined in global 'hrfs' section). Required for 'hrf', 'parametric', 'trialwise'."
          required: false # A default canonical HRF will be assumed if omitted.
          validation: "HRF name must exist in the 'hrfs' section or be a recognized default."
          default: "canonical" # Assuming 'canonical' is a default or defined in hrfs:
        subset:
          type: string
          description: "An R logical expression (as a string) to filter events based on *model variable names*. Applied before generating regressors."
          required: false
          examples: ["condition != 'catch_trial'", "rt > 0 & accuracy == 1"]
        transform:
          type: array[string]
          description: >
            [Only for 'parametric' type] List of transformations applied sequentially to the *modulator* variable.
          required: false
          enum: ["center", "scale", "zscore", "log", "exp", "within_subject"]
          note: "Applied before basis expansion."
        basis:
          type: object
          description: >
            [Only for 'parametric' type] Basis expansion applied to the *modulator* variable after transformation.
          required: false
          properties:
            type:
              type: string
              description: "Type of basis function."
              required: true
              enum: [ # Align with R implementation options
                  "Poly", # -> fmrireg::Poly()
                  "BSpline", # -> fmrireg::BSpline()
                  "Standardized", # -> fmrireg::Standardized()
                  "Ident", # -> fmrireg::Ident() - useful for multiple parametric modulators as separate columns
                  "ns" # -> splines::ns() - may need fmrireg wrapper
                ]
            parameters:
              type: object
              description: "Parameters for the basis function (e.g., degree, knots)."
              required: false
              properties:
                 degree: { type: integer, default: 1 }
                 knots: { type: array[number], required: false }
                 intercept: { type: boolean, default: true, required: false } # e.g. for Poly
        lag:
           type: number
           description: "Temporal lag (seconds) applied to the HRF for this term. Default 0."
           required: false
           default: 0
        # Future: Add width, summate, normalize here if per-term overrides are needed

contrasts:
  description: "Definitions of statistical contrasts that can be referenced by models."
  required: false
  properties:
    "*": # Wildcard for contrast names (e.g., 'face_vs_house', 'linear_trend')
      type: object
      description: "Definition for a single named contrast."
      properties:
        type:
          type: string
          description: "Type of contrast determines how weights are generated."
          required: true
          enum: [ # Align with fmrireg contrast functions
              "formula",         # -> contrast()
              "pair",            # -> pair_contrast()
              "one_against_all", # -> one_against_all_contrast()
              "unit",            # -> unit_contrast()
              "oneway",          # -> oneway_contrast()
              "interaction",     # -> interaction_contrast()
              "polynomial"       # -> poly_contrast()
          ]
        # --- Type-specific arguments ---
        expression: # For type: formula
          type: string
          description: "R formula expression using *model variable names* and levels (e.g., 'condition[face] - condition[house]'). Ensure levels match data."
          required: false
        factors: # For type: pair, one_against_all, oneway, interaction, polynomial
          type: array[string]
          description: "List of *model variable names* (factors) involved."
          required: false
        levels: # For type: one_against_all, pair (can be used to specify order or subset)
          type: array[string]
          description: "Factor level(s) involved in the contrast."
          required: false
        degree: # For type: polynomial
          type: integer
          description: "Degree of the polynomial trend."
          required: false
        # --- Optional filtering ---
        where:
          type: string
          description: "An R logical expression (as string) to filter conditions *within* the contrast definition, using model variables and their levels."
          required: false
          examples: ["task == 'A'", "difficulty %in% c(1, 3)"]

# --- Model Assembly ---

model:
  description: "Specification for a single analysis model, assembling components defined globally."
  required: true
  properties:
    name:
      type: string
      description: "Unique identifier for this model."
      required: true

    baseline:                 # [Optional] Baseline model specification for this model.
      type: object
      required: false
      default: { basis: "bspline", degree: 3, intercept: "runwise", confound_variables: [] } # Sensible default
      properties:
        basis:
          type: string
          description: "Type of basis function for drift modeling."
          required: true
          enum: ["constant", "poly", "bspline", "ns"]
          default: "bspline"
        degree:
          type: integer
          description: "Degree/number of basis functions for drift."
          required: false
          default: 3
          validation: "Must be positive integer. Check requirements for basis type (e.g., >=3 for bspline/ns)."
        intercept:
          type: string
          description: "Type of intercept term."
          required: false
          enum: ["runwise", "global", "none"]
          default: "runwise"
        confound_variables:   # [Optional] Explicit list of confound *model variable names* to include.
          type: array[string]
          description: "List of *model variable names* (defined in 'variable_mapping' and selected by global 'confounds') to include as nuisance regressors in the baseline."
          required: false
          default: []
          validation: "Variables must exist in 'variable_mapping' and correspond to selected confounds."

    variable_mapping:         # [Required] Mapping from model variable names to BIDS column names.
      type: object
      description: "Maps symbolic variable names used in terms/contrasts to actual column names in BIDS events.tsv or confounds.tsv files for this model."
      required: true
      properties:
        "*": # Wildcard for model variable names (e.g., 'condition', 'rt', 'motion_x')
          type: string
          description: "The corresponding column name in the BIDS TSV file."
          required: true
      validation: "All variables used in selected 'terms', 'baseline.confound_variables', and contrast 'factors'/'where' clauses must be mapped here to existing BIDS columns."

    variable_roles:           # [Optional] Explicit declaration of variable roles for this model.
      type: object
      description: "Overrides automatic role inference (factor/parametric) based on data types."
      required: false
      properties:
        factors:
          type: array[string]
          description: "List of *model variable names* to be treated as factors."
          required: false
          default: []
        parametric:
          type: array[string]
          description: "List of *model variable names* to be treated as parametric regressors/modulators."
          required: false
          default: []
      validation: "Variables listed must be defined in 'variable_mapping'."

    terms:                    # [Required] List of term names (defined globally) to include in this model.
      type: array[string]
      description: "Selects which globally defined terms (from the top-level 'terms' section) are part of this specific model."
      required: true
      minItems: 1
      validation: "Term names must exist in the global 'terms' section."

    contrasts:                # [Optional] List of contrast names (defined globally) to compute for this model.
      type: array[string]
      description: "Selects which globally defined contrasts (from the top-level 'contrasts' section) should be evaluated for this model."
      required: false
      default: []
      validation: "Contrast names must exist in the global 'contrasts' section."

# Example Instance (Illustrative - matches structure above)
example:
  dataset:
    path: /path/to/bids
    subjects: { include: [sub-01] }
    tasks: [task-nback]
    scan_params: { TR: { default: 2.0 } }
  events:
    onset_column: onset
    duration_column: duration
    block_column: run
  hrfs:
    canonical: { type: HRF_SPMG1 }
  confounds:
    include: [csf, white_matter, trans_x]
  terms:
    stim_presentation:
      type: hrf
      variables: [condition]
      hrf: canonical
      subset: "condition != 'fixation'"
    rt_modulation:
      type: parametric
      variables: [condition, rt]
      hrf: canonical
      transform: [center]
      basis: { type: Poly, parameters: { degree: 1 } }
      subset: "accuracy == 1"
    motion_reg:
      type: nuisance
      variables: [motion_tx] # Model variable name
  contrasts:
    twoback_vs_oneback:
      type: formula
      expression: "condition[2back] - condition[1back]"
  model:
    name: nback_rt_analysis
    baseline:
      confound_variables: [csf_signal, motion_tx] # Uses model variable names
    variable_mapping:
      condition: trial_type   # Map model 'condition' -> BIDS 'trial_type'
      rt: response_time     # Map model 'rt' -> BIDS 'response_time'
      accuracy: acc          # Map model 'accuracy' -> BIDS 'acc'
      csf_signal: csf        # Map model 'csf_signal' -> BIDS 'csf'
      motion_tx: trans_x     # Map model 'motion_tx' -> BIDS 'trans_x'
      trial_index: trial_num # For potential trialwise term
    variable_roles:
      factors: [condition, accuracy] # Treat numeric 'acc' as factor
      parametric: [rt]
    terms:
      - stim_presentation
      - rt_modulation
      - motion_reg
    contrasts:
      - twoback_vs_oneback