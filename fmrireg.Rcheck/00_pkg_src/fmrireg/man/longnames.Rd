% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generic.R
\name{longnames}
\alias{longnames}
\alias{longnames.event_term}
\alias{longnames.event_seq}
\alias{longnames.afni_hrf_convolved_term}
\alias{longnames.afni_trialwise_convolved_term}
\alias{longnames.convolved_term}
\title{Extract Long Names of Variable Levels}
\usage{
longnames(x, ...)

\method{longnames}{event_term}(x, ...)

\method{longnames}{event_seq}(x, ...)

\method{longnames}{afni_hrf_convolved_term}(x, ...)

\method{longnames}{afni_trialwise_convolved_term}(x, ...)

\method{longnames}{convolved_term}(x, ...)

\method{longnames}{convolved_term}(x, ...)
}
\arguments{
\item{x}{The object to extract names from (typically an event_term, event_model, or convolved_term)}

\item{...}{Additional arguments passed to methods. Common arguments include:
\describe{
\item{exclude_basis}{Logical; if TRUE, exclude basis function labels from names}
\item{drop_empty}{Logical; if TRUE, drop empty condition levels}
}}
}
\value{
A character vector containing the full condition names with term prefixes and basis functions
}
\description{
Get the extended names of variable levels, which include the term prefix and any basis function
information. Long names provide the complete specification of each condition in the model.
For example, if a term has conditions "level1" and "level2" with basis functions "basis1" and "basis2",
the long names would be "term#level1:basis1", "term#level1:basis2", "term#level2:basis1", "term#level2:basis2".
}
\examples{
# Create example data with multiple conditions
event_data <- data.frame(
  condition = factor(c("A", "B", "C", "A", "B", "C")),
  rt = c(0.8, 1.2, 0.9, 1.1, 0.7, 1.3),
  onsets = c(1, 10, 20, 30, 40, 50),
  run = c(1, 1, 1, 1, 1, 1)
)

# Create sampling frame
sframe <- sampling_frame(blocklens = 60, TR = 2)

# Create event model with multiple basis functions
evmodel <- event_model(
  onsets ~ hrf(condition, basis = "fourier", nbasis = 2),
  data = event_data,
  block = ~run,
  sampling_frame = sframe
)

# Get long names including basis functions
lnames <- longnames(evmodel)
# Returns: c("condition#A:basis1", "condition#A:basis2",
#           "condition#B:basis1", "condition#B:basis2",
#           "condition#C:basis1", "condition#C:basis2")

# Create simple event term
eterm <- event_term(
  list(condition = event_data$condition),
  onsets = event_data$onsets,
  blockids = event_data$run
)

# Get long names for term
term_names <- longnames(eterm)
# Returns: c("condition#A", "condition#B", "condition#C")
}
\seealso{
\code{\link[=shortnames]{shortnames()}}, \code{\link[=event_model]{event_model()}}, \code{\link[=event_term]{event_term()}}
}
\concept{variable_names}
