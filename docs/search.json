[{"path":"https://bbuchsbaum.github.io/fmrireg/articles/Overview.html","id":"overview-of-the-fmrireg-package","dir":"Articles","previous_headings":"","what":"Overview of the fmrireg package","title":"Overview","text":"analysis Functional Magnetic Resonance Imaging (fMRI) lot complexities due large amount data, fact data form multi-dimensional images (usually, 4-dimensional – x,y,z, time), fact hemodynamic response sluggish delayed (4-6s) respect stimulus presentation task events, existence physiological noise “nuisance” signals, issues related multiple comparisons, existence spatially temporally auto-correlated errors signal. However, push complexity side moment, standard “univariate” fMRI analysis involves simple multiple regression analysis applied every 3d location (“voxel”) brain. goal fmrireg package provide convenient interface, spirit R regression modeling tools, analyzing fMRI data. therefore use R’s formula interface specify regression models way makes convenient readable code.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/Overview.html","id":"the-building-blocks-of-an-fmri-regression-model","dir":"Articles","previous_headings":"","what":"The building blocks of an fMRI regression model","title":"Overview","text":"basic, lowest level, unit fMRI regression model hemodynamic reesponse function (HRF). HRF model mapping, transfer function, external stimulus (neural event) BOLD signal. commonly used HRF -called SPM canonical HRF:  Currently, fmrireg provides several builtin HRFs can used model BOLD activity. See vignette “Hemodynamic Response Functions” detailed overview. Choosing correct HRF depends use case aims analysis, SPM canaonical function usually good default choice.","code":"time <- seq(0,24, by=.2) plot(time, hrf_spmg1(time), type='l', xlab=\"time\", ylab=\"BOLD activity\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/Overview.html","id":"regressors","dir":"Articles","previous_headings":"","what":"Regressors","title":"Overview","text":"“regressor” simply independent variable multiple regression model. fMRI analysis, however, regressors constructed “convolving” set onset times–vector times certain task events occur–chosen HRF. Imagine stimulus presented every 16 seconds 8 repetitions. can construct “regressor” convolving chosen HRF vector onset times (seconds), whereby element vector corresponds time stimulus occurs. use function gen_hrf create special function class “HRF”. alternative use pre-made HRF objects, example, HRF_SPMG1 want use th SPM canonical function. create regressor regressor constructor function, can evaluate arbitrary time points. words, just HRFs functions time, regressors. difference regressor, evaluated time t sum constituent HRFs, domain determined onset vector. code , evaluate regressor every time point 1 140.  better illustrate regressor sums constituent HRFs, can place onsets closer together, HRFs overlap time:  fmrireg generally necessary manually create regressors done . Rather, regressors created “behind scenes” higher-level modeling functions, event_model. However, facility create individual regressors, purposes learning fMRI analysis conducting special analyses, may still useful.","code":"onsets <- seq(0, 16*8, by=16) hrf <- gen_hrf(hrf_spmg1) reg <- regressor(onsets, hrf=hrf)  grid <- seq(0,140, by=1) plot(grid, evaluate(reg, grid), type='l', ylab=\"BOLD activity\", xlab=\"time\", main=\"ISI = 16\") onsets <- seq(0, 16*8, by=6) hrf <- gen_hrf(hrf_spmg1) reg <- regressor(onsets, hrf=hrf)  grid <- seq(0,140, by=1) plot(grid, evaluate(reg, grid), type='l', ylab=\"BOLD activity\", xlab=\"time\", main=\"ISI = 6\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/Overview.html","id":"event-models","dir":"Articles","previous_headings":"","what":"Event Models","title":"Overview","text":"HRF function time BOLD activity: f(t) -> y. regressor function time sums BOLD activity sequence spaced events. conventional fMRI analysis, regressor refers single column design matrix. example, two task conditions, face scene, generate one face regressor one scene regressor. However, statistical modeling experiments, generally think terms single columns design matrix, rather terms “factors”, case might call “stim_type”, levels “scene” “face”. complex regression model often involves factorial combination different categorical variables, can examined main effects, interactions, contrasts. discuss event models, need briefly introduce fmrireg’s class describing scans sampled time organized blocks (sometimes also referred runs scans). “block” simply refers consecutive set images (usually hundred), collected back back course one fMRI scan. fMRI “session” consists number scanning blocks. individual image block separated fixed interval, called “TR” (repetition time). encode information (number blocks, number images block, TR) sampling_frame object. , create sampling_frame experiment 5 blocks, containing 200 images, TR 2s.","code":"nblocks <- 5 sframe <- sampling_frame(rep(200, 5), TR=2) sframe ## sampling_frame:  ##   number of blocks: 5  ##   blocklens:  200, 200, 200, 200, 200  ##   TR:  2s 2s 2s 2s 2s  ##   start_time:  1s 1s 1s 1s 1s"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_01_hemodynamic_response.html","id":"hemodynamic-response-function","dir":"Articles","previous_headings":"","what":"Hemodynamic response function","title":"Hemodynamic Response Functions","text":"hemodynamic response function (HRF) used model temporal evoluation fMRI response experimental “event”. HRF function time usually peaks 4-6s afer event onset. number pre-defined HRFs fmrireg make easy work . example, can use SPM “canonical” HRF. use function hrf_blocked can generate flexible hemodynamic responses.  , “width” parameters tells hrf_block function event “instantaneous”, .e. extended time. standard way modeling short-lasting (e.g. < 2 seconds) fMRI.","code":"library(magrittr)  ## SPM canonical hrf f1 <- hrf_blocked(hrf_spmg1, width=0)  ## Gaussian hrf with default parameters (mean=6, sd=1.5) f2 <- hrf_blocked(hrf_gaussian, width=0)   y_f1 <- f1(seq(0,20,by=.1)) y_f2 <- f2(seq(0,20,by=.1))  plot(seq(0,20,by=.1), y_f1, type=\"l\", xlab=\"Time\", ylab=\"BOLD response\", main=\"Gaussian and SPM Canonical HRF\",       ylim=range(c(y_f1, y_f2)))  lines(seq(0,20,by=.1), y_f2, type=\"l\", col=2)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_01_hemodynamic_response.html","id":"changing-default-parameters","dir":"Articles","previous_headings":"","what":"Changing Default Parameters","title":"Hemodynamic Response Functions","text":"Standard HRF functions default parameters determine shape response. Gaussian HRF, parameters easy understand. mean specifies “peak” HRF sd parameter specifies “width”.","code":"## the 'gen_hrf' function takes an hrf function and returns a new function substituting the supplied parameters as arguments. hrf_7_3 <- gen_hrf(hrf_gaussian, mean=7, sd=3) hrf_5_2 <- gen_hrf(hrf_gaussian, mean=5, sd=2) hrf_4_1 <- gen_hrf(hrf_gaussian, mean=4, sd=1)  time <- seq(0,20,by=.1)  vals1 <- hrf_7_3(time) vals2 <- hrf_5_2(time) vals3 <- hrf_4_1(time)   plot(seq(0,20,by=.1), vals1, type=\"l\", xlab=\"Time\", ylab=\"BOLD response\", ylim=range(c(vals1, vals2, vals3)), main=\"Three Gaussian HRFs with different parameters\") lines(seq(0,20,by=.1), vals2, type=\"l\", col=2) lines(seq(0,20,by=.1), vals3, type=\"l\", col=3)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_01_hemodynamic_response.html","id":"setting-the-duration-of-a-response","dir":"Articles","previous_headings":"","what":"Setting the duration of a response","title":"Hemodynamic Response Functions","text":"can also set duration input stimulus follows:  can also require HRFs normalized , regardless block duration, peak amplitude HRF = 1.","code":"hrf_w1 <- hrf_blocked(hrf_spmg1, width=1) hrf_w2 <- hrf_blocked(hrf_spmg1, width=2) hrf_w3 <- hrf_blocked(hrf_spmg1, width=3)  time <- seq(0,20,by=.1) plot(time, hrf_w1(time), type=\"l\", xlab=\"Time\", ylab=\"BOLD response\", ylim=range(hrf_w3(time)), main=\"HRFs with Different Durations\") lines(time, hrf_w2(time), type=\"l\", col=2) lines(time, hrf_w3(time), type=\"l\", col=3) hrf_w1 <- hrf_blocked(hrf_spmg1, width=1, normalize=TRUE) hrf_w2 <- hrf_blocked(hrf_spmg1, width=2, normalize=TRUE) hrf_w3 <- hrf_blocked(hrf_spmg1, width=3, normalize=TRUE)  plot(time, hrf_w1(time), type=\"l\", xlab=\"Time\", ylab=\"BOLD response\", ylim=range(hrf_w3(time)), main=\"HRFs with Different Durations, but normalized\") lines(time, hrf_w2(time), type=\"l\", col=2) lines(time, hrf_w3(time), type=\"l\", col=3)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_01_hemodynamic_response.html","id":"modeling-hrf-saturation-with-the-summation-argument","dir":"Articles","previous_headings":"","what":"Modeling HRF saturation with the summation argument","title":"Hemodynamic Response Functions","text":"default increase duration results summation series shifted responses, consistent notion hemodyamic response “adds ” accumulates time. can disable additive behavior setting summate=FALSE. useful one assumes HRF “saturates” (..e increase amplitude) extended stimulation.  want peak HRF equal 1, use normalize argument follows:","code":"hrf_w1 <- hrf_blocked(hrf_spmg1, width=2, summate=FALSE) hrf_w2 <- hrf_blocked(hrf_spmg1, width=4, summate=FALSE) hrf_w3 <- hrf_blocked(hrf_spmg1, width=6, summate=FALSE)  time <- seq(0,24,by=.1)  plot(time, hrf_w1(time), type=\"l\", xlab=\"Time\", ylab=\"BOLD response\", ylim=range(hrf_w3(time)), main=\"Non-Summating HRFs with Different Durations \") lines(time, hrf_w2(time), type=\"l\", col=2) lines(time, hrf_w3(time), type=\"l\", col=3) hrf_w1 <- hrf_blocked(hrf_spmg1, width=2, summate=FALSE, normalize=TRUE) hrf_w2 <- hrf_blocked(hrf_spmg1, width=4, summate=FALSE, normalize=TRUE) hrf_w3 <- hrf_blocked(hrf_spmg1, width=6, summate=FALSE, normalize=TRUE)  time <- seq(0,24,by=.1)  plot(time, hrf_w1(time), type=\"l\", xlab=\"Time\", ylab=\"BOLD response\", ylim=range(hrf_w3(time)), main=\"Normalized and Non-Summating HRFs with Different Durations \") lines(time, hrf_w2(time), type=\"l\", col=2) lines(time, hrf_w3(time), type=\"l\", col=3)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_01_hemodynamic_response.html","id":"multivariate-hrf-b-splines-and-derivatives","dir":"Articles","previous_headings":"","what":"Multivariate HRF: B-splines and Derivatives","title":"Hemodynamic Response Functions","text":"Sometimes want model event multiple “basis functions”. case HRF function time -> d-dimensional vector, d dimension basis set.","code":"## A third degree B-Spline with four bases. hrf_bs_4 <- gen_hrf(hrf_bspline, N=4) time <- seq(0,20, by=.1) bmat1 <- hrf_bs_4(time) matplot(time, bmat1, xlab=\"Time\", ylab=\"BOLD Response\", type='l', main=\"Bspline HRF basis set (N=4)\") ## A first degree B-Spline with 12 bases. hrf_bs_12 <- gen_hrf(hrf_bspline, degree=1, N=12) bmat1 <- hrf_bs_12(time) matplot(time, bmat1, xlab=\"Time\", ylab=\"BOLD Response\", type='l', main=\"Bspline HRF basis set (N=12)\") ## the SPM + first derivative is a \"built-in\" HRF function. bmat1 <- HRF_SPMG2(time) matplot(time, bmat1, xlab=\"Time\", ylab=\"BOLD Response\", type='l', main=\"SPM + first derivative\") ## the SPM + first derivative + second derivative is a \"built-in\" HRF function. bmat1 <- HRF_SPMG3(time) matplot(bmat1, xlab=\"Time\", ylab=\"BOLD Response\", type='l', main=\"SPM + 1st and 2nd derivative\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_01_hemodynamic_response.html","id":"creating-lagged-and-blocked-hrfs","dir":"Articles","previous_headings":"","what":"Creating “lagged” and “blocked” HRFs","title":"Hemodynamic Response Functions","text":"cases, might useful create HRF function temporal offset (“lag” “delay”). might also want create HRF fixed width duration larger zero. examples suched lagged blocked HRFs.","code":"## constructing a series of lagged HRFs hrf_lag_1 <- hrf_gaussian %>% gen_hrf_lagged(1)  hrf_lag_3 <- hrf_gaussian %>% gen_hrf_lagged(3) hrf_lag_5 <- hrf_gaussian %>% gen_hrf_lagged(5)  time <- seq(0,22,by=.2) plot(time,  hrf_lag_1(time), type='l', xlab=\"time\", ylab=\"BOLD\") lines(time, hrf_lag_3(time), col=2) lines(time, hrf_lag_5(time), col=3) ## constructing lagged and blocked HRFs hrf_block_1 <- hrf_gaussian %>%  hrf_lagged(1) %>% hrf_blocked(width=1, normalize=TRUE) hrf_block_3 <- hrf_gaussian %>% hrf_lagged(3) %>% hrf_blocked(width=3, normalize=TRUE) hrf_block_5 <- hrf_gaussian %>% hrf_lagged(5) %>% hrf_blocked(width=5, normalize=TRUE)  plot(time, hrf_block_1(time), type='l', xlab=\"time\", ylab=\"BOLD\") lines(time, hrf_block_3(time), col=2) lines(time, hrf_block_5(time), col=3)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_01_hemodynamic_response.html","id":"constructing-a-custom-basis-set-using-a-set-of-lagged-hrfs","dir":"Articles","previous_headings":"","what":"Constructing a custom basis set using a set of lagged HRFs","title":"Hemodynamic Response Functions","text":"Rather using b-spline basis set, construct set functions using combination lagged /blocked HRFs. Suppose want series shifted regressor functions span 20s window. can use set shifted hrfs achieve .","code":"hrf_set <- do.call(gen_hrf_set,                    lapply(seq(0,20,by=2), function(i) {  hrf_gaussian %>% hrf_lagged(i) }))  matplot(hrf_set(0:36), type='l', xlab=\"Time\", ylab=\"BOLD Activity\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_01_hemodynamic_response.html","id":"creating-an-empirical-hrf-from-a-measured-hemodynamic-respose","dir":"Articles","previous_headings":"","what":"Creating an “empirical” HRF from a measured hemodynamic respose","title":"Hemodynamic Response Functions","text":"Suppose measured hemodynamic response like use response model analyses? case can use function gen_empirical_hrf create hemodynamic response function. extract model averaging several simulated response profiles.  can also create set empirical basis functions using, example, principal components analysis set HRFs plausible parameters lag width. simulate 50 HRFs take first 3 principal components basis set.  Now perform PCA pn matrix simulated responses use components basis set. resulting function emp_hrf_basis can subsequently used regression modelling like built-hemodynamic response functions.","code":"mat <- replicate(20, {   h <- hrf_spmg1 %>% hrf_lagged(lag=runif(n=1, min=-2, max=2)) %>% hrf_blocked(width=runif(n=1, min=0, max=4))   h(0:24) })  profile <- rowMeans(mat) emp_hrf <- gen_empirical_hrf(0:24, profile) plot(seq(0, 24, by=.1), emp_hrf(seq(0, 24, by=.1)), type='l', xlab=\"time\", ylab=\"response\", main=\"Empircal HRF\") mat <- replicate(50, {   h <- hrf_spmg1 %>% hrf_lagged(lag=runif(n=1, min=-2, max=2)) %>% hrf_blocked(width=runif(n=1, min=0, max=2))   h(0:24) }) matplot(mat, type='l', ylab=\"response\", xlab=\"Time\") pcs <- prcomp(mat)$x[,1:3] pcs <- apply(pcs, 2, function(x) x - x[1]) pcs_hrfs <- apply(pcs, 2, function(x) gen_empirical_hrf(0:24, x/max(abs(x)))) emp_hrf_basis <- gen_hrf_set(pcs_hrfs$PC1,pcs_hrfs$PC2,pcs_hrfs$PC3 ) matplot(0:24, emp_hrf_basis(0:24), type='l', ylab=\"Response\", xlab=\"Time\", main=\"PCA basis functions\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_02_regressor.html","id":"building-fmri-regressors-from-event-onsets","dir":"Articles","previous_headings":"","what":"Building fMRI regressors from event onsets","title":"Building Regressors","text":"Suppose simple event-related fMRI design 10 stimuli spaced every 12s. want model event SPM canonical hemodynamic response function (HRF). duration event 0s, “instantaneous”. 140s worth contiguous scanning data, collected single scanning run repetititon time (TR) 2s.","code":"TR <- 2 onsets <- seq(0, 10*12, by=12) reg <- regressor(onsets, HRF_SPMG1, duration=0) plot(reg)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_02_regressor.html","id":"building-fmri-regressors-from-event-onsets-with-varying-duration","dir":"Articles","previous_headings":"","what":"Building fMRI regressors from event onsets with varying duration","title":"Building Regressors","text":"Sometimes different fMRI events different durations want model variation.can follows: durs vectors contains durations, increase course block. now supply vector regressor function:  can disable additive summation hemodynamic response function including summate=FALSE call regressor. cause width HRF increase duration peak.","code":"TR <- 2 onsets <- seq(0, 10*12, length.out=6) durs <- seq(1,length(onsets)) reg <- regressor(onsets, HRF_SPMG1, duration=durs) plot(reg) reg <- regressor(onsets, HRF_SPMG1, duration=durs,summate=FALSE) plot(reg)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_02_regressor.html","id":"building-fmri-regressors-from-event-onsets-with-varying-amplitude","dir":"Articles","previous_headings":"","what":"Building fMRI regressors from event onsets with varying amplitude","title":"Building Regressors","text":"Sometimes assume amplitude event modulated arbitrary continuous variable, example “learning rate” “intensity”. can create -called parameteric regressor scaling hemodynamic response external variable follows: customary center scale parametric modulator:","code":"TR <- 2 onsets <- seq(0, 10*12, length.out=10) amp <- seq(1,length(onsets)) scaled_amp <- scale(amp) reg <- regressor(onsets, HRF_SPMG1, amplitude=scaled_amp) plot(reg)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_02_regressor.html","id":"combining-duration-and-amplitude-modulation","dir":"Articles","previous_headings":"","what":"Combining duration and amplitude modulation","title":"Building Regressors","text":"","code":"TR <- 2 onsets <- seq(0, 10*12, length.out=10) amp <- seq(1,length(onsets)) dur <- sample(seq(1, length(onsets)))  scaled_amp <- scale(amp)  reg <- regressor(onsets, HRF_SPMG1, amplitude=scaled_amp, duration=dur) plot(reg)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_02_regressor.html","id":"building-fmri-regressors-from-event-onsets-with-b-spline-basis-functions","dir":"Articles","previous_headings":"","what":"Building fMRI regressors from event onsets with b-spline basis functions","title":"Building Regressors","text":"","code":"TR <- 2 onsets <- seq(0, 10*12, length.out=10) reg <- regressor(onsets, HRF_BSPLINE) vals <- evaluate(reg, seq(0,140,by=TR)) matplot(seq(0,140,by=TR), vals, type='l', xlab=\"Time\", ylab=\"BOLD response\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_03_baseline_model.html","id":"fmri-baseline-model","dir":"Articles","previous_headings":"","what":"fMRI Baseline Model","title":"Baseline Model","text":"“baseline model” refers set regressors used capture variance associated noise signals fMRI time-series data. regressors formed convolving hemodynamic response event onsets, rather directly model sources variance data. Low-frequency baseline trends often modeled set basis functions, b-splines, polynomial regressors, Fourier basis. Nuisance trends can also derived data , example, global signal mean, motion parameters, estimated noise components via PCA ICA.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_03_baseline_model.html","id":"basic-baseline-model-with-b-splines-and-polynomials","dir":"Articles","previous_headings":"","what":"Basic baseline model with b-splines and polynomials","title":"Baseline Model","text":"","code":"TR <- 2 sframe <- sampling_frame(blocklens=c(100,100), TR) bmodel <- baseline_model(basis=\"bs\", degree=5, sframe=sframe) bmodel ## baseline_model  ##    name:  baseline_bs_5  ##    basis type:  bs  ##    degree:  5  ##    drift columns:  10  ##    constant columns:  2  ##    nuisance columns:  0  ##    total columns:  12  ##    design_matrix:   ## # A tibble: 200 × 12 ##    constant_1 constant_2 base_bs1_block_1 base_bs2_block_1 base_bs3_block_1 ##         <dbl>      <dbl>            <dbl>            <dbl>            <dbl> ##  1          1          0           0              0               0         ##  2          1          0           0.0485         0.000990        0.0000101 ##  3          1          0           0.0931         0.00384         0.0000792 ##  4          1          0           0.134          0.00837         0.000262  ##  5          1          0           0.171          0.0144          0.000607  ##  6          1          0           0.205          0.0218          0.00116   ##  7          1          0           0.236          0.0304          0.00196   ##  8          1          0           0.264          0.0401          0.00305   ##  9          1          0           0.288          0.0507          0.00446   ## 10          1          0           0.310          0.0621          0.00621   ## # ℹ 190 more rows ## # ℹ 7 more variables: base_bs4_block_1 <dbl>, base_bs5_block_1 <dbl>, ## #   base_bs1_block_2 <dbl>, base_bs2_block_2 <dbl>, base_bs3_block_2 <dbl>, ## #   base_bs4_block_2 <dbl>, base_bs5_block_2 <dbl> plot(bmodel) bmodel2 <- baseline_model(basis=\"poly\", degree=5, sframe=sframe) plot(bmodel2)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_03_baseline_model.html","id":"adding-arbitrary-nuisance-regressors","dir":"Articles","previous_headings":"","what":"Adding arbitrary nuisance regressors","title":"Baseline Model","text":"addition structured basis sets, can also add arbitrary signals baseline model. signals also organized block assumption nuisance signals often block-specific “reset” across scans. add set nusiance variables baseline model, , split block placed list.","code":"TR <- 2 sframe <- sampling_frame(blocklens=c(100,100), TR)  ## generate two arbitrary nusiance signals. nuis1 <- rnorm(100*2) nuis2 <- rnorm(100*2)  ## construct a set of data.frames, each with two columns (nuis1 and nuis2) nuislist <- split(as.data.frame(cbind(nuis1, nuis2)), blockids(sframe))  bmodel <- baseline_model(basis=\"bs\", degree=5, sframe=sframe, nuisance_list=nuislist) print(terms(bmodel)) ## $constant ## fmri_term:  block_term  ##    Term Name:  constant  ##    Num Rows:  200  ##    Num Columns:  2  ##  ## $baseline_bs_5 ## fmri_term:  baseline_term  ##    Term Name:  baseline_bs_5  ##    Num Rows:  200  ##    Num Columns:  10  ##  ## $nuisance ## fmri_term:  baseline_term  ##    Term Name:  nuisance  ##    Num Rows:  200  ##    Num Columns:  4 plot(bmodel, term_name=\"nuisance\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_04_event_models.html","id":"fmri-event-models","dir":"Articles","previous_headings":"","what":"fMRI event models","title":"Event Models","text":"“event model” description fMRI experiment, consists collection experimental “events” (stimuli/conditions/responses) embedded experimental design. convolving event type hemodynamic response function set regressors used model make inferences BOLD response.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_04_event_models.html","id":"a-simple-fmri-design","dir":"Articles","previous_headings":"","what":"A simple fMRI design","title":"Event Models","text":"Consider basic design, consisting four stimulus types, repeated 4 times course single scanning run. stimuli pictures faces, scenes, tools object presented 2s piece pseudorandom order. uniformly distributed (4-7s) inter-stimulus interval (ISI) separating stimulus presentation. Now contruct “design table” randomly sampling four conditions: Event onsets calculated cumulative sum ISI variables. construct sampling_frame define temporal sampling block structure experiment. 1 block repetition frequency (TR) 2. Now fun part. create event_model describes experimental model terms stimulus onsets, conditions, hemodynamic response function (‘hrf’). can plot model:","code":"cond <- c(\"face\", \"scene\", \"tool\", \"object\") NSTIM <- length(cond)*4 simple_design <- data.frame(stim=factor(sample(rep(cond, 4))),                       ISI=sample(4:7, NSTIM, replace=TRUE),                       run=rep(1, NSTIM),                      trial=factor(1:NSTIM)) simple_design$onset <- cumsum(simple_design$ISI+2) -2 TR <- 2 sframe <- sampling_frame(blocklens=70, TR) emodel <- event_model(onset ~ hrf(stim), data=simple_design, block = ~ run, sampling_frame=sframe) ## [1] \"onset\"     \"hrf(stim)\" print(emodel) ## event_model  ##   onset ~ hrf(stim)  ##   Num Terms 1  ##   Num Events:  16  ##   Num Columns:  4  ##   Num Blocks:  1  ##  ## Term: 1  fmri_term:  convolved_term  ##    Term Name:  stim  ##    Formula:   ~ (stim - 1)  ##    Num Events:  16  ##    Num Rows:  70  ##    Num Columns:  4  ##    Conditions:  stim[face] stim[object] stim[scene] stim[tool]  ##    Term Types:  event_factor plot(emodel)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_04_event_models.html","id":"a-simple-fmri-design-with-multiple-blocks","dir":"Articles","previous_headings":"","what":"A simple fMRI design with multiple blocks","title":"Event Models","text":"","code":"cond <- c(\"face\", \"scene\", \"tool\", \"object\") NSTIM <- length(cond)*4  ## construct a design table with two blocks design1 <- data.frame(stim=factor(sample(rep(cond, 4))),                       ISI=sample(4:7, 16, replace=TRUE),                       run=rep(1, NSTIM)) design2 <- data.frame(stim=factor(sample(rep(cond, 4))),                       ISI=sample(4:7, 16, replace=TRUE),                       run=rep(2, NSTIM)) design1$onset <- cumsum(design1$ISI+2) -2 design2$onset <- cumsum(design2$ISI+2) -2  design <- rbind(design1, design2)  ## create a 'sampling_frame' describing the temporal outline of the scan consisting of 70 images collected every once every 2 seconds. TR <- 2 sframe <- sampling_frame(blocklens=c(70,70), TR)  ## create the event model d emodel <- event_model(onset ~ hrf(stim), data=design, block = ~ run, sampling_frame=sframe) ## [1] \"onset\"     \"hrf(stim)\" print(emodel) ## event_model  ##   onset ~ hrf(stim)  ##   Num Terms 1  ##   Num Events:  32  ##   Num Columns:  4  ##   Num Blocks:  2  ##  ## Term: 1  fmri_term:  convolved_term  ##    Term Name:  stim  ##    Formula:   ~ (stim - 1)  ##    Num Events:  32  ##    Num Rows:  140  ##    Num Columns:  4  ##    Conditions:  stim[face] stim[object] stim[scene] stim[tool]  ##    Term Types:  event_factor plot(emodel)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_04_event_models.html","id":"a-two-factor-fmri-design-with-multiple-blocks","dir":"Articles","previous_headings":"","what":"A two-factor fMRI design with multiple blocks","title":"Event Models","text":"","code":"cond1 <- c(\"face\", \"scene\", \"tool\", \"object\") cond2 <- c(\"attend\", \"ignore\") comb <- expand.grid(stim=cond1, task=cond2) NSTIM <- nrow(comb) * 4  design <- do.call(rbind, lapply(1:2, function(i) {   ind <- sample(rep(1:nrow(comb), length.out=NSTIM))   d <- data.frame(stim=factor(comb$stim[ind]),              task=factor(comb$task[ind]),              ISI=sample(2:6, NSTIM, replace=TRUE),               run=rep(i, NSTIM))   d$onset <- cumsum(d$ISI+2) -2   d }))  head(design) ##     stim   task ISI run onset ## 1 object attend   4   1     4 ## 2   face ignore   4   1    10 ## 3   tool attend   6   1    18 ## 4 object ignore   5   1    25 ## 5   tool ignore   4   1    31 ## 6  scene ignore   3   1    36 ## create a 'sampling_frame' describing the temporal outline of the scan consisting of 70 images collected every once every 2 seconds. TR <- 2 sframe <- sampling_frame(blocklens=c(100,100), TR)  ## create the event model d emodel <- event_model(onset ~ hrf(stim, task), data=design, block = ~ run, sampling_frame=sframe) ## [1] \"onset\"           \"hrf(stim, task)\" print(emodel) ## event_model  ##   onset ~ hrf(stim, task)  ##   Num Terms 1  ##   Num Events:  64  ##   Num Columns:  8  ##   Num Blocks:  2  ##  ## Term: 1  fmri_term:  convolved_term  ##    Term Name:  stim:task  ##    Formula:   ~ (stim:task - 1)  ##    Num Events:  64  ##    Num Rows:  200  ##    Num Columns:  8  ##    Conditions:  stim[face]:task[attend] stim[object]:task[attend] stim[scene]:task[attend] stim[tool]:task[attend] stim[face]:task[ignore] stim[object]:task[ignore] stim[scene]:task[ignore] stim[tool]:task[ignore]  ##    Term Types:  event_factor event_factor plot(emodel)"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_04_event_models.html","id":"an-event-related-design-with-an-amplitude-modulated-variable","dir":"Articles","previous_headings":"","what":"An event-related design with an amplitude-modulated variable","title":"Event Models","text":"","code":"TR <- 2 sframe <- sampling_frame(blocklens=70, TR) simple_design$RT <- scale(rnorm(nrow(simple_design), mean=700, sd=100))[,1]   ## create the event model d emodel <- event_model(onset ~ hrf(stim) + hrf(RT), data=simple_design, block = ~ run, sampling_frame=sframe) ## [1] \"onset\"     \"hrf(stim)\" \"hrf(RT)\" print(emodel) ## event_model  ##   onset ~ hrf(stim) + hrf(RT)  ##   Num Terms 2  ##   Num Events:  16  ##   Num Columns:  5  ##   Num Blocks:  1  ##  ## Term: 1  fmri_term:  convolved_term  ##    Term Name:  stim  ##    Formula:   ~ (stim - 1)  ##    Num Events:  16  ##    Num Rows:  70  ##    Num Columns:  4  ##    Conditions:  stim[face] stim[object] stim[scene] stim[tool]  ##    Term Types:  event_factor ##  ##  ## Term: 2  fmri_term:  convolved_term  ##    Term Name:  RT  ##    Formula:   ~ (RT - 1)  ##    Num Events:  16  ##    Num Rows:  70  ##    Num Columns:  1  ##    Conditions:  RT  ##    Term Types:  event_variable plot(emodel, \"RT\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_04_event_models.html","id":"an-event-related-design-with-an-amplitude-modulated-variable-crossed-with-factor","dir":"Articles","previous_headings":"","what":"An event-related design with an amplitude-modulated variable crossed with factor","title":"Event Models","text":"","code":"TR <- 2 sframe <- sampling_frame(blocklens=70, TR)   simple_design$RT <- scale(rnorm(nrow(simple_design), mean=700, sd=100))  ## create the event model d emodel <- event_model(onset ~ hrf(stim) + hrf(stim, RT), data=simple_design, block = ~ run, sampling_frame=sframe) ## [1] \"onset\"         \"hrf(stim)\"     \"hrf(stim, RT)\" print(emodel) ## event_model  ##   onset ~ hrf(stim) + hrf(stim, RT)  ##   Num Terms 2  ##   Num Events:  16  ##   Num Columns:  8  ##   Num Blocks:  1  ##  ## Term: 1  fmri_term:  convolved_term  ##    Term Name:  stim  ##    Formula:   ~ (stim - 1)  ##    Num Events:  16  ##    Num Rows:  70  ##    Num Columns:  4  ##    Conditions:  stim[face] stim[object] stim[scene] stim[tool]  ##    Term Types:  event_factor ##  ##  ## Term: 2  fmri_term:  convolved_term  ##    Term Name:  stim:RT  ##    Formula:   ~ (stim:RT - 1)  ##    Num Events:  16  ##    Num Rows:  70  ##    Num Columns:  4  ##    Conditions:  stim[face]:RT stim[object]:RT stim[scene]:RT stim[tool]:RT  ##    Term Types:  event_factor event_variable plot(emodel, \"stim:RT\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_04_event_models.html","id":"trialwise-event-model-to-construct-beta-series-estimates","dir":"Articles","previous_headings":"","what":"Trialwise event model to construct “beta-series” estimates","title":"Event Models","text":"","code":"TR <- 2 sframe <- sampling_frame(blocklens=70, TR)  # create the event model d emodel <- event_model(onset ~ trialwise(), data=simple_design, block = ~ run, sampling_frame=sframe) ## [1] \"onset\"       \"trialwise()\" print(emodel) ## event_model  ##   onset ~ trialwise()  ##   Num Terms 1  ##   Num Events:  16  ##   Num Columns:  16  ##   Num Blocks:  1  ##  ## Term: 1  fmri_term:  trialwise_convolved_term  ##    Term Name:  trialwise  ##    Formula:   ~ (trialwise - 1)  ##    Num Events:  16  ##    Num Rows:  70  ##    Num Columns:  16  ##    Conditions:  trialwise[01] trialwise[02] trialwise[03] trialwise[04] trialwise[05] trialwise[06] trialwise[07] trialwise[08] trialwise[09] trialwise[10] trialwise[11] trialwise[12] trialwise[13] trialwise[14] trialwise[15] trialwise[16]  ##    Term Types:  event_factor plot(emodel, \"trialwise\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_05_contrasts.html","id":"contrasts","dir":"Articles","previous_headings":"","what":"Contrasts","title":"Contrasts","text":"Statistical contrasts important component fMRI analyses. Contrasts allow testing hypotheses relative brain activity two conditions. aim provide flexible interface describing contrasts generating contrast weight vectors can applied linear models.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_05_contrasts.html","id":"a-simple-2-by-2-experiment","dir":"Articles","previous_headings":"Contrasts","what":"A simple 2 by 2 experiment","title":"Contrasts","text":"approach take specifying contrasts formulate regular R expressions using ~ operator. demonstrate, lets start simple two--two design factors category levels [face,scene] attention levels [attend,ignore]. simple design, assume condition repeated twice single run. First construct fMRI design follows:","code":"design <- expand.grid(category=c(\"face\", \"scene\"), attention=c(\"attend\", \"ignore\"), replication=c(1,2)) design$onsets <- seq(1, 100, length.out=nrow(design)) design$block <- rep(1,nrow(design))"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_05_contrasts.html","id":"creating-contrasts-to-test-experimental-effects","dir":"Articles","previous_headings":"Contrasts","what":"Creating contrasts to test experimental effects","title":"Contrasts","text":"two two design, number experimental effects might interested testing, example: (1) effect category (face > scene), (2) effect attention (attend > ignored), (3) interaction category attention. effects can formulated contrasts weighted averages condition effects, yielding directional (.e. signed) t-statistics. show contrast can expressed: face_scene <- pair_contrast(~ category == \"face\", ~ category == \"scene\") attend_ignored <- pair_contrast(~ attention == \"attend\", ~ attention == \"ignored\") category_by_attention <- contrast(~ (face:attend - face:ignored) - (scene:attend + scene:ignored), name=\"category_by_attention\")) following sections explain syntax used examples .","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_05_contrasts.html","id":"contrasting-two-sets-of-conditions","dir":"Articles","previous_headings":"Contrasts","what":"Contrasting two sets of conditions","title":"Contrasts","text":"often want compare two conditions, two sets conditions, difference fMRI activity. contrasts can described, generically, involving expression - B, represents weights first set conditions B represents weights second set conditions. sum weights 1 sum ‘B’ weights also 1, difference weights (- B) 0. Thus, difference weights sum zero, want null hypothesis == B.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_05_contrasts.html","id":"the-pair_contrast-function","dir":"Articles","previous_headings":"Contrasts","what":"The pair_contrast function","title":"Contrasts","text":"simple way contruct sort - B contrast use pair_contrast function, takes arguments two “matching expressions”, B. example 1 previous section, first expression (category == \"face\") matches conditions category factor equals level “face”. second expression (category == \"scene\") matches conditions category factor equals level “scene”. compute contrast weights, every matching level two expressions assigned weight 1 match zero otherwise. respective binary weight vectors normalized sum 1 subtracted (- B) form contrast weights. Notice examples, contrasts defined abstractly without supplying corresponding design information. compute contrast weights, however, need supply design information. , show complete example. relevant model term (term model): Now, create two pair_contrasts compute weights: wts1: wts2:","code":"sframe <- sampling_frame(100, 2) emodel <- event_model(onsets ~ hrf(category,attention), block=~block, data=design, sampling_frame=sframe) ## [1] \"onsets\"                   \"hrf(category, attention)\" term1 <- terms(emodel)[[1]] ## fmri_term:  convolved_term  ##    Term Name:  category:attention  ##    Formula:   ~ (category:attention - 1)  ##    Num Events:  8  ##    Num Rows:  100  ##    Num Columns:  4  ##    Conditions:  category[face]:attention[attend] category[scene]:attention[attend] category[face]:attention[ignore] category[scene]:attention[ignore]  ##    Term Types:  event_factor event_factor con1 <- pair_contrast(~ category == \"face\", ~ category == \"scene\", name=\"face_scene\") con2 <- pair_contrast(~ attention == \"attend\", ~ attention == \"ignore\", name=\"attend_ignore\")  wts1 <- contrast_weights(con1, term1) wts2 <- contrast_weights(con2, term1) ## contrast: face_scene  ##  A:  ~category == \"face\"  ##  B:  ~category == \"scene\"  ##  term:  category:attention  ##  weights:   ##                                 [,1] ## category#face:attention#attend   0.5 ## category#scene:attention#attend -0.5 ## category#face:attention#ignore   0.5 ## category#scene:attention#ignore -0.5 ##  conditions:  category#face:attention#attend category#scene:attention#attend category#face:attention#ignore category#scene:attention#ignore ## contrast: attend_ignore  ##  A:  ~attention == \"attend\"  ##  B:  ~attention == \"ignore\"  ##  term:  category:attention  ##  weights:   ##                                 [,1] ## category#face:attention#attend   0.5 ## category#scene:attention#attend  0.5 ## category#face:attention#ignore  -0.5 ## category#scene:attention#ignore -0.5 ##  conditions:  category#face:attention#attend category#scene:attention#attend category#face:attention#ignore category#scene:attention#ignore"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_05_contrasts.html","id":"unit-contrasts-and-the-implicit-baseline","dir":"Articles","previous_headings":"","what":"Unit contrasts and the “implicit baseline”","title":"Contrasts","text":"“unit contrast” tests whether activation, averaged one conditions, greater baseline activity. case “baseline” defined level activation captured intercept term, implicit baseline fMRI parlance. beta estimates already expressed relative intercept term, main effect contrast vectors always sum 1, rather 0. therefore refer sum--one contrasts : “unit contrasts”. show construct two unit contrasts, one testing effect face > baseline scene - baseline: wts1: wts2:","code":"con1 <- unit_contrast(~ category == \"face\", name=\"face_baseline\") con2 <- unit_contrast(~ category == \"scene\",name=\"scene_baseline\")  wts1 <- contrast_weights(con1, term1) wts2 <- contrast_weights(con2, term1) ## contrast: face_baseline  ##  A:  ~category == \"face\"  ##  term:  category:attention  ##  weights:   ##                                 [,1] ## category#face:attention#attend  0.25 ## category#scene:attention#attend 0.25 ## category#face:attention#ignore  0.25 ## category#scene:attention#ignore 0.25 ##  conditions:  category#face:attention#attend category#scene:attention#attend category#face:attention#ignore category#scene:attention#ignore ## contrast: scene_baseline  ##  A:  ~category == \"scene\"  ##  term:  category:attention  ##  weights:   ##                                 [,1] ## category#face:attention#attend  0.25 ## category#scene:attention#attend 0.25 ## category#face:attention#ignore  0.25 ## category#scene:attention#ignore 0.25 ##  conditions:  category#face:attention#attend category#scene:attention#attend category#face:attention#ignore category#scene:attention#ignore"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_06_afni.html","id":"constructing-an-fmri-regression-model-and-translating-it-for-afnis-3ddeconvolve","dir":"Articles","previous_headings":"","what":"Constructing an fMRI regression model and translating it for AFNI’s 3dDeconvolve","title":"Translating to AFNI 3dDeconvolve","text":"AFNI fMRI analysis packages robust efficient methods estimating voxelwise regression models. Therefore, may beneficial construct regression model R using fmrireg translate can executed using one packages. provide translation mechanism fmri_model object constructed fmrireg syntax assocaited file required execution using AFNI’s 3dDeconvolve program.","code":"## Warning: replacing previous import 'Matrix::cov2cor' by 'stats::cov2cor' when ## loading 'fmrireg' ## Warning: replacing previous import 'Matrix::toeplitz' by 'stats::toeplitz' when ## loading 'fmrireg' ## Warning: replacing previous import 'Matrix::update' by 'stats::update' when ## loading 'fmrireg'"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_06_afni.html","id":"a-simple-model","dir":"Articles","previous_headings":"","what":"A Simple Model","title":"Translating to AFNI 3dDeconvolve","text":"Lets begin simple fMRI design. Now add onset information, construct sampling_frame, create contrast, event_model:  construct baseline_model using B-spline basis:  construct fmri_model: Now need specify data model estimated . Let us pretend single 4d NIfTI file called “scan01.nii” mask file called “mask.nii”. now ready construct AFNI model specification. Note contrasts model automatically converted AFNI-style general linear tests (GLTs). Also, note since include set b-spline nuisance parameters model, polort set baseline regressors (polort = -1). change like: essentially add two sets drift regressors, bad. send options 3dDeconvolve command can add options argument, e.g. execute external 3dDeconvolve command system, follows:","code":"cond <- c(\"face\", \"scene\", \"tool\", \"object\") NSTIM <- length(cond)*4  simple_design <- data.frame(stim=factor(sample(rep(cond, 4))),                       ISI=sample(4:7, NSTIM, replace=TRUE),                       run=rep(1, NSTIM),                      trial=factor(1:NSTIM)) simple_design$onset <- cumsum(simple_design$ISI+2) -2 sframe <- sampling_frame(blocklens=70, TR=2)  con1 <- pair_contrast(~ stim == \"face\", ~stim == \"scene\", name=\"face_scene\")  emodel <- event_model(onset ~ hrf(stim, contrasts=con1), data=simple_design, block = ~ run, sampling_frame=sframe) ## [1] \"onset\"                       \"hrf(stim, contrasts = con1)\" plot(emodel) bmodel <- baseline_model(basis=\"bs\", degree=5, sframe=sframe) print(bmodel) ## baseline_model  ##    name:  baseline_bs_5  ##    basis type:  bs  ##    degree:  5  ##    drift columns:  5  ##    constant columns:  1  ##    nuisance columns:  0  ##    total columns:  6  ##    design_matrix:   ## # A tibble: 70 × 6 ##    constant_global base_bs1_block_1 base_bs2_block_1 base_bs3_block_1 ##              <dbl>            <dbl>            <dbl>            <dbl> ##  1               1           0               0              0         ##  2               1           0.0684          0.00201        0.0000296 ##  3               1           0.129           0.00769        0.000230  ##  4               1           0.182           0.0165         0.000752  ##  5               1           0.228           0.0281         0.00173   ##  6               1           0.268           0.0419         0.00327   ##  7               1           0.302           0.0576         0.00548   ##  8               1           0.331           0.0747         0.00843   ##  9               1           0.354           0.0929         0.0122    ## 10               1           0.373           0.112          0.0168    ## # ℹ 60 more rows ## # ℹ 2 more variables: base_bs4_block_1 <dbl>, base_bs5_block_1 <dbl> plot(bmodel) fmodel <- fmri_model(emodel, bmodel) dset <- fmri_dataset(scans=\"scan01.nii\",                      mask=\"mask.nii\",                      TR=2,                      run_length=70,                      event_table=simple_design,                      base_path=\".\") alm <- afni_lm(fmodel, dset) print(alm) ## AFNI linear model via 3dDeconvolve  ##   working_dir:  .  ##   number of GLTs: 1  ##   command line:  ##  3dDeconvolve -input ./scan01.nii -mask ./mask.nii -polort -1 -global_times -num_stimts 4 -num_glt 1 -stim_file 1 stim#face_reg.1D -stim_file 2 stim#object_reg.1D -stim_file 3 stim#scene_reg.1D -stim_file 4 stim#tool_reg.1D -stim_label 1 stim#face -stim_label 2 stim#object -stim_label 3 stim#scene -stim_label 4 stim#tool -ortvec constant_1.1D constant_1 -ortvec baseline_bs_5_1.1D baseline_bs_5_1 -TR_times 1 -gltsym GLT_face_scene.txt -glt_label 1 GLT_face_scene -nofullf_atall -tout -cbucket coefout -bucket statout -jobs 1 -float alm <- afni_lm(fmodel, dset, polort=2) print(alm) ## AFNI linear model via 3dDeconvolve  ##   working_dir:  .  ##   number of GLTs: 1  ##   command line:  ##  3dDeconvolve -input ./scan01.nii -mask ./mask.nii -polort 2 -global_times -num_stimts 4 -num_glt 1 -stim_file 1 stim#face_reg.1D -stim_file 2 stim#object_reg.1D -stim_file 3 stim#scene_reg.1D -stim_file 4 stim#tool_reg.1D -stim_label 1 stim#face -stim_label 2 stim#object -stim_label 3 stim#scene -stim_label 4 stim#tool -ortvec constant_1.1D constant_1 -ortvec baseline_bs_5_1.1D baseline_bs_5_1 -TR_times 1 -gltsym GLT_face_scene.txt -glt_label 1 GLT_face_scene -nofullf_atall -tout -cbucket coefout -bucket statout -jobs 1 -float alm <- afni_lm(fmodel, dset, options=list(tout=FALSE, fout=FALSE)) print(alm) ## AFNI linear model via 3dDeconvolve  ##   working_dir:  .  ##   number of GLTs: 1  ##   command line:  ##  3dDeconvolve -input ./scan01.nii -mask ./mask.nii -polort -1 -global_times -num_stimts 4 -num_glt 1 -stim_file 1 stim#face_reg.1D -stim_file 2 stim#object_reg.1D -stim_file 3 stim#scene_reg.1D -stim_file 4 stim#tool_reg.1D -stim_label 1 stim#face -stim_label 2 stim#object -stim_label 3 stim#scene -stim_label 4 stim#tool -ortvec constant_1.1D constant_1 -ortvec baseline_bs_5_1.1D baseline_bs_5_1 -TR_times 1 -gltsym GLT_face_scene.txt -glt_label 1 GLT_face_scene -nofullf_atall -cbucket coefout -bucket statout -jobs 1 -float #run(alm, outdir=\"glm_out\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/articles/a_07_trialwise.html","id":"estimating-single-trial-event-amplitudes-for-use-in-beta-series-analyses-and-mvpa-analyses-","dir":"Articles","previous_headings":"","what":"Estimating single-trial event amplitudes for use in “beta series” analyses and MVPA analyses.","title":"Single Trial Beta Estimation","text":"common fMRI analysis want obtain estimates BOLD amplitude trial (rather condition) experiment. Estimation single-trial beta coefficients can done fmrireg estimate_betas function. First load experimental design. Now generate fMRI data using random values. Now create instance type fmri_mem_dataset encapsulates infromation data, temporal layout, experimental design “memory” fmri dataset. Now ’re ready run beta estimation analysis. two components model: fixed effects formula random effects formula. fixed effects part models condition-specific responses, random effects part models trial-specific responses. random effect part, want model every onset separately, use trialwise hrf modeling function. fixed part, use standard hrf modeling function. method use “pls” partial least squares (via pls package), effectively acts regularized least squares estimation procedure. Simulations show pls produces trialwise beta estimates closely space onsets (e.g. overlapping hrfs) similar “least squares sum” approach (citation needed). modeling mean effect fixed = onset ~ hrf(constant) “random effects” onset ~ trialwise() capture deviations mean, regularization achieved using partial least squares estimation small number components (, n=3). fixed effects can also modeled, include events interest covaried estimating beta coefficients interest. onsets closely space together, ordinary least squares using “ols” method appropriate. method “ols”, however, constant fixed effect used, since linear combination random effects, omit “fixed” term. can plot fixed effects model, single regressor.  can also plot random effects model, one regressor per trial.","code":"library(dplyr) library(fmrireg) facedes <- read.table(system.file(\"extdata\", \"face_design.txt\", package = \"fmrireg\"), header=TRUE) %>% filter(run == 1) ## we had a constant value to the design used later to model the mean stimulus response over all trials. facedes$constant <- factor(rep(1, nrow(facedes))) D <- 5 scans <- lapply(1:length(unique(facedes$run)), function(i) {     arr <- array(rnorm(D*D*D*300), c(D,D,D, 300))     bspace <- neuroim2::NeuroSpace(dim=c(D,D,D,300))     neuroim2::NeuroVec(arr, bspace) })    mask <- neuroim2::LogicalNeuroVol(array(rnorm(D*D*D), c(D,D,D)) > 0, neuroim2::NeuroSpace(dim=c(D,D,D))) dset <- fmri_mem_dataset(scans=scans,                   mask=mask,                   TR=1.5,                   event_table=facedes) res <- fmrireg:::estimate_betas(dset, fixed = onset ~ hrf(constant), ran = onset ~ trialwise(), block = ~ run,                         method=\"pls\", ncomp=3) ## [1] \"onset\"         \"hrf(constant)\" ## [1] \"onset\"       \"trialwise()\" names(res) ## [1] \"betas_fixed\"  \"betas_ran\"    \"design_ran\"   \"design_fixed\" \"design_base\"  ## [6] \"basemod\"      \"fixed_model\"  \"ran_model\" res_ols <- fmrireg:::estimate_betas(dset, ran = onset ~ trialwise(), block = ~ run,                         method=\"ols\", ncomp=3) ## [1] \"onset\"       \"trialwise()\" plot(res$fixed_model) plot(res$ran_model)"},{"path":"https://bbuchsbaum.github.io/fmrireg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bradley Buchsbaum. Author, maintainer.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Buchsbaum B (2023). fmrireg: R package anlysis fmri data. R package version 0.0.1, https://github.com/bbuchsbaum/fmrireg.","code":"@Manual{,   title = {fmrireg: R package for the anlysis of fmri data},   author = {Bradley Buchsbaum},   year = {2023},   note = {R package version 0.0.1},   url = {https://github.com/bbuchsbaum/fmrireg}, }"},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/index.html","id":"in-development","dir":"","previous_headings":"","what":"In Development","title":"Regression analaysis for Functional Magnetic Resonance imaging (fMRI) data","text":"fmrireg package currently development. goal project provide functions carrying regression anaysis fMRI data. ’s Ready Primetime, still look vignettes:","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Regression analaysis for Functional Magnetic Resonance imaging (fMRI) data","text":"See examples use fmrireg vignettes.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/BSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"B-spline basis — BSpline","title":"B-spline basis — BSpline","text":"Generate B-spline basis matrix polynomial spline.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/BSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"B-spline basis — BSpline","text":"","code":"BSpline(x, degree)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/BSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"B-spline basis — BSpline","text":"x numeric vector evaluate spline. Missing values allowed x degree degree piecewise polynomial","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Fcontrasts.event_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute F-contrasts for Event Term — Fcontrasts.event_term","title":"Compute F-contrasts for Event Term — Fcontrasts.event_term","text":"function computes F-contrasts event term object, considering main effects interactions.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Fcontrasts.event_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute F-contrasts for Event Term — Fcontrasts.event_term","text":"","code":"# S3 method for event_term Fcontrasts(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Fcontrasts.event_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute F-contrasts for Event Term — Fcontrasts.event_term","text":"x event term object ... Additional arguments passed function","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Fcontrasts.event_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute F-contrasts for Event Term — Fcontrasts.event_term","text":"list contrast matrices main effects interactions","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Fcontrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Fcontrasts — Fcontrasts","title":"Fcontrasts — Fcontrasts","text":"generate set Fcontrasts model term","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Fcontrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fcontrasts — Fcontrasts","text":"","code":"Fcontrasts(x, ...)  # S3 method for convolved_term Fcontrasts(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Fcontrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fcontrasts — Fcontrasts","text":"x term ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/HRF-class.html","id":null,"dir":"Reference","previous_headings":"","what":"AFNI HRF Constructor Function — AFNI_HRF","title":"AFNI HRF Constructor Function — AFNI_HRF","text":"AFNI_HRF function creates object representing AFNI-specific hemodynamic response function (HRF). class constructor AFNI HRFs.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/HRF-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AFNI HRF Constructor Function — AFNI_HRF","text":"","code":"AFNI_HRF(name, nbasis, params)  HRF_GAUSSIAN(t, mean = 6, sd = 2)  HRF_BSPLINE(t, span = 20, N = 5, degree = 3)  HRF_SPMG1(t, P1 = 5, P2 = 15, A1 = 0.0833)  HRF_SPMG2(t)  HRF_SPMG3(t)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/HRF-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AFNI HRF Constructor Function — AFNI_HRF","text":"name string specifying name AFNI HRF. nbasis integer representing number basis functions AFNI HRF. params list containing parameter values AFNI HRF. span numeric value representing span seconds HRF. Default 24.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/HRF-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AFNI HRF Constructor Function — AFNI_HRF","text":"AFNI_HRF object specified properties.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/HRF-class.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"AFNI HRF Constructor Function — AFNI_HRF","text":"AFNI_HRF(): AFNI hrf HRF_GAUSSIAN(): Gaussian hrf HRF_BSPLINE(): B-spline hrf HRF_SPMG1(): SPMG1 hrf HRF_SPMG2(): SPMG2 hrf HRF_SPMG3(): SPMG3 hrf","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Ident.html","id":null,"dir":"Reference","previous_headings":"","what":"Ident — Ident","title":"Ident — Ident","text":"basis applies identity transform set raw variables.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Ident.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ident — Ident","text":"","code":"Ident(...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Ident.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ident — Ident","text":"... list variable names","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Ident.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ident — Ident","text":"instance class Ident extending ParametricBasis","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Polynomila basis — Poly","title":"Polynomila basis — Poly","text":"Orthogonal polynomial expansion linear term based poly","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polynomila basis — Poly","text":"","code":"Poly(x, degree)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Poly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polynomila basis — Poly","text":"x numeric vector evaluate polynomial. Missing values allowed x. degree degree polynomial. Must less number unique points.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/Poly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polynomila basis — Poly","text":"instance class Poly extending ParametricBasis","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_hrf.html","id":null,"dir":"Reference","previous_headings":"","what":"construct an native AFNI hrf specification for '3dDeconvolve' with the 'stim_times' argument. — afni_hrf","title":"construct an native AFNI hrf specification for '3dDeconvolve' with the 'stim_times' argument. — afni_hrf","text":"construct native AFNI hrf specification '3dDeconvolve' 'stim_times' argument.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_hrf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct an native AFNI hrf specification for '3dDeconvolve' with the 'stim_times' argument. — afni_hrf","text":"","code":"afni_hrf(   ...,   basis = c(\"spmg1\", \"block\", \"dmblock\", \"tent\", \"csplin\", \"poly\", \"sin\", \"gam\", \"spmg2\",     \"spmg3\", \"wav\"),   onsets = NULL,   durations = NULL,   prefix = NULL,   subset = NULL,   nbasis = 1,   contrasts = NULL,   id = NULL,   start = NULL,   stop = NULL )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_hrf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"construct an native AFNI hrf specification for '3dDeconvolve' with the 'stim_times' argument. — afni_hrf","text":"... variable names, must present enclosing environment (e.g. event_model object) basis impulse response function name pre-supplied function, one : \"gamma\", \"spmg1\", \"spmg2\", \"spmg3\", \"bspline\", \"gaussian\". onsets optional onsets override. missing, onsets taken event_model durations optional durations override. missing, onsets taken event_model prefix character string prepended variable names used identify term. Can used disambiguate two hrf terms variable(s) different onsets basis functions. subset expression indicating subset 'onsets' keep nbasis number basis functions -- used hemodynamic response functions (e.g. bspline) take variable number bases. contrasts one contrast_spec objects created contrast function. multiple contrasts required, wrapped list contrast_set. id  unique character identifier used refer term, otherwise determined variable names. start start window sin/poly/csplin models stop stop time sin/poly/csplin models","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up an fMRI linear model for AFNI's 3dDeconvolve — afni_lm","title":"Set up an fMRI linear model for AFNI's 3dDeconvolve — afni_lm","text":"function prepares fMRI linear model AFNI's 3dDeconvolve tool. takes fmri_model object, fmri_dataset object, various options control fitting process.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up an fMRI linear model for AFNI's 3dDeconvolve — afni_lm","text":"","code":"afni_lm(   fmri_mod,   dataset,   working_dir = \".\",   polort = -1,   jobs = 1,   censor = NULL,   options = list() )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up an fMRI linear model for AFNI's 3dDeconvolve — afni_lm","text":"fmri_mod fmri_model object containing event baseline models dataset fmri_dataset object containing scan data necessary information working_dir working directory (default current directory) polort number polynomial baseline regressors (default suppress 'polort') jobs number jobs use '3dDeconvolve' (default 1) censor list censoring vectors, one per run, single vector equal total number scans (default NULL) options list options sent 3dDeconvolve (default empty list)","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up an fMRI linear model for AFNI's 3dDeconvolve — afni_lm","text":"afni_lm_spec object containing fitted model, dataset, working directory, options, command","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up an fMRI linear model for AFNI's 3dDeconvolve — afni_lm","text":"","code":"etab <- data.frame(onset=c(1,30,15,25), fac=factor(c(\"A\", \"B\", \"A\", \"B\")),  run=c(1,1,2,2)) dset <- fmri_dataset(scans=c(\"s1.nii\", \"s2.nii\"), mask=\"mask.nii\", TR=1,  run_length=c(50,50), event_table=etab)  emodel <- event_model(onset ~ hrf(fac), block = ~ run, data=etab,  sampling_frame=dset$sampling_frame) #> [1] \"onset\"    \"hrf(fac)\" bmodel <- baseline_model(\"bs\", degree=4, sframe=dset$sampling_frame) fmod <- fmri_model(emodel, bmodel) alm <- afni_lm(fmod, dset, jobs=2, options=list(tout=TRUE, errts=\"residuals.nii.gz\"))"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_trialwise.html","id":null,"dir":"Reference","previous_headings":"","what":"construct an native AFNI hrf specification for '3dDeconvolve' and individually modulated events using the 'stim_times_IM' argument. — afni_trialwise","title":"construct an native AFNI hrf specification for '3dDeconvolve' and individually modulated events using the 'stim_times_IM' argument. — afni_trialwise","text":"construct native AFNI hrf specification '3dDeconvolve' individually modulated events using 'stim_times_IM' argument.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_trialwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct an native AFNI hrf specification for '3dDeconvolve' and individually modulated events using the 'stim_times_IM' argument. — afni_trialwise","text":"","code":"afni_trialwise(   label,   basis = c(\"spmg1\", \"block\", \"dmblock\", \"gamma\", \"wav\"),   onsets = NULL,   durations = 0,   subset = NULL,   id = NULL,   start = 0,   stop = 22 )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_trialwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"construct an native AFNI hrf specification for '3dDeconvolve' and individually modulated events using the 'stim_times_IM' argument. — afni_trialwise","text":"label name regressor basis impulse response function name pre-supplied function, one : \"gamma\", \"spmg1\", \"spmg2\", \"spmg3\", \"bspline\", \"gaussian\". onsets optional onsets override. missing, onsets taken event_model durations optional durations override. missing, onsets taken event_model subset expression indicating subset 'onsets' keep id  unique character identifier used refer term, otherwise determined variable names. start start hrf (multiple basis hrfs) stop end hrf (multiple basis hrfs)","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/afni_trialwise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"construct an native AFNI hrf specification for '3dDeconvolve' and individually modulated events using the 'stim_times_IM' argument. — afni_trialwise","text":"","code":"tw <- afni_trialwise(\"trialwise\", basis=\"gamma\", onsets=seq(1,100,by=5))"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/amplitudes.html","id":null,"dir":"Reference","previous_headings":"","what":"get amplitude vector — amplitudes","title":"get amplitude vector — amplitudes","text":"get intensity amplitudes associated event","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/amplitudes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get amplitude vector — amplitudes","text":"","code":"amplitudes(x)  # S3 method for regressor amplitudes(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/amplitudes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get amplitude vector — amplitudes","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a model specification for modeling low-frequency drift in fmri time series. — baseline","title":"Create a model specification for modeling low-frequency drift in fmri time series. — baseline","text":"Create model specification modeling low-frequency drift fmri time series.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a model specification for modeling low-frequency drift in fmri time series. — baseline","text":"","code":"baseline(   degree = 1,   basis = c(\"constant\", \"poly\", \"bs\", \"ns\"),   name = NULL,   intercept = c(\"runwise\", \"global\", \"none\") )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a model specification for modeling low-frequency drift in fmri time series. — baseline","text":"degree number basis terms image block (ignored 'constant' basis) basis type polynomial basis. name name term intercept type intercept include constant whether include intercept term","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_model.html","id":null,"dir":"Reference","previous_headings":"","what":"construct a baseline model to model noise and other non-event-related sources of variance — baseline_model","title":"construct a baseline model to model noise and other non-event-related sources of variance — baseline_model","text":"construct baseline model model noise non-event-related sources variance","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct a baseline model to model noise and other non-event-related sources of variance — baseline_model","text":"","code":"baseline_model(   basis = c(\"constant\", \"poly\", \"bs\", \"ns\"),   degree = 1,   sframe,   intercept = c(\"runwise\", \"global\", \"none\"),   nuisance_list = NULL )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"construct a baseline model to model noise and other non-event-related sources of variance — baseline_model","text":"basis basis function type degree degree spline function. sframe sframe sampling_frame object intercept whether include intercept block. Automatically set FALSE basis == \"constant\". nuisance_list list nuisance matrices, one matrix per fMRI block","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"construct a baseline model to model noise and other non-event-related sources of variance — baseline_model","text":"","code":"## bspline basis with degree = 3. This will produce a design matrix with three  ## splines regressor and a constant intercept. sframe <- sampling_frame(blocklens=c(100,100), TR=2) bmod <- baseline_model(basis=\"bs\", degree=3, sframe=sframe) bmod_global <- baseline_model(basis=\"bs\", degree=3,  sframe=sframe, intercept=\"global\")  bmod_nointercept <- baseline_model(basis=\"bs\", degree=3,  sframe=sframe, intercept=\"none\")  stopifnot(ncol(design_matrix(bmod)) == 8) stopifnot(ncol(design_matrix(bmod_global)) == 7) stopifnot(ncol(design_matrix(bmod_nointercept)) == 6)  ## polynomial with no intercept term bmod <- baseline_model(basis=\"poly\", degree=3, sframe=sframe, intercept=\"none\")  ## a baseline model that only has dummy-coded intercept terms, one per block,  ## i.e. to model runwise mean shifts only.  bmod <- baseline_model(basis=\"constant\", degree=1, sframe=sframe)  ## global intercept only bmod <- baseline_model(basis=\"constant\", degree=1, sframe=sframe, intercept=\"global\")   ## add an arbitrary nuisance matrix with two columns, i.e. motion regressors,  ## physiological noise, etc.  nuismat <- matrix(rnorm(100*2), 100, 2) bmod <- baseline_model(basis=\"bs\", degree=3, sframe=sframe,  nuisance_list=list(nuismat, nuismat)) stopifnot(ncol(design_matrix(bmod)) == 12)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_term.html","id":null,"dir":"Reference","previous_headings":"","what":"baseline_term — baseline_term","title":"baseline_term — baseline_term","text":"baseline_term","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"baseline_term — baseline_term","text":"","code":"baseline_term(varname, mat, colind, rowind)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"baseline_term — baseline_term","text":"varname name term mat matrix covariates colind column indices rowind row indices","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"baseline_terms — baseline_terms","title":"baseline_terms — baseline_terms","text":"function extracts list 'baseline_term's provided model object x.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"baseline_terms — baseline_terms","text":"","code":"baseline_terms(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"baseline_terms — baseline_terms","text":"x model object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"baseline_terms — baseline_terms","text":"list containing 'baseline_term's.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/baseline_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"baseline_terms — baseline_terms","text":"Extract list 'baseline_term's model object.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/beta_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta Statistics for Linear Model — beta_stats","title":"Beta Statistics for Linear Model — beta_stats","text":"function calculates beta statistics linear model fit.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/beta_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta Statistics for Linear Model — beta_stats","text":"","code":"beta_stats(lmfit, varnames, se = TRUE)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/beta_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta Statistics for Linear Model — beta_stats","text":"lmfit Fitted linear model object. varnames Vector variable names. se Logical flag indicating whether calculate standard errors (default: TRUE).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/beta_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta Statistics for Linear Model — beta_stats","text":"list containing following elements: estimate: Estimated beta coefficients. stat: t-statistics beta coefficients (se = TRUE). se: Standard errors beta coefficients (se = TRUE). prob: Probabilities associated t-statistics (se = TRUE). stat_type: Type statistics calculated.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/beta_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta Statistics for Linear Model — beta_stats","text":"","code":"data(mtcars) lm_fit <- lm(mpg ~ wt + qsec + am, data = mtcars) beta_stats(lm_fit, c(\"Intercept\", \"wt\", \"qsec\", \"am\")) #> Error in beta_stats(lm_fit, c(\"Intercept\", \"wt\", \"qsec\", \"am\")): could not find function \"beta_stats\""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/block.html","id":null,"dir":"Reference","previous_headings":"","what":"a block variable, which is constant over the span of a scanning run — block","title":"a block variable, which is constant over the span of a scanning run — block","text":"block variable, constant span scanning run","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a block variable, which is constant over the span of a scanning run — block","text":"","code":"block(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"a block variable, which is constant over the span of a scanning run — block","text":"x block variable","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"a block variable, which is constant over the span of a scanning run — block","text":"instance class blockspec","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/block_term.html","id":null,"dir":"Reference","previous_headings":"","what":"block_term — block_term","title":"block_term — block_term","text":"construct constant term","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/block_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"block_term — block_term","text":"","code":"block_term(   varname,   blockids,   expanded_blockids,   mat,   type = c(\"runwise\", \"global\") )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/block_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"block_term — block_term","text":"varname name term blockids ordered sequence blockids expanded_blockids vector blockids expanded run mat matrix covariates type block variable type: 'runwise' 'global'","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/blockids.html","id":null,"dir":"Reference","previous_headings":"","what":"get the block indices — blockids","title":"get the block indices — blockids","text":"get block number associated image/scan","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/blockids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the block indices — blockids","text":"","code":"blockids(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/blockids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the block indices — blockids","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/blocklens.html","id":null,"dir":"Reference","previous_headings":"","what":"get block lengths — blocklens","title":"get block lengths — blocklens","text":"get number scans/images block","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/blocklens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get block lengths — blocklens","text":"","code":"blocklens(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/blocklens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get block lengths — blocklens","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/build_afni_stims.html","id":null,"dir":"Reference","previous_headings":"","what":"generate a set of AFNI stimuli for '3dDeconvolve' — build_afni_stims","title":"generate a set of AFNI stimuli for '3dDeconvolve' — build_afni_stims","text":"generate set AFNI stimuli '3dDeconvolve'","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/build_afni_stims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate a set of AFNI stimuli for '3dDeconvolve' — build_afni_stims","text":"","code":"build_afni_stims(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/build_afni_stims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate a set of AFNI stimuli for '3dDeconvolve' — build_afni_stims","text":"x term ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/build_decon_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Build 3dDeconvolve command for an fMRI model — build_decon_command","title":"Build 3dDeconvolve command for an fMRI model — build_decon_command","text":"function constructs command string associated options required run 3dDeconvolve using specified fMRI model, dataset, working directory, options. command string can used perform actual fMRI analysis using AFNI software.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/build_decon_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build 3dDeconvolve command for an fMRI model — build_decon_command","text":"","code":"build_decon_command(model, dataset, working_dir, opts)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/build_decon_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build 3dDeconvolve command for an fMRI model — build_decon_command","text":"model fMRI model, usually created using fmri_model function dataset fMRI dataset, usually created using fmri_dataset function working_dir working directory opts list options 3dDeconvolve command","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/build_decon_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build 3dDeconvolve command for an fMRI model — build_decon_command","text":"list containing: - cmd: 3dDeconvolve command string - cmdlines: command lines 3dDeconvolve command - afni_stims: list AFNI stimulus objects - afni_baseline_mats: list AFNI baseline matrices - gltfiles: list GLT (general linear test) filenames - gltnames: list GLT names - glts: list GLT objects - gltstr: list GLT strings - censor: censoring vector","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/cells.html","id":null,"dir":"Reference","previous_headings":"","what":"The experimental cells of a design — cells","title":"The experimental cells of a design — cells","text":"return experimental cells model term table function extracts cells event_factor object, optionally removing empty cells. Note removal empty cells implemented. function extracts cells event_term object, optionally removing empty cells.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The experimental cells of a design — cells","text":"","code":"cells(x, ...)  # S3 method for event_factor cells(x, drop.empty = TRUE, ...)  # S3 method for event_term cells(x, drop.empty = TRUE, ...)  # S3 method for covariate_convolved_term cells(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The experimental cells of a design — cells","text":"x event_term object. ... Additional arguments passed function. drop.empty Logical. TRUE, empty cells removed.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The experimental cells of a design — cells","text":"list data frames containing cells event_factor object. tibble containing cells event_term object, additional \"count\" attribute.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The experimental cells of a design — cells","text":"","code":"evlist <- list(fac1=factor(c(\"A\", \"B\", \"A\", \"B\")),                 fac2=factor(c(\"1\", \"1\", \"2\", \"2\"))) eterm <- event_term(evlist,onsets=1:4, blockids=rep(1,4)) cells(eterm) #> # A tibble: 4 × 2 #>   fac1  fac2  #>   <fct> <fct> #> 1 A     1     #> 2 B     1     #> 3 A     2     #> 4 B     2"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.fmri_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Chunkwise Linear Model for fMRI Dataset — chunkwise_lm.fmri_dataset","title":"Chunkwise Linear Model for fMRI Dataset — chunkwise_lm.fmri_dataset","text":"function performs chunkwise linear model analysis fMRI dataset, splitting dataset chunks running linear model chunk.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.fmri_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chunkwise Linear Model for fMRI Dataset — chunkwise_lm.fmri_dataset","text":"","code":"# S3 method for fmri_dataset chunkwise_lm(   dset,   model,   conlist,   fcon,   nchunks,   robust = FALSE,   verbose = FALSE )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.fmri_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chunkwise Linear Model for fMRI Dataset — chunkwise_lm.fmri_dataset","text":"dset object class fmri_dataset. model fMRI model used analysis. conlist list contrasts used analysis. fcon F-contrasts used analysis. nchunks number chunks divide dataset . robust Whether use robust linear modeling (default FALSE). verbose Whether display progress messages (default FALSE).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.fmri_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chunkwise Linear Model for fMRI Dataset — chunkwise_lm.fmri_dataset","text":"list containing unpacked chunkwise results.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"estimate a linear model sequentially for each ","title":"estimate a linear model sequentially for each ","text":"estimate linear model sequentially \"chunk\" (matrix time-series) data","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimate a linear model sequentially for each ","text":"","code":"chunkwise_lm(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimate a linear model sequentially for each ","text":"x dataset ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.latent_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for performing chunkwise linear regression on latent datasets — chunkwise_lm.latent_dataset","title":"Internal function for performing chunkwise linear regression on latent datasets — chunkwise_lm.latent_dataset","text":"Internal function performing chunkwise linear regression latent datasets","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.latent_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for performing chunkwise linear regression on latent datasets — chunkwise_lm.latent_dataset","text":"","code":"# S3 method for latent_dataset chunkwise_lm(   dset,   model,   conlist,   nchunks,   robust = FALSE,   verbose = FALSE,   autocor = c(\"auto\", \"ar1\", \"ar2\", \"arma\", \"none\"),   bootstrap = FALSE,   nboot = 1000,   boot_rows = FALSE )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.latent_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for performing chunkwise linear regression on latent datasets — chunkwise_lm.latent_dataset","text":"dset latent dataset object. model fmri model object. conlist list contrasts. nchunks number chunks use regression. robust Logical, TRUE, robust regression performed. verbose Logical, TRUE, additional output printed. autocor character string specifying autocorrelation method use. bootstrap Logical, TRUE, bootstrapping performed. nboot number bootstrap iterations. boot_rows Logical, TRUE, bootstrap row-wise.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.latent_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function for performing chunkwise linear regression on latent datasets — chunkwise_lm.latent_dataset","text":"list containing results chunkwise linear regression.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/chunkwise_lm.latent_dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal function for performing chunkwise linear regression on latent datasets — chunkwise_lm.latent_dataset","text":"function internal helper function fmri_latent_lm, performs chunkwise linear regression latent datasets. function handles different autocorrelation options, well robust regression bootstrapping.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/columns.html","id":null,"dir":"Reference","previous_headings":"","what":"columns — columns","title":"columns — columns","text":"return column labels associated elements term.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"columns — columns","text":"","code":"columns(x)  # S3 method for event_term columns(x)  # S3 method for event_seq columns(x)  # S3 method for event_matrix columns(x)  # S3 method for event_set columns(x)  # S3 method for event_basis columns(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"columns — columns","text":"x term","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditions — conditions","title":"Conditions — conditions","text":"return set condition labels associated model term","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditions — conditions","text":"","code":"conditions(x, ...)  # S3 method for event_model conditions(x, ...)  # S3 method for fmri_term conditions(x, ...)  # S3 method for convolved_term conditions(x, ...)  # S3 method for afni_hrf_convolved_term conditions(x, ...)  # S3 method for afni_trialwise_convolved_term conditions(x, ...)  # S3 method for event_term conditions(x, drop.empty = TRUE, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditions — conditions","text":"x model term ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/conform_len.html","id":null,"dir":"Reference","previous_headings":"","what":"check vector is of length 1 or repeated for supplied length — conform_len","title":"check vector is of length 1 or repeated for supplied length — conform_len","text":"check vector length 1 repeated supplied length","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/conform_len.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check vector is of length 1 or repeated for supplied length — conform_len","text":"","code":"conform_len(val, len)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/construct.html","id":null,"dir":"Reference","previous_headings":"","what":"construct — construct","title":"construct — construct","text":"construct term given hrf spec model specification","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/construct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct — construct","text":"","code":"construct(x, model_spec, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/construct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"construct — construct","text":"x object model_spec model specification ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast Specification — contrast","title":"Contrast Specification — contrast","text":"Define linear contrast using formula expression.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast Specification — contrast","text":"","code":"contrast(form, name, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast Specification — contrast","text":"form formula describing contrast. name character label contrast. expression defining subset contrast applied (default: NULL).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast Specification — contrast","text":"list containing contrast specification.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contrast Specification — contrast","text":"","code":"# A minus B contrast contrast(~ A - B, name=\"A_B\") #> contrast: A_B  #>  A:  ~A - B"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Set of Contrasts — contrast_set","title":"Create a Set of Contrasts — contrast_set","text":"Construct list contrast_spec objects.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Set of Contrasts — contrast_set","text":"","code":"contrast_set(...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Set of Contrasts — contrast_set","text":"... variable-length list contrast_spec objects.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Set of Contrasts — contrast_set","text":"list contrast_spec objects class \"contrast_set\".","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Set of Contrasts — contrast_set","text":"","code":"c1 <- contrast(~ A - B, name=\"A_B\") c2 <- contrast(~ B - C, name=\"B_C\") contrast_set(c1,c2) #> contrast: A_B  #>  A:  ~A - B  #>  #> contrast: B_C  #>  A:  ~B - C  #>"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"contrast_weights — contrast_weights","title":"contrast_weights — contrast_weights","text":"function calculates contrast weights based contrast specification provided user. generic function dispatches appropriate method depending class contrast","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"contrast_weights — contrast_weights","text":"","code":"contrast_weights(x, ...)  # S3 method for convolved_term contrast_weights(x, ...)  # S3 method for fmri_model contrast_weights(x, ...)  # S3 method for event_model contrast_weights(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"contrast_weights — contrast_weights","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"contrast_weights — contrast_weights","text":"Calculate contrast weights given contrast specification term.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.poly_contrast_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Polynomial Contrast Weights — contrast_weights.poly_contrast_spec","title":"Polynomial Contrast Weights — contrast_weights.poly_contrast_spec","text":"Compute contrast weights polynomial contrast specification.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.poly_contrast_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polynomial Contrast Weights — contrast_weights.poly_contrast_spec","text":"","code":"# S3 method for poly_contrast_spec contrast_weights(x, term, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.poly_contrast_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polynomial Contrast Weights — contrast_weights.poly_contrast_spec","text":"x poly_contrast_spec object. term term object. ... Additional arguments (currently used).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.poly_contrast_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polynomial Contrast Weights — contrast_weights.poly_contrast_spec","text":"list containing polynomial contrast weights related information.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.unit_contrast_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit Contrast Weights — contrast_weights.unit_contrast_spec","title":"Unit Contrast Weights — contrast_weights.unit_contrast_spec","text":"Compute contrast weights unit_contrast_spec object.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.unit_contrast_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit Contrast Weights — contrast_weights.unit_contrast_spec","text":"","code":"# S3 method for unit_contrast_spec contrast_weights(x, term, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.unit_contrast_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit Contrast Weights — contrast_weights.unit_contrast_spec","text":"x unit_contrast_spec object. term term object. ... Additional arguments (currently unused).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/contrast_weights.unit_contrast_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unit Contrast Weights — contrast_weights.unit_contrast_spec","text":"list containing term, name, weights, condition names, contrast specification.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve.event_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolve an event-related design matrix with an HRF. — convolve.event_term","title":"Convolve an event-related design matrix with an HRF. — convolve.event_term","text":"function takes event-related design matrix convolves specified Hemodynamic Response Function (HRF) create new design matrix suitable fMRI analysis. also supports additional arguments flexibility customization.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve.event_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolve an event-related design matrix with an HRF. — convolve.event_term","text":"","code":"# S3 method for event_term convolve(   x,   hrf,   sampling_frame,   drop.empty = TRUE,   summate = TRUE,   precision = 0.3,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve.event_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolve an event-related design matrix with an HRF. — convolve.event_term","text":"x data frame containing input design matrix. hrf Hemodynamic Response Function convolve design matrix . sampling_frame data frame specifying sampling frame analysis. drop.empty Logical. TRUE, empty rows design matrix removed. summate Logical. TRUE, convolved design matrix summed. precision Numeric. desired precision calculations. ... Additional arguments passed function.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve.event_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolve an event-related design matrix with an HRF. — convolve.event_term","text":"convolved design matrix, tibble format.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve.html","id":null,"dir":"Reference","previous_headings":"","what":"convolve — convolve","title":"convolve — convolve","text":"function convolves event sequence x hemodynamic response function hrf specified time series grid sampling_frame. generic function dispatches appropriate method","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convolve — convolve","text":"","code":"convolve(x, hrf, sampling_frame, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convolve — convolve","text":"x event sequence hrf hemodynamic response function sampling_frame time series grid sample function. ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convolve — convolve","text":"Convolve term x hemodynamic response function (HRF) sampling_frame.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolve hemodynamic response with a block duration — convolve_block","title":"Convolve hemodynamic response with a block duration — convolve_block","text":"function convolves hemodynamic response function (HRF) block duration, producing time-varying response specified duration. function supports various HRFs, block widths, precision levels, half-lives, normalization.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolve hemodynamic response with a block duration — convolve_block","text":"","code":"convolve_block(   t,   hrf = hrf_gaussian,   width = 5,   precision = 0.2,   half_life = Inf,   summate = TRUE,   normalize = FALSE,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolve hemodynamic response with a block duration — convolve_block","text":"t vector time points seconds convolved response evaluated hrf hemodynamic response function convolved, provided function (default: hrf_gaussian) width fixed width response block seconds (default: 5) precision sampling precision response seconds (default: 0.2) half_life half-life exponential decay function seconds, used model attenuation (default: Inf) summate logical value indicating whether sum impulse response functions (default: TRUE) FALSE, function returns maximum value time point. normalize logical value indicating whether normalize output peak value 1 (default: FALSE) ... Additional arguments passed HRF function","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolve hemodynamic response with a block duration — convolve_block","text":"vector convolved responses specified time points","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convolve hemodynamic response with a block duration — convolve_block","text":"","code":"time_points <- seq(0, 20, by = 0.5) block_response <- convolve_block(time_points, hrf=hrf_spmg1, width=5, precision=0.2) plot(time_points, block_response, type='l', main='Convolved Hemodynamic Response with Block Duration')"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolve HRF with Design Matrix — convolve_design","title":"Convolve HRF with Design Matrix — convolve_design","text":"function convolves given hemodynamic response function (HRF) design matrix fMRI study. useful modeling expected BOLD signal response experimental conditions.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolve HRF with Design Matrix — convolve_design","text":"","code":"convolve_design(hrf, dmat, globons, durations, summate = TRUE)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolve HRF with Design Matrix — convolve_design","text":"hrf numeric vector representing hemodynamic response function dmat design matrix columns representing different experimental conditions globons numeric vector global onsets event durations numeric vector event durations summate logical value indicating whether summate convolved HRF (default: TRUE)","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/convolve_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolve HRF with Design Matrix — convolve_design","text":"list regressors, one column design matrix.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Covariate Term — covariate","title":"Construct a Covariate Term — covariate","text":"Create covariate term convolved hemodynamic response function (HRF).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Covariate Term — covariate","text":"","code":"covariate(..., data, id = NULL, prefix = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Covariate Term — covariate","text":"... variable argument set covariate names. data data.frame containing variables. id optional identifier covariate term. prefix optional prefix add covariate names.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/covariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Covariate Term — covariate","text":"list containing information covariate term.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/covariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Covariate Term — covariate","text":"","code":"df1 <- data.frame(x=rnorm(100), y=rnorm(100)) cv <- covariate(x, y, data=df1)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.fmri_file_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Data Chunks for fmri_file_dataset Objects — data_chunks.fmri_file_dataset","title":"Create Data Chunks for fmri_file_dataset Objects — data_chunks.fmri_file_dataset","text":"function creates data chunks fmri_file_dataset objects. allows retrieval run-wise sequence-wise data chunks, well arbitrary chunks.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.fmri_file_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Data Chunks for fmri_file_dataset Objects — data_chunks.fmri_file_dataset","text":"","code":"# S3 method for fmri_file_dataset data_chunks(x, nchunks = 1, runwise = FALSE, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.fmri_file_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Data Chunks for fmri_file_dataset Objects — data_chunks.fmri_file_dataset","text":"x object class 'fmri_file_dataset'. nchunks number data chunks create. Default 1. runwise TRUE, data chunks created run-wise. Default FALSE. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.fmri_file_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Data Chunks for fmri_file_dataset Objects — data_chunks.fmri_file_dataset","text":"list data chunks, chunk containing data, voxel indices, row indices, chunk number.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.fmri_file_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Data Chunks for fmri_file_dataset Objects — data_chunks.fmri_file_dataset","text":"","code":"# Create an fmri_file_dataset # ... (see example for fmri_dataset)  # Create an iterator with 5 chunks iter <- data_chunks(dset, nchunks=5) #> Error in data_chunks(dset, nchunks = 5): object 'dset' not found `%do%` <- foreach::`%do%` y <- foreach::foreach(chunk = iter) %do% { colMeans(chunk$data) } #> Error in eval(a, envir = extra, enclos = obj$evalenv): object 'iter' not found length(y) == 5 #> Error in eval(expr, envir, enclos): object 'y' not found  # Create an iterator with 100 chunks iter <- data_chunks(dset, nchunks=100) #> Error in data_chunks(dset, nchunks = 100): object 'dset' not found y <- foreach::foreach(chunk = iter) %do% { colMeans(chunk$data) } #> Error in eval(a, envir = extra, enclos = obj$evalenv): object 'iter' not found length(y) == 100 #> Error in eval(expr, envir, enclos): object 'y' not found  # Create a \"runwise\" iterator iter <- data_chunks(dset, runwise=TRUE) #> Error in data_chunks(dset, runwise = TRUE): object 'dset' not found y <- foreach::foreach(chunk = iter) %do% { colMeans(chunk$data) } #> Error in eval(a, envir = extra, enclos = obj$evalenv): object 'iter' not found length(y) == 2 #> Error in eval(expr, envir, enclos): object 'y' not found"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.fmri_mem_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Data Chunks for fmri_mem_dataset Objects — data_chunks.fmri_mem_dataset","title":"Create Data Chunks for fmri_mem_dataset Objects — data_chunks.fmri_mem_dataset","text":"function creates data chunks fmri_mem_dataset objects. allows retrieval run-wise sequence-wise data chunks, well arbitrary chunks.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.fmri_mem_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Data Chunks for fmri_mem_dataset Objects — data_chunks.fmri_mem_dataset","text":"","code":"# S3 method for fmri_mem_dataset data_chunks(x, nchunks = 1, runwise = FALSE, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.fmri_mem_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Data Chunks for fmri_mem_dataset Objects — data_chunks.fmri_mem_dataset","text":"x object class 'fmri_mem_dataset'. nchunks number data chunks create. Default 1. runwise TRUE, data chunks created run-wise. Default FALSE. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.fmri_mem_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Data Chunks for fmri_mem_dataset Objects — data_chunks.fmri_mem_dataset","text":"list data chunks, chunk containing data, voxel indices, row indices, chunk number.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.fmri_mem_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Data Chunks for fmri_mem_dataset Objects — data_chunks.fmri_mem_dataset","text":"","code":"# Create an fmri_mem_dataset # ... (see example for fmri_mem_dataset)  # Create an iterator with 5 chunks iter <- data_chunks(dset, nchunks=5) #> Error in data_chunks(dset, nchunks = 5): object 'dset' not found `%do%` <- foreach::`%do%` y <- foreach::foreach(chunk = iter) %do% { colMeans(chunk$data) } #> Error in eval(a, envir = extra, enclos = obj$evalenv): object 'iter' not found length(y) == 5 #> Error in eval(expr, envir, enclos): object 'y' not found  # Create an iterator with 100 chunks iter <- data_chunks(dset, nchunks=100) #> Error in data_chunks(dset, nchunks = 100): object 'dset' not found y <- foreach::foreach(chunk = iter) %do% { colMeans(chunk$data) } #> Error in eval(a, envir = extra, enclos = obj$evalenv): object 'iter' not found length(y) == 100 #> Error in eval(expr, envir, enclos): object 'y' not found  # Create a \"runwise\" iterator iter <- data_chunks(dset, runwise=TRUE) #> Error in data_chunks(dset, runwise = TRUE): object 'dset' not found y <- foreach::foreach(chunk = iter) %do% { colMeans(chunk$data) } #> Error in eval(a, envir = extra, enclos = obj$evalenv): object 'iter' not found length(y) == 2 #> Error in eval(expr, envir, enclos): object 'y' not found"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.html","id":null,"dir":"Reference","previous_headings":"","what":"return a set of data chunks — data_chunks","title":"return a set of data chunks — data_chunks","text":"return set data chunks","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return a set of data chunks — data_chunks","text":"","code":"data_chunks(x, nchunks, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return a set of data chunks — data_chunks","text":"x dataset nchunks number data chunks ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"return a set of data chunks — data_chunks","text":"iterator returning data chunk per iteration","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.matrix_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Data Chunks for matrix_dataset Objects — data_chunks.matrix_dataset","title":"Create Data Chunks for matrix_dataset Objects — data_chunks.matrix_dataset","text":"function creates data chunks matrix_dataset objects. allows retrieval run-wise sequence-wise data chunks, well arbitrary chunks.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.matrix_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Data Chunks for matrix_dataset Objects — data_chunks.matrix_dataset","text":"","code":"# S3 method for matrix_dataset data_chunks(x, nchunks = 1, runwise = FALSE, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.matrix_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Data Chunks for matrix_dataset Objects — data_chunks.matrix_dataset","text":"x object class 'matrix_dataset'. nchunks number data chunks create. Default 1. runwise TRUE, data chunks created run-wise. Default FALSE. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.matrix_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Data Chunks for matrix_dataset Objects — data_chunks.matrix_dataset","text":"list data chunks, chunk containing data, voxel indices, row indices, chunk number.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/data_chunks.matrix_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Data Chunks for matrix_dataset Objects — data_chunks.matrix_dataset","text":"","code":"# Create a matrix_dataset # ... (see example for matrix_dataset)  # Create an iterator with 5 chunks iter <- data_chunks(dset, nchunks=5) #> Error in data_chunks(dset, nchunks = 5): object 'dset' not found `%do%` <- foreach::`%do%` y <- foreach::foreach(chunk = iter) %do% { colMeans(chunk$data) } #> Error in eval(a, envir = extra, enclos = obj$evalenv): object 'iter' not found length(y) == 5 #> Error in eval(expr, envir, enclos): object 'y' not found  # Create an iterator with 100 chunks iter <- data_chunks(dset, nchunks=100) #> Error in data_chunks(dset, nchunks = 100): object 'dset' not found y <- foreach::foreach(chunk = iter) %do% { colMeans(chunk$data) } #> Error in eval(a, envir = extra, enclos = obj$evalenv): object 'iter' not found length(y) == 100 #> Error in eval(expr, envir, enclos): object 'y' not found  # Create a \"runwise\" iterator iter <- data_chunks(dset, runwise=TRUE) #> Error in data_chunks(dset, runwise = TRUE): object 'dset' not found y <- foreach::foreach(chunk = iter) %do% { colMeans(chunk$data) } #> Error in eval(a, envir = extra, enclos = obj$evalenv): object 'iter' not found length(y) == 2 #> Error in eval(expr, envir, enclos): object 'y' not found"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/design_env.html","id":null,"dir":"Reference","previous_headings":"","what":"design_env — design_env","title":"design_env — design_env","text":"return regression design set matrices stored environment","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/design_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"design_env — design_env","text":"","code":"design_env(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/design_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"design_env — design_env","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/design_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"design_matrix — design_matrix","title":"design_matrix — design_matrix","text":"construct design matrix term","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/design_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"design_matrix — design_matrix","text":"","code":"design_matrix(x, ...)  # S3 method for event_model design_matrix(x, blockid = NULL, ...)  # S3 method for convolved_term design_matrix(x, blockid = NULL, ...)  # S3 method for matrix_term design_matrix(x, ...)  # S3 method for fmri_model design_matrix(x, blockid = NULL, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/design_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"design_matrix — design_matrix","text":"x term ... additional arguments blockid block id extract","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/design_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Design Plot for fMRI Model — design_plot","title":"Design Plot for fMRI Model — design_plot","text":"Generate interactive plot design matrix given fMRI model.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/design_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Design Plot for fMRI Model — design_plot","text":"","code":"design_plot(fmrimod, longnames = FALSE)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/design_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Design Plot for fMRI Model — design_plot","text":"fmrimod fmri_model object. longnames Use long names legend (default: FALSE).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/design_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Design Plot for fMRI Model — design_plot","text":"interactive plot using Shiny.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/despike.html","id":null,"dir":"Reference","previous_headings":"","what":"Despike Time Series Data — despike","title":"Despike Time Series Data — despike","text":"Remove spikes time series data using running median threshold.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/despike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Despike Time Series Data — despike","text":"","code":"despike(x, k = 7, thresh = 6)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/despike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Despike Time Series Data — despike","text":"x numeric vector containing time series data. k window size running median (default: 7). thresh threshold identifying spikes (default: 6).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/despike.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Despike Time Series Data — despike","text":"numeric vector spikes removed.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/durations.html","id":null,"dir":"Reference","previous_headings":"","what":"get event durations of a variable — durations","title":"get event durations of a variable — durations","text":"return durations vector","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/durations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get event durations of a variable — durations","text":"","code":"durations(x)  # S3 method for regressor durations(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/durations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get event durations of a variable — durations","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/elements.html","id":null,"dir":"Reference","previous_headings":"","what":"elements — elements","title":"elements — elements","text":"return ordered elements term/variable","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"elements — elements","text":"","code":"elements(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"elements — elements","text":"x term ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estcon.html","id":null,"dir":"Reference","previous_headings":"","what":"estcon — estcon","title":"estcon — estcon","text":"estcon","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estcon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estcon — estcon","text":"","code":"estcon(x, fit, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estcon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estcon — estcon","text":"x object fit model fit ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.fmri_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"#' @export\nestimate_betas.fmri_mem_dataset <- function(x,fixed=NULL, ran, block,\nmethod=c(","title":"#' @export\nestimate_betas.fmri_mem_dataset <- function(x,fixed=NULL, ran, block,\nmethod=c(","text":"function estimates betas (regression coefficients) fixed random effects fMRI dataset using various methods.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.fmri_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"#' @export\nestimate_betas.fmri_mem_dataset <- function(x,fixed=NULL, ran, block,\nmethod=c(","text":"","code":"# S3 method for fmri_dataset estimate_betas(   x,   fixed = NULL,   ran,   block,   method = c(\"mixed\", \"pls\", \"pls_searchlight\", \"pls_global\", \"ols\"),   basemod = NULL,   radius = 8,   niter = 8,   ncomp = 4,   lambda = 0.01,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.fmri_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"#' @export\nestimate_betas.fmri_mem_dataset <- function(x,fixed=NULL, ran, block,\nmethod=c(","text":"x object class fmri_dataset representing fMRI dataset fixed formula specifying fixed regressors model constant effects (.e., non-varying trials) ran formula specifying random (trialwise) regressors model single trial effects block formula specifying block factor method regression method estimating trialwise betas; one \"mixed\", \"pls\", \"pls_searchlight\", \"pls_global\", \"ols\" (default: \"mixed\") basemod baseline_model instance regress data beta estimation (default: NULL) radius radius mm pls_searchlight approach (default: 8) niter Number searchlight iterations \"pls_searchlight\" method (default: 8) ncomp Number PLS components \"pls\", \"pls_searchlight\", \"pls_global\" methods (default: 4) lambda Lambda parameter (currently used; default: 0.01) ... Additional arguments passed estimation method","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.fmri_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"#' @export\nestimate_betas.fmri_mem_dataset <- function(x,fixed=NULL, ran, block,\nmethod=c(","text":"list class \"fmri_betas\" containing following components: betas_fixed: NeuroVec object representing fixed effect betas betas_ran: NeuroVec object representing random effect betas design_ran: Design matrix random effects design_fixed: Design matrix fixed effects design_base: Design matrix baseline model basemod: Baseline model object fixed_model: Fixed effect model object ran_model: Random effect model object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.fmri_dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"#' @export\nestimate_betas.fmri_mem_dataset <- function(x,fixed=NULL, ran, block,\nmethod=c(","text":"method argument allows several beta estimation approaches: \"mixed\": Uses linear mixed-effects modeling trialwise random effects implemented rrBLUP package. \"pls\": Uses separate partial least squares voxel estimate trialwise betas. \"pls_searchlight\": Estimates PLS solutions searchlight windows averages beta estimates. \"pls_global\": Estimates single multiresponse PLS solution, Y matrix full data matrix. \"ols\": Ordinary least squares estimate betas – regularization.","code":""},{"path":[]},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.html","id":null,"dir":"Reference","previous_headings":"","what":"estimate trialwise beta coefficients for a dataset — estimate_betas","title":"estimate trialwise beta coefficients for a dataset — estimate_betas","text":"function estimates betas (regression coefficients) fixed random effects matrix dataset using various methods.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimate trialwise beta coefficients for a dataset — estimate_betas","text":"","code":"estimate_betas(x, ...)  # S3 method for latent_dataset estimate_betas(   x,   fixed = NULL,   ran,   block,   method = c(\"mixed\", \"pls\", \"pls_global\", \"ols\"),   basemod = NULL,   ncomp = 4,   lambda = 0.01,   prewhiten = TRUE,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimate trialwise beta coefficients for a dataset — estimate_betas","text":"x object class matrix_dataset representing matrix dataset ... Additional arguments passed estimation method fixed formula specifying fixed regressors model constant effects (.e., non-varying trials) ran formula specifying random (trialwise) regressors model single trial effects block formula specifying block factor method regression method estimating trialwise betas; one \"mixed\", \"pls\", \"pls_global\", \"ols\" (default: \"mixed\") basemod baseline_model instance regress data beta estimation (default: NULL) ncomp Number PLS components \"pls\" \"pls_global\" methods (default: 4) lambda Lambda parameter (currently used; default: 0.01)","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"estimate trialwise beta coefficients for a dataset — estimate_betas","text":"list class \"fmri_betas\" containing following components: betas_fixed: Matrix representing fixed effect betas betas_ran: Matrix representing random effect betas design_ran: Design matrix random effects design_fixed: Design matrix fixed effects design_base: Design matrix baseline model","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.matrix_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate betas for a matrix dataset — estimate_betas.matrix_dataset","title":"Estimate betas for a matrix dataset — estimate_betas.matrix_dataset","text":"function estimates betas (regression coefficients) fixed random effects matrix dataset using various methods.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.matrix_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate betas for a matrix dataset — estimate_betas.matrix_dataset","text":"","code":"# S3 method for matrix_dataset estimate_betas(   x,   fixed = NULL,   ran,   block,   method = c(\"mixed\", \"pls\", \"pls_global\", \"ols\"),   basemod = NULL,   ncomp = 4,   lambda = 0.01,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.matrix_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate betas for a matrix dataset — estimate_betas.matrix_dataset","text":"x object class matrix_dataset representing matrix dataset fixed formula specifying fixed regressors model constant effects (.e., non-varying trials) ran formula specifying random (trialwise) regressors model single trial effects block formula specifying block factor method regression method estimating trialwise betas; one \"mixed\", \"pls\", \"pls_global\", \"ols\" (default: \"mixed\") basemod baseline_model instance regress data beta estimation (default: NULL) ncomp Number PLS components \"pls\" \"pls_global\" methods (default: 4) lambda Lambda parameter (currently used; default: 0.01) ... Additional arguments passed estimation method","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_betas.matrix_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate betas for a matrix dataset — estimate_betas.matrix_dataset","text":"list class \"fmri_betas\" containing following components: betas_fixed: Matrix representing fixed effect betas betas_ran: Matrix representing random effect betas design_ran: Design matrix random effects design_fixed: Design matrix fixed effects design_base: Design matrix baseline model","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_hrf.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate hemodynamic response function (HRF) using Generalized Additive Models (GAMs) — estimate_hrf","title":"Estimate hemodynamic response function (HRF) using Generalized Additive Models (GAMs) — estimate_hrf","text":"function estimates HRF using GAMs mgcv package. HRF can estimated without fixed effects.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_hrf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate hemodynamic response function (HRF) using Generalized Additive Models (GAMs) — estimate_hrf","text":"","code":"estimate_hrf(   form,   fixed = NULL,   block,   dataset,   bs = c(\"tp\", \"ts\", \"cr\", \"ps\"),   rsam = seq(0, 20, by = 1),   basemod = NULL )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_hrf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate hemodynamic response function (HRF) using Generalized Additive Models (GAMs) — estimate_hrf","text":"form formula specifying event model conditions interest fixed formula specifying fixed regressors model constant effects (.e., non-varying trials); default NULL block formula specifying block factor dataset object representing fMRI dataset bs Basis function smooth term GAM; one \"tp\" (default), \"ts\", \"cr\", \"ps\" rsam sequence time points HRF estimated (default: seq(0, 20, = 1)) basemod baseline_model instance regress data HRF estimation (default: NULL)","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_hrf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate hemodynamic response function (HRF) using Generalized Additive Models (GAMs) — estimate_hrf","text":"matrix estimated HRF values voxel","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/estimate_hrf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate hemodynamic response function (HRF) using Generalized Additive Models (GAMs) — estimate_hrf","text":"","code":"# To be added"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.HRF.html","id":null,"dir":"Reference","previous_headings":"","what":"evaluate.HRF — evaluate.HRF","title":"evaluate.HRF — evaluate.HRF","text":"function evaluates hemodynamic response function (HRF) given set time points (grid) parameters. used generate predicted BOLD (blood-oxygen-level-dependent) signal changes fMRI data analysis.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.HRF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"evaluate.HRF — evaluate.HRF","text":"","code":"# S3 method for HRF evaluate(   x,   grid,   amplitude = 1,   duration = 0,   precision = 0.2,   summate = TRUE,   normalize = FALSE,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.HRF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"evaluate.HRF — evaluate.HRF","text":"x HRF function. grid vector time points. amplitude scaling value event (default: 1). duration duration event (default: 0). precision temporal resolution used computing summed responses duration > 0 (default: 0.2). summate Whether HRF response increases amplitude function stimulus duration (default: TRUE). normalize Scale output peak 1 (default: FALSE).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.HRF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"evaluate.HRF — evaluate.HRF","text":"vector HRF values specified time points.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.HRF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"evaluate.HRF — evaluate.HRF","text":"","code":"hrf1 <- evaluate(HRF_SPMG1, grid=seq(0,20,by=1.5), duration=2, precision=.1) hrf2 <- evaluate(HRF_SPMG1, grid=seq(0,20,by=1.5), duration=2, precision=.1, summate=FALSE)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.hrfspec.html","id":null,"dir":"Reference","previous_headings":"","what":"evaluate.hrfspec — evaluate.hrfspec","title":"evaluate.hrfspec — evaluate.hrfspec","text":"function evaluates hemodynamic response function (HRF) specified hrfspec object given set time points (grid) parameters. wrapper function calls evaluate.HRF function HRF function contained hrfspec object.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.hrfspec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"evaluate.hrfspec — evaluate.hrfspec","text":"","code":"# S3 method for hrfspec evaluate(x, grid, amplitude = 1, duration = 0, precision = 0.1, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.hrfspec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"evaluate.hrfspec — evaluate.hrfspec","text":"x hrfspec object containing HRF function. grid vector time points. amplitude scaling value event (default: 1). duration duration event (default: 0). precision temporal resolution used computing summed responses duration > 0 (default: 0.1). ... Additional arguments passed evaluate.HRF function.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.hrfspec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"evaluate.hrfspec — evaluate.hrfspec","text":"vector HRF values specified time points.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.hrfspec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"evaluate.hrfspec — evaluate.hrfspec","text":"","code":"hrf_spec <- hrfspec(hrf = HRF_SPMG1) #> Error in hrfspec(hrf = HRF_SPMG1): could not find function \"hrfspec\" hrf_values <- evaluate(hrfspec, grid=seq(0,20,by=1.5), duration=2, precision=.1) #> Error in evaluate(hrfspec, grid = seq(0, 20, by = 1.5), duration = 2,     precision = 0.1): object 'hrfspec' not found"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.html","id":null,"dir":"Reference","previous_headings":"","what":"evaluate a function over a sampling grid — evaluate","title":"evaluate a function over a sampling grid — evaluate","text":"given object evaluated input sample \"grid\", evaluate object. evalute regressor function sampling grid","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"evaluate a function over a sampling grid — evaluate","text":"","code":"evaluate(x, grid, ...)  # S3 method for regressor evaluate(x, grid, precision = 0.33, use_conv = FALSE, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"evaluate a function over a sampling grid — evaluate","text":"x object evaluate grid sampling grid. vector real values seconds. ... extra args precision sampling precision hrf. parameter passed evaluate.HRF use_conv use fast convolution approach","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/evaluate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"evaluate a function over a sampling grid — evaluate","text":"","code":"frame <- sampling_frame(blocklens=100, TR=2) reg <- regressor(onsets=c(10,20,35, 47,52, 68, 79,86), amp=runif(8), duration=runif(8)*3, hrf=HRF_SPMG1) e1 = evaluate(reg, samples(frame)) e2 = evaluate(reg, samples(frame), use_conv=TRUE)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an event set from a ParametricBasis object — event_basis","title":"Create an event set from a ParametricBasis object — event_basis","text":"function generates event set object given basis object type ParametricBasis. useful creating event sequences based basis functions fMRI data analyses.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an event set from a ParametricBasis object — event_basis","text":"","code":"event_basis(   basis,   onsets,   blockids = 1,   durations = NULL,   subset = rep(TRUE, length(onsets)) )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an event set from a ParametricBasis object — event_basis","text":"basis ParametricBasis object containing basis functions onsets numeric vector onsets event sequence blockids numeric vector block identifiers event sequence (default: 1) durations numeric vector durations event sequence (default: NULL) subset logical vector indicating subset basis object use (default: TRUE elements)","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an event set from a ParametricBasis object — event_basis","text":"object representing event set based basis functions, class \"event_basis\" \"event_seq\"","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_basis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an event set from a ParametricBasis object — event_basis","text":"","code":"# Create a ParametricBasis object basis <- ParametricBasis(\"Gamma\", shape = 6, rate = 0.9) #> Error in ParametricBasis(\"Gamma\", shape = 6, rate = 0.9): could not find function \"ParametricBasis\" onsets <- seq(0, 20, length.out = 21) blockids <- rep(1, length(onsets))  # Generate an event_basis object ebasis <- event_basis(basis, onsets, blockids) #> Error in inherits(basis, \"ParametricBasis\"): object 'basis' not found"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a categorical event sequence from a factor — event_factor","title":"Create a categorical event sequence from a factor — event_factor","text":"function generates categorical event sequence object given factor. can used create event sequences categorical predictors fMRI data analyses.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a categorical event sequence from a factor — event_factor","text":"","code":"event_factor(   fac,   name,   onsets,   blockids = rep(1, length(fac)),   durations = rep(0, length(fac)) )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a categorical event sequence from a factor — event_factor","text":"fac factor representing categorical event sequence name character string providing name event sequence onsets numeric vector onsets event sequence blockids numeric vector block identifiers event sequence (default: rep(1, length(fac))) durations numeric vector durations event sequence (default: rep(0, length(fac)))","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a categorical event sequence from a factor — event_factor","text":"object representing categorical event sequence, class \"event_factor\" \"event_seq\"","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a categorical event sequence from a factor — event_factor","text":"","code":"efac <- event_factor(factor(c(\"a\", \"b\", \"c\", \"a\", \"b\", \"c\")), \"abc\", onsets=seq(1, 100, length.out=6))"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a continuous valued event set from a matrix — event_matrix","title":"Create a continuous valued event set from a matrix — event_matrix","text":"function generates continuous valued event set object given matrix. useful creating event sequences multiple continuous predictors fMRI data analyses.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a continuous valued event set from a matrix — event_matrix","text":"","code":"event_matrix(mat, name, onsets, blockids = rep(1, ncol(mat)), durations = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a continuous valued event set from a matrix — event_matrix","text":"mat matrix continuous event sequence values, one row per event name character string providing name event set onsets numeric vector onsets event sequence blockids numeric vector block identifiers event sequence (default: 1) durations numeric vector durations event sequence (default: NULL)","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a continuous valued event set from a matrix — event_matrix","text":"object representing continuous valued event set, class \"event_matrix\" \"event_seq\"","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a continuous valued event set from a matrix — event_matrix","text":"","code":"mat <- matrix(rnorm(200), 100, 2) onsets <- seq(1, 1000, length.out=100) durations <- rep(1, 100) blockids <- rep(1, 100)  eset <- event_matrix(mat, \"eset\", onsets, durations, blockids)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.formula.html","id":null,"dir":"Reference","previous_headings":"","what":"event_model.formula — event_model.formula","title":"event_model.formula — event_model.formula","text":"function constructs event model using formula x, dataset data, block variable, parameters like sampling frame, drop_empty, durations, precision. specifically designed handle models specified formulas.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"event_model.formula — event_model.formula","text":"","code":"# S3 method for formula event_model(   x,   data,   block,   sampling_frame,   drop_empty = TRUE,   durations = 0,   precision = 0.3,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"event_model.formula — event_model.formula","text":"x formula specifying event model. data dataset containing event information. block block variable, either formula vector block values. sampling_frame time series grid sample function. drop_empty Logical indicating whether drop empty events. Default TRUE. durations numeric vector event durations. Default 0 events. precision Numeric value indicating precision model. Default 0.3. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"event_model.formula — event_model.formula","text":"event model object.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.formula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"event_model.formula — event_model.formula","text":"Construct event model formula data.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct an event model — event_model","title":"Construct an event model — event_model","text":"function creates event-based fMRI regression model, represented data structure.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct an event model — event_model","text":"","code":"event_model(   x,   data,   block,   sampling_frame,   drop_empty = TRUE,   durations = 0,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct an event model — event_model","text":"x model specification, typically formula. formula following format: response ~ predictor1 + predictor2 + ... + predictorN response numeric vector fMRI signal values, predictor1 predictorN predictor variables. predictor variable specified function categorical variables (factors) /continuous variables. functions prefix \"hrf\", can defined using hrf() function (see hrf documentation details). data data frame containing experimental design, one row per time point one column per variable used model formula. categorical variable used formula, factor data frame. data frame also contain column fMRI signal values (response variable). block formula specifying block structure design. formula format block_var1 + block_var2 + ..., block_var categorical variable (factor) used define blocks time points. block structure used estimate baseline fMRI signal level separately block. sampling_frame sampling frame defining temporal block structure design. object class sampling_frame (see sampling_frame documentation details). drop_empty Logical value indicating whether drop empty factor levels model. TRUE (default), factor levels observations dropped model. FALSE, empty levels retained receive coefficient zero model. durations numeric vector specifying duration (seconds) event model. model contains block variables, duration block specified well. length vector equal number events/blocks design. Default value 0 (duration). ... Additional arguments passed methods. Currently used.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct an event model — event_model","text":"list containing following elements: formula formula used create model. design design matrix model, one row per time point one column per predictor variable. block_indices list indices defining start end time points block. baseline vector containing estimated baseline fMRI signal level block. dur vector containing duration (seconds) event block design.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct an event model — event_model","text":"","code":"# Create a data frame with experimental design event_data <- data.frame(fac=c(\"a\", \"B\", \"A\", \"B\"), onsets=c(1,10,20,80), run=c(1,1,1,1))  # Create a sampling frame with 50-second blocks and a TR of 2 seconds sframe <- sampling_frame(blocklens=50, TR=2)  # Create an event model using the `onsets` variable as a predictor, with a separate baseline for each run evmodel <- fmri_event_model(response ~ hrf(onsets), data=event_data, block=~run, sampling_frame=sframe) #> Error in fmri_event_model(response ~ hrf(onsets), data = event_data, block = ~run,     sampling_frame = sframe): could not find function \"fmri_event_model\""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.list.html","id":null,"dir":"Reference","previous_headings":"","what":"event_model.list — event_model.list","title":"event_model.list — event_model.list","text":"function constructs event model list hemodynamic response function (HRF) specifications x, along parameters like data, block, sampling frame, durations. specifically designed handle lists HRF specifications.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"event_model.list — event_model.list","text":"","code":"# S3 method for list event_model(   x,   data,   block,   sampling_frame,   drop_empty = TRUE,   durations = 0,   precision = 0.3,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"event_model.list — event_model.list","text":"x list HRF specifications. elements x must type hrfspec. data dataset containing event information. block block variable, either formula vector block values. sampling_frame time series grid sample function. drop_empty Logical indicating whether drop empty events. Default TRUE. durations numeric vector event durations. Default 0 events. precision Numeric value indicating precision model. Default 0.3. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"event_model.list — event_model.list","text":"event model object.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_model.list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"event_model.list — event_model.list","text":"Construct event model list HRF specifications.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_table.html","id":null,"dir":"Reference","previous_headings":"","what":"event_table — event_table","title":"event_table — event_table","text":"function extracts event table provided term x returns data.frame.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"event_table — event_table","text":"","code":"event_table(x)  # S3 method for convolved_term event_table(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"event_table — event_table","text":"x term","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"event_table — event_table","text":"data.frame containing event table.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"event_table — event_table","text":"Extract event_table data.frame.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an event model term from a named list of variables. — event_term","title":"Create an event model term from a named list of variables. — event_term","text":"function generates event model term list named variables, along onsets, block IDs, durations. Optionally, subset onsets can retained.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an event model term from a named list of variables. — event_term","text":"","code":"event_term(evlist, onsets, blockids, durations = 1, subset = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an event model term from a named list of variables. — event_term","text":"evlist list named variables. onsets vector onset times experimental events seconds. blockids vector block numbers associated onset. durations vector event durations (default 1). subset logical vector indicating subset onsets retain (default NULL).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an event model term from a named list of variables. — event_term","text":"list containing following components: varname: character string representing variable names, concatenated colons. events: list event variables. subset: logical vector indicating retained onsets. event_table: tibble containing event information. onsets: vector onset times. blockids: vector block numbers. durations: vector event durations.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an event model term from a named list of variables. — event_term","text":"","code":"x1 <- factor(rep(letters[1:3], 10)) x2 <- factor(rep(1:3, each=10)) eterm <- event_term(list(x1=x1,x2=x2), onsets=seq(1,100,length.out=30),                      blockids=rep(1,30))  x1 <- rnorm(30) x2 <- factor(rep(1:3, each=10)) eterm <- event_term(list(x1=x1,x2=x2), onsets=seq(1,100,length.out=30),                      blockids=rep(1,30), subset=x1>0)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"event_terms — event_terms","title":"event_terms — event_terms","text":"function extracts list 'event_term's provided model object x.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"event_terms — event_terms","text":"","code":"event_terms(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"event_terms — event_terms","text":"x model object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"event_terms — event_terms","text":"list containing 'event_term's.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"event_terms — event_terms","text":"Extract list 'event_term's model object.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a continuous valued event sequence from a numeric vector — event_variable","title":"Create a continuous valued event sequence from a numeric vector — event_variable","text":"function generates continuous valued event sequence object given numeric vector. can used create event sequences continuous predictors fMRI data analyses.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a continuous valued event sequence from a numeric vector — event_variable","text":"","code":"event_variable(vec, name, onsets, blockids = 1, durations = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a continuous valued event sequence from a numeric vector — event_variable","text":"vec numeric vector representing continuous event sequence values name character string providing name event sequence onsets numeric vector onsets event sequence blockids numeric vector block identifiers event sequence (default: 1) durations numeric vector durations event sequence (default: NULL)","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a continuous valued event sequence from a numeric vector — event_variable","text":"object representing continuous valued event sequence, class \"event_variable\" \"event_seq\"","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/event_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a continuous valued event sequence from a numeric vector — event_variable","text":"","code":"evar <- event_variable(c(1, 2, 3, 4, 5, 6), \"example_var\", onsets=seq(1, 100, length.out=6)) #> Error: length(durations) not equal to length(vals)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fit_Fcontrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit F-contrasts for Linear Model — fit_Fcontrasts","title":"Fit F-contrasts for Linear Model — fit_Fcontrasts","text":"function calculates F-contrasts fitted linear model.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fit_Fcontrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit F-contrasts for Linear Model — fit_Fcontrasts","text":"","code":"fit_Fcontrasts(lmfit, conmat, colind)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fit_Fcontrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit F-contrasts for Linear Model — fit_Fcontrasts","text":"lmfit Fitted linear model object. conmat Contrast matrix. colind Column indices corresponding variables contrast matrix.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fit_Fcontrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit F-contrasts for Linear Model — fit_Fcontrasts","text":"list containing following elements: estimate: Estimated contrasts. se: Residual variance. stat: F-statistics contrasts. prob: Probabilities associated F-statistics. stat_type: Type statistics calculated.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fit_Fcontrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit F-contrasts for Linear Model — fit_Fcontrasts","text":"","code":"data(mtcars) lm_fit <- lm(mpg ~ wt + qsec + am, data = mtcars) contrast_matrix <- matrix(c(0, -1, 1), nrow = 1, byrow = TRUE) fit_Fcontrasts(lm_fit, contrast_matrix, c(2, 3)) #> Error in fit_Fcontrasts(lm_fit, contrast_matrix, c(2, 3)): could not find function \"fit_Fcontrasts\""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fit_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Contrasts for Linear Model — fit_contrasts","title":"Fit Contrasts for Linear Model — fit_contrasts","text":"function calculates contrasts fitted linear model.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fit_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Contrasts for Linear Model — fit_contrasts","text":"","code":"fit_contrasts(lmfit, conmat, colind, se = TRUE)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fit_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Contrasts for Linear Model — fit_contrasts","text":"lmfit fitted linear model object. conmat contrast matrix contrast vector. colind subset column indices design associated contrast. se Whether compute standard errors, t-statistics, p-values (default: TRUE).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fit_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Contrasts for Linear Model — fit_contrasts","text":"list containing following elements: conmat: Contrast matrix. sigma: Residual standard error. df.residual: Degrees freedom residuals. estimate: Estimated contrasts. se: Standard errors contrasts (se = TRUE). stat: t-statistics contrasts (se = TRUE). prob: Probabilities associated t-statistics (se = TRUE). stat_type: Type statistics calculated.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fit_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Contrasts for Linear Model — fit_contrasts","text":"","code":"data(mtcars) lm_fit <- lm(mpg ~ wt + qsec + am, data = mtcars) contrast_matrix <- matrix(c(0, -1, 1), nrow = 1, byrow = TRUE) fit_contrasts(lm_fit, contrast_matrix, c(2, 3)) #> Error in fit_contrasts(lm_fit, contrast_matrix, c(2, 3)): could not find function \"fit_contrasts\""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an fMRI Dataset Object from a Set of Scans — fmri_dataset","title":"Create an fMRI Dataset Object from a Set of Scans — fmri_dataset","text":"function creates fMRI dataset object set scans, design information, data. dataset list containing information scans, mask, TR, number runs, event table, base path, sampling frame, censor, mode, preload.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an fMRI Dataset Object from a Set of Scans — fmri_dataset","text":"","code":"fmri_dataset(   scans,   mask,   TR,   run_length,   event_table = data.frame(),   base_path = \".\",   censor = NULL,   preload = FALSE,   mode = c(\"normal\", \"bigvec\", \"mmap\", \"filebacked\") )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an fMRI Dataset Object from a Set of Scans — fmri_dataset","text":"scans vector one file names images comprising dataset. mask Name binary mask file indicating voxels include analysis. TR repetition time seconds scan--scan interval. run_length vector one integers indicating number scans run. event_table data.frame containing event onsets experimental variables. Default empty data.frame. base_path file path prepended relative file names. Default \".\" (current directory). censor binary vector indicating scans remove. Default NULL. preload Read image scans eagerly rather first access. Default FALSE. mode type storage mode ('normal', 'bigvec', 'mmap', filebacked'). Default 'normal'.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an fMRI Dataset Object from a Set of Scans — fmri_dataset","text":"fMRI dataset object class c(\"fmri_file_dataset\", \"volumetric_dataset\", \"fmri_dataset\", \"list\").","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an fMRI Dataset Object from a Set of Scans — fmri_dataset","text":"","code":"# Create an fMRI dataset with 3 scans and a mask dset <- fmri_dataset(c(\"scan1.nii\", \"scan2.nii\", \"scan3.nii\"),    mask=\"mask.nii\", TR=2, run_length=rep(300, 3),    event_table=data.frame(onsets=c(3, 20, 99, 3, 20, 99, 3, 20, 99),    run=c(1, 1, 1, 2, 2, 2, 3, 3, 3)) )  # Create an fMRI dataset with 1 scan and a mask dset <- fmri_dataset(\"scan1.nii\", mask=\"mask.nii\", TR=2,    run_length=300,    event_table=data.frame(onsets=c(3, 20, 99), run=rep(1, 3)) )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_latent_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast fMRI Regression Model Estimation from a Latent Component Dataset — fmri_latent_lm","title":"Fast fMRI Regression Model Estimation from a Latent Component Dataset — fmri_latent_lm","text":"function estimates regression model fMRI data using latent component dataset. dataset must type latent_dataset, requires LatentNeuroVec input.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_latent_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast fMRI Regression Model Estimation from a Latent Component Dataset — fmri_latent_lm","text":"","code":"fmri_latent_lm(   formula,   block,   baseline_model = NULL,   dataset,   durations,   drop_empty = TRUE,   robust = FALSE,   autocor = c(\"none\", \"auto\", \"ar1\", \"ar2\", \"arma\"),   bootstrap = FALSE,   nboot = 1000,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_latent_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast fMRI Regression Model Estimation from a Latent Component Dataset — fmri_latent_lm","text":"formula formula specifying regression model. block factor indicating block structure data. baseline_model optional baseline model. dataset dataset class 'latent_dataset'. durations duration events dataset. drop_empty Whether drop empty events model. Default TRUE. robust Whether use robust regression methods. Default FALSE. autocor autocorrelation correction method use components. One 'none', 'auto', 'ar1', 'ar2', 'arma'. Default 'none'. bootstrap Whether compute bootstrapped parameter estimates. Default FALSE. nboot number bootstrap iterations. Default 1000. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_latent_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast fMRI Regression Model Estimation from a Latent Component Dataset — fmri_latent_lm","text":"object class 'fmri_latent_lm' containing regression model dataset.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_latent_lm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fast fMRI Regression Model Estimation from a Latent Component Dataset — fmri_latent_lm","text":"method currently experimental.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_latent_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast fMRI Regression Model Estimation from a Latent Component Dataset — fmri_latent_lm","text":"","code":"# Create a LatentNeuroVec, and then create a latent_dataset # ... (see example for latent_dataset)  # Estimate the fMRI regression model using the latent dataset result <- fmri_latent_lm(formula = formula, block = block, dataset = dset,                          durations = NULL, drop_empty = TRUE, robust = FALSE) #> Error in inherits(dataset, \"latent_dataset\"): object 'dset' not found  # Print the result print(result) #> Error in print(result): object 'result' not found"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a linear regression model for fMRI data analysis — fmri_lm","title":"Fit a linear regression model for fMRI data analysis — fmri_lm","text":"function fits linear regression model fMRI data analysis using specified model formula, block structure, dataset. model can fit using either runwise chunkwise data splitting strategy, robust fitting can enabled desired.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a linear regression model for fMRI data analysis — fmri_lm","text":"","code":"fmri_lm(   formula,   block,   baseline_model = NULL,   dataset,   durations,   drop_empty = TRUE,   robust = FALSE,   strategy = c(\"runwise\", \"chunkwise\"),   nchunks = 10,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a linear regression model for fMRI data analysis — fmri_lm","text":"formula model formula experimental events. block model formula block structure. baseline_model (Optional) baseline_model object. Default NULL. dataset object derived fmri_dataset containing time-series data. durations vector event durations. drop_empty Whether remove factor levels size zero. Default TRUE. robust Whether use robust fitting. Default FALSE. strategy data splitting strategy, either \"runwise\" \"chunkwise\". Default \"runwise\". nchunks Number data chunks strategy chunkwise. Default 10. ... Extra arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a linear regression model for fMRI data analysis — fmri_lm","text":"fitted linear regression model fMRI data analysis.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a linear regression model for fMRI data analysis — fmri_lm","text":"","code":"# Example usage of fmri_lm function # ..."},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_lm_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an fMRI linear regression model with a specified fitting strategy — fmri_lm_fit","title":"Fit an fMRI linear regression model with a specified fitting strategy — fmri_lm_fit","text":"function fits fMRI linear regression model using specified fmri_model object, dataset, data splitting strategy (either \"runwise\" \"chunkwise\"). primarily internal function used fmri_lm function.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_lm_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an fMRI linear regression model with a specified fitting strategy — fmri_lm_fit","text":"","code":"fmri_lm_fit(   fmrimod,   dataset,   strategy = c(\"chunkwise\", \"runwise\"),   robust = FALSE,   nchunks = 10,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_lm_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an fMRI linear regression model with a specified fitting strategy — fmri_lm_fit","text":"fmrimod object type fmri_model. dataset object derived fmri_dataset containing time-series data. strategy data splitting strategy, either \"chunkwise\" \"runwise\". Default \"chunkwise\". robust Whether use robust fitting. Default FALSE. nchunks Number data chunks strategy chunkwise. Default 10. ... Extra arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_lm_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an fMRI linear regression model with a specified fitting strategy — fmri_lm_fit","text":"fitted fMRI linear regression model specified fitting strategy.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_mem_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an fMRI Memory Dataset Object — fmri_mem_dataset","title":"Create an fMRI Memory Dataset Object — fmri_mem_dataset","text":"function creates fMRI memory dataset object, list containing information scans, mask, TR, number runs, event table, base path, sampling frame, censor.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_mem_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an fMRI Memory Dataset Object — fmri_mem_dataset","text":"","code":"fmri_mem_dataset(   scans,   mask,   TR,   run_length = sapply(scans, function(x) dim(x)[4]),   event_table = data.frame(),   base_path = \".\",   censor = NULL )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_mem_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an fMRI Memory Dataset Object — fmri_mem_dataset","text":"scans list objects class NeuroVec. mask binary mask class NeuroVol indicating set voxels include analyses. TR Repetition time (TR) fMRI acquisition. run_length numeric vector specifying length run dataset. Default length scans. event_table optional data frame containing event information. Default empty data frame. base_path optional base path dataset. Default \".\" (current directory). censor optional numeric vector specifying time points censor. Default NULL.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_mem_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an fMRI Memory Dataset Object — fmri_mem_dataset","text":"fMRI memory dataset object class c(\"fmri_mem_dataset\", \"volumetric_dataset\", \"fmri_dataset\", \"list\").","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_mem_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an fMRI Memory Dataset Object — fmri_mem_dataset","text":"","code":"# Create a NeuroVec object d <- c(10, 10, 10, 10) nvec <- neuroim2::NeuroVec(array(rnorm(prod(d)), d), space=neuroim2::NeuroSpace(d))  # Create a NeuroVol mask mask <- neuroim2::NeuroVol(array(rnorm(10*10*10), d[1:3]), space=neuroim2::NeuroSpace(d[1:3])) mask[mask < .5] <- 0  # Create an fmri_mem_dataset dset <- fmri_mem_dataset(list(nvec), mask, TR=2)  # Create an iterator with 100 chunks iter <- data_chunks(dset, nchunks=100)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct an fMRI regression model — fmri_model","title":"Construct an fMRI regression model — fmri_model","text":"function constructs fMRI regression model consisting event model baseline model. resulting model can used analysis fMRI data.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct an fMRI regression model — fmri_model","text":"","code":"fmri_model(event_model, baseline_model)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct an fMRI regression model — fmri_model","text":"event_model object class \"event_model\" representing event-related part fMRI regression model. baseline_model object class \"baseline_model\" representing baseline-related part fMRI regression model.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct an fMRI regression model — fmri_model","text":"object class \"fmri_model\" containing event baseline models.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_rlm.html","id":null,"dir":"Reference","previous_headings":"","what":"fmri_rlm — fmri_rlm","title":"fmri_rlm — fmri_rlm","text":"robust linear modeling fmri data","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_rlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fmri_rlm — fmri_rlm","text":"","code":"fmri_rlm(   formula,   block,   baseline_model = NULL,   dataset,   durations,   drop_empty = TRUE,   nchunks = 10,   strategy = c(\"runwise\", \"slicewise\", \"all\") )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_rlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fmri_rlm — fmri_rlm","text":"formula model formula experimental events. block model formula block structure. baseline_model (Optional) baseline_model object. Default NULL. dataset object derived fmri_dataset containing time-series data. durations vector event durations. drop_empty Whether remove factor levels size zero. Default TRUE. nchunks Number data chunks strategy chunkwise. Default 10. strategy data splitting strategy, either \"runwise\" \"chunkwise\". Default \"runwise\".","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmri_rlm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fmri_rlm — fmri_rlm","text":"","code":"etab <- data.frame(onset=c(1,30,15,25), fac=factor(c(\"A\", \"B\", \"A\", \"B\")), run=c(1,1,2,2)) etab2 <- data.frame(onset=c(1,30,65,75), fac=factor(c(\"A\", \"B\", \"A\", \"B\")), run=c(1,1,1,1)) mat <- matrix(rnorm(100*100), 100,100) dset <- matrix_dataset(mat, TR=1, run_length=c(50,50),event_table=etab) dset2 <- matrix_dataset(mat, TR=1, run_length=c(100),event_table=etab2) #lm.1 <- fmri_rlm(onset ~ hrf(fac), block= ~ run,dataset=dset) #lm.2 <- fmri_rlm(onset ~ hrf(fac), block= ~ run,dataset=dset2)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/fmrireg.html","id":null,"dir":"Reference","previous_headings":"","what":"fmrireg: regresssion tools for fMRI data — fmrireg","title":"fmrireg: regresssion tools for fMRI data — fmrireg","text":"fmrireg provides functions generating experimental design matrices appropriate analyzing fMRI data regression.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_afni_lm.fmri_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an AFNI Linear Model from an fmri_config object — gen_afni_lm.fmri_config","title":"Generate an AFNI Linear Model from an fmri_config object — gen_afni_lm.fmri_config","text":"function takes fmri_config object generates AFNI linear model reading necessary files, creating fmri_dataset, event_model, baseline_model, fmri_model, fitting model using afni_lm.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_afni_lm.fmri_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an AFNI Linear Model from an fmri_config object — gen_afni_lm.fmri_config","text":"","code":"# S3 method for fmri_config gen_afni_lm(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_afni_lm.fmri_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an AFNI Linear Model from an fmri_config object — gen_afni_lm.fmri_config","text":"x fmri_config object containing necessary configuration analysis ... Additional arguments passed function","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_afni_lm.fmri_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an AFNI Linear Model from an fmri_config object — gen_afni_lm.fmri_config","text":"afni_lm object representing fitted linear model","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_afni_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"generate an AFNI linear model command from a configuration file — gen_afni_lm","title":"generate an AFNI linear model command from a configuration file — gen_afni_lm","text":"generate AFNI linear model command configuration file","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_afni_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate an AFNI linear model command from a configuration file — gen_afni_lm","text":"","code":"gen_afni_lm(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_afni_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate an AFNI linear model command from a configuration file — gen_afni_lm","text":"x config file ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_empirical_hrf.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an Empirical Hemodynamic Response Function — gen_empirical_hrf","title":"Generate an Empirical Hemodynamic Response Function — gen_empirical_hrf","text":"gen_empirical_hrf generates empirical hemodynamic response function (HRF) using provided time points HRF values.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_empirical_hrf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an Empirical Hemodynamic Response Function — gen_empirical_hrf","text":"","code":"gen_empirical_hrf(t, y, name = \"empirical_hrf\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_empirical_hrf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an Empirical Hemodynamic Response Function — gen_empirical_hrf","text":"t Time points. y Values HRF time t[]. name Name generated HRF.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_empirical_hrf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an Empirical Hemodynamic Response Function — gen_empirical_hrf","text":"instance type HRF inheriting function.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_empirical_hrf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an Empirical Hemodynamic Response Function — gen_empirical_hrf","text":"","code":"y <- -poly(0:24, 2)[,2] emphrf <- gen_empirical_hrf(0:24, y) ## plot(emphrf(seq(0,24,by=.5)), type='l')"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct an HRF Instance — gen_hrf","title":"Construct an HRF Instance — gen_hrf","text":"gen_hrf takes raw function f(t) returns HRF (Hemodynamic Response Function) instance.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct an HRF Instance — gen_hrf","text":"","code":"gen_hrf(   hrf,   lag = 0,   width = 0,   precision = 0.1,   summate = TRUE,   normalize = FALSE,   name = \"gen_hrf\",   span = NULL,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct an HRF Instance — gen_hrf","text":"hrf function mapping time signal. lag Optional lag seconds. width Optional block width seconds. precision Sampling precision seconds. summate Whether allow impulse response function \"add\" (default: TRUE). normalize Rescale peak output 1 (default: FALSE). name assigned name generated HRF. span span HRF (maximum width seconds function reverts zero). ... Extra parameters hrf function.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct an HRF Instance — gen_hrf","text":"instance type HRF inheriting function.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct an HRF Instance — gen_hrf","text":"","code":"## Generate an HRF using SPMG1 canonical HRF, a lag of 3, and a width of 2. grf <- gen_hrf(hrf_spmg1, lag=3, width=2) grf(0:20) #>  [1]  0.00000000  0.00000000  0.00000000  0.00000000  0.07573777  1.84058304 #>  [7]  8.85283567 20.78293336 31.37528579 35.50904282 33.02071221 26.68047304 #> [13] 19.40238428 12.98708141  8.10702993  4.73934865  2.57370719  1.25700902 #> [19]  0.49695650  0.08416017 -0.11989363  hg <- purrr::partial(hrf_gaussian, mean=4, sd=1) grf <- gen_hrf(hg, lag=1, width=2)  vals <- grf(0:20)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_blocked.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Blocked HRF Function — gen_hrf_blocked","title":"Generate a Blocked HRF Function — gen_hrf_blocked","text":"gen_hrf_blocked function creates blocked HRF convolving input HRF boxcar function. can used model block designs fMRI analysis.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_blocked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Blocked HRF Function — gen_hrf_blocked","text":"","code":"gen_hrf_blocked(   hrf = hrf_gaussian,   width = 5,   precision = 0.1,   half_life = Inf,   summate = TRUE,   normalize = FALSE,   ... )  hrf_blocked(   hrf = hrf_gaussian,   width = 5,   precision = 0.1,   half_life = Inf,   summate = TRUE,   normalize = FALSE,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_blocked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Blocked HRF Function — gen_hrf_blocked","text":"hrf function representing hemodynamic response function. Default hrf_gaussian. width numeric value specifying width block seconds. Default 5. precision numeric value specifying sampling resolution seconds. Default 0.1. half_life numeric value specifying half-life exponential decay function, used model response attenuation. Default Inf, means decay. summate logical value indicating whether allow impulse response function \"add\" . Default TRUE. normalize logical value indicating whether rescale output peak output 1. Default FALSE. ... Extra arguments passed HRF function.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_blocked.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Blocked HRF Function — gen_hrf_blocked","text":"function representing blocked HRF.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_blocked.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Generate a Blocked HRF Function — gen_hrf_blocked","text":"hrf_blocked(): alias gen_hrf_blocked","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_lagged.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Lagged HRF Function — gen_hrf_lagged","title":"Generate a Lagged HRF Function — gen_hrf_lagged","text":"gen_hrf_lagged function takes HRF function applies specified lag . can useful modeling time-delayed hemodynamic responses.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_lagged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Lagged HRF Function — gen_hrf_lagged","text":"","code":"gen_hrf_lagged(hrf, lag = 2, normalize = FALSE, ...)  hrf_lagged(hrf, lag = 2, normalize = FALSE, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_lagged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Lagged HRF Function — gen_hrf_lagged","text":"hrf function representing underlying HRF shifted. lag numeric value specifying lag delay seconds apply HRF. can also vector lags, case function returns HRF set. normalize logical value indicating whether rescale output maximum absolute value 1. Defaults FALSE. ... Extra arguments supplied hrf function.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_lagged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Lagged HRF Function — gen_hrf_lagged","text":"function representing lagged HRF. lag vector lags, function returns HRF set.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_lagged.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Generate a Lagged HRF Function — gen_hrf_lagged","text":"hrf_lagged(): alias gen_hrf_lagged","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_lagged.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Lagged HRF Function — gen_hrf_lagged","text":"","code":"hrf_lag5 <- gen_hrf_lagged(HRF_SPMG1, lag=5) hrf_lag5(0:20) #>  [1] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #>  [7] 0.030644357 0.360749730 1.007784768 1.562306838 1.753945621 1.605440375 #> [13] 1.276104046 0.914165872 0.603787442 0.372395071 0.215170462 0.115290241 #> [19] 0.055163173 0.020765904 0.002277497"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_library.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an HRF (hemodynamic response function) library — gen_hrf_library","title":"Generate an HRF (hemodynamic response function) library — gen_hrf_library","text":"internal function generates HRF library applying provided HRF generating function (fun) row parameter grid (pgrid). Additional arguments can passed generating function using ....","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_library.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an HRF (hemodynamic response function) library — gen_hrf_library","text":"","code":"gen_hrf_library(fun, pgrid, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_library.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an HRF (hemodynamic response function) library — gen_hrf_library","text":"fun function generates HRF, given set parameters. pgrid data frame containing parameter grid, row represents set parameters passed HRF generating function. ... Additional arguments passed HRF generating function.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_library.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an HRF (hemodynamic response function) library — gen_hrf_library","text":"list HRFs generated applying HRF generating function row parameter grid.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an HRF Basis Set — gen_hrf_set","title":"Generate an HRF Basis Set — gen_hrf_set","text":"gen_hrf_set constructs HRF basis set one component functions. function used create arbitrary sets basis functions fMRI modeling.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an HRF Basis Set — gen_hrf_set","text":"","code":"gen_hrf_set(..., span = 32, name = \"hrf_set\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an HRF Basis Set — gen_hrf_set","text":"... list functions f(t) mapping time amplitude. span span seconds HRF. name name HRF.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an HRF Basis Set — gen_hrf_set","text":"instance type HRF inheriting function.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/gen_hrf_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an HRF Basis Set — gen_hrf_set","text":"","code":"hrf1 <- hrf_spmg1 |> gen_hrf(lag=0) hrf2 <- hrf_spmg1 |> gen_hrf(lag=3) hrf3 <- hrf_spmg1 |> gen_hrf(lag=6)  hset <- gen_hrf_set(hrf1, hrf2, hrf3)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/getHRF.html","id":null,"dir":"Reference","previous_headings":"","what":"getHRF — getHRF","title":"getHRF — getHRF","text":"function retrieves specified hemodynamic response function (HRF) name creates HRF object specified properties.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/getHRF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getHRF — getHRF","text":"","code":"getHRF(   name = c(\"gam\", \"gamma\", \"spmg1\", \"spmg2\", \"spmg3\", \"bspline\", \"gaussian\", \"tent\",     \"bs\"),   nbasis = 5,   span = 24,   lag = 0,   width = 0,   summate = TRUE,   normalize = FALSE,   ... )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/getHRF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getHRF — getHRF","text":"name name HRF function. Available options: \"gamma\", \"spmg1\", \"spmg2\", \"spmg3\", \"bspline\", \"gaussian\", \"tent\", \"bs\". nbasis number basis functions (relevant, default: 5). span temporal window basis sets span (default: 24). lag time lag parameter (default: 0). width width parameter (default: 0). summate Whether HRF response increases amplitude function stimulus duration (default: TRUE). normalize Whether scale output peak 1 (default: FALSE). ... Additional arguments passed gen_hrf function.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/getHRF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getHRF — getHRF","text":"HRF object specified properties.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/getHRF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"getHRF — getHRF","text":"","code":"hrf_obj <- getHRF(name = \"gamma\", nbasis = 5, span = 24) #> Error in getHRF(name = \"gamma\", nbasis = 5, span = 24): could not find function \"getHRF\""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get_data — get_data","title":"get_data — get_data","text":"get_data","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_data — get_data","text":"","code":"get_data(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_data — get_data","text":"x dataset ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/get_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"get_formula — get_formula","title":"get_formula — get_formula","text":"get_formula","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/get_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_formula — get_formula","text":"","code":"get_formula(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/get_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_formula — get_formula","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/get_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mask — get_mask","title":"get_mask — get_mask","text":"get binary inclusion mask associated dataset","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/get_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mask — get_mask","text":"","code":"get_mask(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/get_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mask — get_mask","text":"x dataset ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/global_onsets.html","id":null,"dir":"Reference","previous_headings":"","what":"return the ","title":"return the ","text":"global onsets defined cumulative time runs, .e. reset zero run.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/global_onsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return the ","text":"","code":"global_onsets(x, onsets, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/global_onsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return the ","text":"x object onsets relative onset times events ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/global_onsets.sampling_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute global onsets from a sampling_frame — global_onsets.sampling_frame","title":"Compute global onsets from a sampling_frame — global_onsets.sampling_frame","text":"function computes global onsets (respect first block) given sampling_frame.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/global_onsets.sampling_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute global onsets from a sampling_frame — global_onsets.sampling_frame","text":"","code":"# S3 method for sampling_frame global_onsets(x, onsets, blockids, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/global_onsets.sampling_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute global onsets from a sampling_frame — global_onsets.sampling_frame","text":"x sampling_frame object. onsets numeric vector onsets within specified blocks. blockids numeric vector block IDs corresponding onsets. ... Additional arguments (currently unused).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/global_onsets.sampling_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute global onsets from a sampling_frame — global_onsets.sampling_frame","text":"numeric vector global onsets computed specified sampling_frame.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/global_onsets.sampling_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute global onsets from a sampling_frame — global_onsets.sampling_frame","text":"","code":"frame <- sampling_frame(blocklens = c(100, 100, 100), TR = 2, precision = 0.5) onsets <- c(10, 20, 30) blockids <- c(1, 2, 3) global_onsets(frame, onsets, blockids) #> [1]  10 220 430"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf.html","id":null,"dir":"Reference","previous_headings":"","what":"hemodynamic regressor specification function for model formulas. — hrf","title":"hemodynamic regressor specification function for model formulas. — hrf","text":"function used formulas fitting functions, e.g. onsets ~ hrf(fac1,fac2) ...","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hemodynamic regressor specification function for model formulas. — hrf","text":"","code":"hrf(   ...,   basis = \"spmg1\",   onsets = NULL,   durations = NULL,   prefix = NULL,   subset = NULL,   precision = 0.3,   nbasis = 1,   contrasts = NULL,   id = NULL,   lag = 0,   summate = TRUE )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hemodynamic regressor specification function for model formulas. — hrf","text":"... variable names, must present enclosing environment (e.g. event_model object) basis impulse response function name pre-supplied function, one : \"gamma\", \"spmg1\", \"spmg2\", \"spmg3\", \"bspline\", \"gaussian\". onsets optional onsets override. missing, onsets taken event_model durations optional durations override. missing, onsets taken event_model prefix character string prepended variable names used identify term. Can used disambiguate two hrf terms variable(s) different onsets basis functions. subset expression indicating subset 'onsets' keep precision sampling precision seconds nbasis number basis functions -- used hemodynamic response functions (e.g. bspline) take variable number bases. contrasts one contrast_spec objects created contrast function. multiple contrasts required, wrapped list contrast_set. id  unique character identifier used refer term, otherwise determined variable names. lag temporal offset seconds added onset convolution summate whether impulse amplitudes sum duration greater 0.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"hemodynamic regressor specification function for model formulas. — hrf","text":"","code":"## 'hrf' is typically used in the context of \\code{formula}s.  form <- onsets ~ hrf(x) + hrf(y) + hrf(x,y)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_bspline.html","id":null,"dir":"Reference","previous_headings":"","what":"B-spline HRF (hemodynamic response function) — hrf_bspline","title":"B-spline HRF (hemodynamic response function) — hrf_bspline","text":"hrf_bspline function computes B-spline representation HRF (hemodynamic response function) given time points t.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_bspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"B-spline HRF (hemodynamic response function) — hrf_bspline","text":"","code":"hrf_bspline(t, span = 20, N = 5, degree = 3)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_bspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"B-spline HRF (hemodynamic response function) — hrf_bspline","text":"t vector time points. span numeric value representing temporal window basis set spans. Default value 20. N integer representing number basis functions. Default value 5. degree integer representing degree spline. Default value 3.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_bspline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"B-spline HRF (hemodynamic response function) — hrf_bspline","text":"matrix representing B-spline basis HRF given time points t.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_bspline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"B-spline HRF (hemodynamic response function) — hrf_bspline","text":"","code":"# Compute the B-spline HRF representation for time points from 0 to 20 with 0.5 increments hrfb <- hrf_bspline(seq(0, 20, by = .5), N = 4, degree = 2)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma HRF (hemodynamic response function) — hrf_gamma","title":"Gamma HRF (hemodynamic response function) — hrf_gamma","text":"hrf_gamma function computes gamma density-based HRF (hemodynamic response function) given time points t.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma HRF (hemodynamic response function) — hrf_gamma","text":"","code":"hrf_gamma(t, shape = 6, rate = 1)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma HRF (hemodynamic response function) — hrf_gamma","text":"t vector time points. shape numeric value representing shape parameter gamma probability density function. Default value 6. rate numeric value representing rate parameter gamma probability density function. Default value 1.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gamma HRF (hemodynamic response function) — hrf_gamma","text":"numeric vector representing gamma HRF given time points t.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_gamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gamma HRF (hemodynamic response function) — hrf_gamma","text":"","code":"# Compute the gamma HRF representation for time points from 0 to 20 with 0.5 increments hrf_gamma <- hrf_gamma(seq(0, 20, by = .5), shape = 6, rate = 1)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_gaussian.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian HRF (hemodynamic response function) — hrf_gaussian","title":"Gaussian HRF (hemodynamic response function) — hrf_gaussian","text":"hrf_gaussian function computes Gaussian density-based HRF (hemodynamic response function) given time points t.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_gaussian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian HRF (hemodynamic response function) — hrf_gaussian","text":"","code":"hrf_gaussian(t, mean = 6, sd = 2)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_gaussian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian HRF (hemodynamic response function) — hrf_gaussian","text":"t vector time points. mean numeric value representing mean Gaussian probability density function. Default value 6. sd numeric value representing standard deviation Gaussian probability density function. Default value 2.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_gaussian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian HRF (hemodynamic response function) — hrf_gaussian","text":"numeric vector representing Gaussian HRF given time points t.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_gaussian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gaussian HRF (hemodynamic response function) — hrf_gaussian","text":"","code":"# Compute the Gaussian HRF representation for time points from 0 to 20 with 0.5 increments hrf_gaussian <- hrf_gaussian(seq(0, 20, by = .5), mean = 6, sd = 2)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_half_cosine.html","id":null,"dir":"Reference","previous_headings":"","what":"Hemodynamic Response Function with Half-Cosine Basis — hrf_half_cosine","title":"Hemodynamic Response Function with Half-Cosine Basis — hrf_half_cosine","text":"function models hemodynamic response function (HRF) using four half-period cosine basis functions. HRF consists initial dip, rise peak, fall undershoot, recovery baseline.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_half_cosine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hemodynamic Response Function with Half-Cosine Basis — hrf_half_cosine","text":"","code":"hrf_half_cosine(t, h1 = 1, h2 = 5, h3 = 7, h4 = 7, f1 = 0, f2 = 0)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_half_cosine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hemodynamic Response Function with Half-Cosine Basis — hrf_half_cosine","text":"t vector time values. h1 Duration initial dip seconds. h2 Duration rise peak seconds. h3 Duration fall undershoot seconds. h4 Duration recovery baseline seconds. f1 Height starting point. f2 Height end point.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_half_cosine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hemodynamic Response Function with Half-Cosine Basis — hrf_half_cosine","text":"vector HRF values corresponding input time values.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_half_cosine.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hemodynamic Response Function with Half-Cosine Basis — hrf_half_cosine","text":"Woolrich, M. W., Behrens, T. E., & Smith, S. M. (2004). Constrained linear basis sets HRF modelling using Variational Bayes. NeuroImage, 21(4), 1748-1761.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_inv_logit.html","id":null,"dir":"Reference","previous_headings":"","what":"hrf_inv_logit — hrf_inv_logit","title":"hrf_inv_logit — hrf_inv_logit","text":"hemodynamic response function using difference two Inverse Logit functions.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_inv_logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hrf_inv_logit — hrf_inv_logit","text":"","code":"hrf_inv_logit(t, mu1 = 6, s1 = 1, mu2 = 16, s2 = 1, lag = 0)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_inv_logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hrf_inv_logit — hrf_inv_logit","text":"t vector times. mu1 time--peak rising phase (mean first logistic function). s1 width (slope) first logistic function. mu2 time--peak falling phase (mean second logistic function). s2 width (slope) second logistic function. lag time delay (default: 0).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_inv_logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"hrf_inv_logit — hrf_inv_logit","text":"vector difference two Inverse Logit HRF values.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_inv_logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"hrf_inv_logit — hrf_inv_logit","text":"","code":"hrf_inv_logit_basis <- hrf_diff_inv_logit(seq(0, 20, by = 0.5), mu1 = 6, s1 = 1, mu2 = 16, s2 = 1) #> Error in hrf_diff_inv_logit(seq(0, 20, by = 0.5), mu1 = 6, s1 = 1, mu2 = 16,     s2 = 1): could not find function \"hrf_diff_inv_logit\""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_mexhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Mexican Hat HRF (hemodynamic response function) — hrf_mexhat","title":"Mexican Hat HRF (hemodynamic response function) — hrf_mexhat","text":"hrf_mexhat function computes Mexican hat wavelet-based HRF (hemodynamic response function) given time points t.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_mexhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mexican Hat HRF (hemodynamic response function) — hrf_mexhat","text":"","code":"hrf_mexhat(t, mean = 6, sd = 2)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_mexhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mexican Hat HRF (hemodynamic response function) — hrf_mexhat","text":"t vector time points. mean numeric value representing mean Mexican hat wavelet. Default value 6. sd numeric value representing standard deviation Mexican hat wavelet. Default value 2.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_mexhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mexican Hat HRF (hemodynamic response function) — hrf_mexhat","text":"numeric vector representing Mexican hat wavelet-based HRF given time points t.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_mexhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mexican Hat HRF (hemodynamic response function) — hrf_mexhat","text":"","code":"# Compute the Mexican hat HRF representation for time points from 0 to 20 with 0.5 increments hrf_mexhat <- hrf_mexhat(seq(0, 20, by = .5), mean = 6, sd = 2)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_sine.html","id":null,"dir":"Reference","previous_headings":"","what":"hrf_sine — hrf_sine","title":"hrf_sine — hrf_sine","text":"hemodynamic response function using Sine Basis Set.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_sine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hrf_sine — hrf_sine","text":"","code":"hrf_sine(t, span = 24, N = 5)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_sine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hrf_sine — hrf_sine","text":"t vector times. span temporal window basis sets span (default: 24). N number basis functions (default: 5).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_sine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"hrf_sine — hrf_sine","text":"matrix sine basis functions.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_sine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"hrf_sine — hrf_sine","text":"","code":"hrf_sine_basis <- hrf_sine(seq(0, 20, by = 0.5), N = 4)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_smoothing_kernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute an HRF smoothing kernel — hrf_smoothing_kernel","title":"Compute an HRF smoothing kernel — hrf_smoothing_kernel","text":"function computes temporal similarity matrix series hemodynamic response functions.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_smoothing_kernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute an HRF smoothing kernel — hrf_smoothing_kernel","text":"","code":"hrf_smoothing_kernel(len, TR = 2, form)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_smoothing_kernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute an HRF smoothing kernel — hrf_smoothing_kernel","text":"len number scans. TR repetition time (default 2 seconds). form trialwise formula expression, see examples.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_smoothing_kernel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute an HRF smoothing kernel — hrf_smoothing_kernel","text":"","code":"form <- onsets ~ trialwise(basis=\"gaussian\") sk <- hrf_smoothing_kernel(100, TR=1.5, form) #> [1] \"onsets\"                          \"trialwise(basis = \\\"gaussian\\\")\""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_spmg1.html","id":null,"dir":"Reference","previous_headings":"","what":"hrf_spmg1 — hrf_spmg1","title":"hrf_spmg1 — hrf_spmg1","text":"hemodynamic response function based SPM canonical double gamma parameterization.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_spmg1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hrf_spmg1 — hrf_spmg1","text":"","code":"hrf_spmg1(t, P1 = 5, P2 = 15, A1 = 0.0833)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_spmg1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hrf_spmg1 — hrf_spmg1","text":"t vector time points. P1 first exponent parameter (default: 5). P2 second exponent parameter (default: 15). A1 Amplitude scaling factor positive gamma function component; normally fixed .0833","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_spmg1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"hrf_spmg1 — hrf_spmg1","text":"vector HRF values given time points.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_spmg1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"hrf_spmg1 — hrf_spmg1","text":"function models hemodynamic response using canonical double gamma parameterization SPM software. HRF defined linear combination two gamma functions different exponents (P1 P2) amplitudes (A1 A2). commonly used fMRI data analysis estimate BOLD (blood-oxygen-level-dependent) signal changes associated neural activity.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_spmg1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"hrf_spmg1 — hrf_spmg1","text":"","code":"# Generate a time vector time_points <- seq(0, 30, by=0.1) # Compute the HRF values using the SPM canonical double gamma parameterization hrf_values <- hrf_spmg1(time_points) # Plot the HRF values plot(time_points, hrf_values, type='l', main='SPM Canonical Double Gamma HRF')"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_time.html","id":null,"dir":"Reference","previous_headings":"","what":"HRF (hemodynamic response function) as a linear function of time — hrf_time","title":"HRF (hemodynamic response function) as a linear function of time — hrf_time","text":"hrf_time function computes value HRF, simple linear function time t, t greater 0 less maxt.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HRF (hemodynamic response function) as a linear function of time — hrf_time","text":"","code":"hrf_time(t, maxt = 22)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HRF (hemodynamic response function) as a linear function of time — hrf_time","text":"t numeric value representing time seconds. maxt numeric value representing maximum time point domain. Default value 22.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HRF (hemodynamic response function) as a linear function of time — hrf_time","text":"numeric value representing value HRF given time t.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HRF (hemodynamic response function) as a linear function of time — hrf_time","text":"","code":"# Compute the HRF value for t = 5 seconds with the default maximum time hrf_val <- hrf_time(5)  # Compute the HRF value for t = 5 seconds with a custom maximum time of 30 seconds hrf_val_custom_maxt <- hrf_time(5, maxt = 30)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_toeplitz.html","id":null,"dir":"Reference","previous_headings":"","what":"HRF Toeplitz Matrix — hrf_toeplitz","title":"HRF Toeplitz Matrix — hrf_toeplitz","text":"Create Toeplitz matrix hemodynamic response function (HRF) convolution.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_toeplitz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HRF Toeplitz Matrix — hrf_toeplitz","text":"","code":"hrf_toeplitz(hrf, time, len, sparse = FALSE)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_toeplitz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HRF Toeplitz Matrix — hrf_toeplitz","text":"hrf hemodynamic response function. time numeric vector representing time points. len length output Toeplitz matrix. sparse Logical, TRUE, output Toeplitz matrix returned sparse matrix (default: FALSE).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/hrf_toeplitz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HRF Toeplitz Matrix — hrf_toeplitz","text":"Toeplitz matrix HRF convolution.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/is_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"is_categorical — is_categorical","title":"is_categorical — is_categorical","text":"checks see variable cateogircal e.g. factor-based","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/is_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_categorical — is_categorical","text":"","code":"is_categorical(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/is_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_categorical — is_categorical","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/is_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"is_continuous — is_continuous","title":"is_continuous — is_continuous","text":"checks see variable continuous e.g. numeric/non-categorical","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/is_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_continuous — is_continuous","text":"","code":"is_continuous(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/is_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_continuous — is_continuous","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/latent_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Latent Dataset Object — latent_dataset","title":"Create a Latent Dataset Object — latent_dataset","text":"function creates latent dataset object, encapsulates dimension-reduced subspace \"latent variables\". dataset list containing information latent neuroimaging vector, TR, number runs, event table, base path, sampling frame, censor.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/latent_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Latent Dataset Object — latent_dataset","text":"","code":"latent_dataset(lvec, TR, run_length, event_table = data.frame())"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/latent_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Latent Dataset Object — latent_dataset","text":"lvec instance class LatentNeuroVec. TR Repetition time (TR) fMRI acquisition. run_length numeric vector specifying length run dataset. event_table optional data frame containing event information. Default empty data frame. base_path optional base path dataset. Default \".\" (current directory). censor optional numeric vector specifying time points censor. Default NULL.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/latent_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Latent Dataset Object — latent_dataset","text":"latent dataset object class c(\"latent_dataset\", \"fmri_dataset\", \"list\").","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/latent_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Latent Dataset Object — latent_dataset","text":"","code":"# Create a matrix with 100 rows and 1000 columns (voxels) X <- matrix(rnorm(100*1000), 100, 1000) pres <- prcomp(X) basis <- pres$x[,1:25] loadings <- pres$rotation[,1:25] offset <- colMeans(X)  # Create a LatentNeuroVec object lvec <- neuroim2::LatentNeuroVec(basis, loadings, neuroim2::NeuroSpace(c(10,10,10,100)),  mask=rep(TRUE,1000), offset=offset)  # Create a latent_dataset dset <- latent_dataset(lvec, TR=2, run_length=100)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/levels.html","id":null,"dir":"Reference","previous_headings":"","what":"levels — levels","title":"levels — levels","text":"extract levels term","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"levels — levels","text":"","code":"levels(x)  # S3 method for event_factor levels(x)  # S3 method for event_variable levels(x)  # S3 method for event_matrix levels(x)  # S3 method for event_set levels(x)  # S3 method for event_term levels(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"levels — levels","text":"x term","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/longnames.html","id":null,"dir":"Reference","previous_headings":"","what":"extract long names of variable — longnames","title":"extract long names of variable — longnames","text":"get extended names set variable levels","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/longnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract long names of variable — longnames","text":"","code":"longnames(x, ...)  longnames(x, ...)  # S3 method for convolved_term longnames(x, ...)  # S3 method for afni_hrf_convolved_term longnames(x, ...)  # S3 method for event_model longnames(x, ...)  # S3 method for event_term longnames(x, ...)  # S3 method for matrix_term longnames(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/longnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract long names of variable — longnames","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/matrix_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Matrix Dataset Object — matrix_dataset","title":"Create a Matrix Dataset Object — matrix_dataset","text":"function creates matrix dataset object, list containing information data matrix, TR, number runs, event table, sampling frame, mask.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/matrix_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Matrix Dataset Object — matrix_dataset","text":"","code":"matrix_dataset(datamat, TR, run_length, event_table = data.frame())"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/matrix_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Matrix Dataset Object — matrix_dataset","text":"datamat matrix column voxel time-series. TR Repetition time (TR) fMRI acquisition. run_length numeric vector specifying length run dataset. event_table optional data frame containing event information. Default empty data frame.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/matrix_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Matrix Dataset Object — matrix_dataset","text":"matrix dataset object class c(\"matrix_dataset\", \"fmri_dataset\", \"list\").","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/matrix_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Matrix Dataset Object — matrix_dataset","text":"","code":"# A matrix with 100 rows and 100 columns (voxels) X <- matrix(rnorm(100*100), 100, 100) dset <- matrix_dataset(X, TR=2, run_length=100)  # An iterator with 5 chunks iter <- data_chunks(dset, nchunks=5) `%do%` <- foreach::`%do%` y <- foreach::foreach(chunk = iter) %do% { colMeans(chunk$data) } length(y) == 5 #> [1] TRUE  # An iterator with 100 chunks iter <- data_chunks(dset, nchunks=100) y <- foreach::foreach(chunk = iter) %do% { colMeans(chunk$data) } length(y) == 100 #> [1] TRUE  # A matrix_dataset with 200 rows, 100 columns and 2 runs X <- matrix(rnorm(200*100), 200, 100) dset <- matrix_dataset(X, TR=2, run_length=c(100,100))  # Get a \"runwise\" iterator. For every iteration, an entire run's worth of data is returned. iter <- data_chunks(dset, runwise=TRUE) y <- foreach::foreach(chunk = iter)  %do% { colMeans(chunk$data) } length(y) == 2 #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/matrix_term.html","id":null,"dir":"Reference","previous_headings":"","what":"matrix_term — matrix_term","title":"matrix_term — matrix_term","text":"function creates matrix_term object, set regression variables stored numeric matrix.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/matrix_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"matrix_term — matrix_term","text":"","code":"matrix_term(varname, mat)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/matrix_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"matrix_term — matrix_term","text":"varname name variable. mat matrix values.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/matrix_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"matrix_term — matrix_term","text":"matrix_term object.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/matrix_term.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"matrix_term — matrix_term","text":"Create matrix_term object.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/matrix_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"matrix_term — matrix_term","text":"","code":"mat <- matrix(rnorm(100 * 10), 100, 10) mterm <- matrix_term(\"mterm\", mat)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_Fcontrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta-analysis of F-contrasts — meta_Fcontrasts","title":"Meta-analysis of F-contrasts — meta_Fcontrasts","text":"function performs meta-analysis list F-contrasts results obtained different studies tests.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_Fcontrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meta-analysis of F-contrasts — meta_Fcontrasts","text":"","code":"meta_Fcontrasts(fres)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_Fcontrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meta-analysis of F-contrasts — meta_Fcontrasts","text":"fres list F-contrast results, element list contains results particular study test.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_Fcontrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meta-analysis of F-contrasts — meta_Fcontrasts","text":"list containing meta-analysis results contrast. element list includes: estimateA numeric vector combined z-scores. seA numeric vector pooled standard errors. statA numeric vector combined z-scores. probA numeric vector combined p-values. stat_typeA character string indicating type statistic used, case \"zfstat\".","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_Fcontrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meta-analysis of F-contrasts — meta_Fcontrasts","text":"","code":"# Assuming `fres` is a list of F-contrast results obtained from different studies or tests # meta_results <- meta_Fcontrasts(fres) # print(meta_results)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta-analysis of contrasts — meta_contrasts","title":"Meta-analysis of contrasts — meta_contrasts","text":"function performs meta-analysis list contrast results obtained different studies tests.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meta-analysis of contrasts — meta_contrasts","text":"","code":"meta_contrasts(cres, weighting = c(\"inv_var\", \"equal\"))"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meta-analysis of contrasts — meta_contrasts","text":"cres list contrast results, element list contains results particular study test. weighting character string specifying weighting method use meta-analysis. Options \"inv_var\" (inverse variance weighting) \"equal\" (equal weighting). Default \"inv_var\".","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meta-analysis of contrasts — meta_contrasts","text":"list containing meta-analysis results contrast, including: estimateA matrix combined contrast estimates. seA matrix pooled standard errors. statA matrix combined z-scores. probA matrix combined p-values. stat_typeA character string indicating type statistic used, case \"zstat\".","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meta-analysis of contrasts — meta_contrasts","text":"","code":"# Assuming `cres` is a list of contrast results obtained from different studies or tests # meta_results <- meta_contrasts(cres) # print(meta_results)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_fixef.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed-effects meta-analysis — meta_fixef","title":"Fixed-effects meta-analysis — meta_fixef","text":"function performs fixed-effects meta-analysis input beta estimates standard errors. supports two types weighting schemes: inverse-variance weighting equal weighting.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_fixef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixed-effects meta-analysis — meta_fixef","text":"","code":"meta_fixef(beta, se, weighting = c(\"inv_var\", \"equal\"))"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_fixef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixed-effects meta-analysis — meta_fixef","text":"beta numeric matrix beta estimates multiple studies tests. se numeric matrix standard errors corresponding beta estimates. weighting character string specifying weighting scheme use. Options \"inv_var\" (default) inverse-variance weighting \"equal\" equal weighting.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_fixef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fixed-effects meta-analysis — meta_fixef","text":"list containing following elements: estimateA numeric vector combined beta estimates. seA numeric vector pooled standard errors. statA numeric vector combined z-scores. probA numeric vector combined p-values. stat_typeA character string indicating type statistic used, case \"zstat\".","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_fixef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fixed-effects meta-analysis — meta_fixef","text":"","code":"beta <- matrix(c(0.5, 1, 0.75), nrow=1) se <- matrix(c(0.2, 0.15, 0.25), nrow=1) result <- meta_fixef(beta, se, weighting = \"inv_var\") #> Error in meta_fixef(beta, se, weighting = \"inv_var\"): could not find function \"meta_fixef\" print(result) #> Error in print(result): object 'result' not found"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_stouffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta-analysis using Stouffer's method — meta_stouffer","title":"Meta-analysis using Stouffer's method — meta_stouffer","text":"function performs meta-analysis input p-values standard errors using Stouffer's method. Stouffer's method combines z-scores weighting inverse variance.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_stouffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meta-analysis using Stouffer's method — meta_stouffer","text":"","code":"meta_stouffer(pval, se)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_stouffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meta-analysis using Stouffer's method — meta_stouffer","text":"pval numeric vector p-values multiple studies tests. se numeric vector standard errors corresponding p-values.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_stouffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meta-analysis using Stouffer's method — meta_stouffer","text":"list containing following elements: estimateA numeric vector weighted z-scores obtained using Stouffer's method. seA numeric vector combined standard errors. statSame estimate, weighted z-scores. probA numeric vector combined p-values. stat_typeA character string indicating type statistic used, case \"zfstat\".","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/meta_stouffer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meta-analysis using Stouffer's method — meta_stouffer","text":"","code":"pval <- c(0.05, 0.01, 0.03) se <- c(0.2, 0.15, 0.25) result <- meta_stouffer(pval, se) #> Error in meta_stouffer(pval, se): could not find function \"meta_stouffer\" print(result) #> Error in print(result): object 'result' not found"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_arma.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a multiresponse ARMA model — multiresponse_arma","title":"Fit a multiresponse ARMA model — multiresponse_arma","text":"function fits multiresponse ARMA model fMRI data specified autocorrelation structure using provided formula, dataset environment, contrast list, variable names, F-contrast, design matrix, block ids.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_arma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a multiresponse ARMA model — multiresponse_arma","text":"","code":"multiresponse_arma(   form,   data_env,   conlist,   vnames,   fcon,   modmat,   blockids,   autocor = c(\"ar1\", \"ar2\", \"arma\", \"auto\") )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_arma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a multiresponse ARMA model — multiresponse_arma","text":"form model formula. data_env dataset environment containing time-series data. conlist contrast list. vnames variable names. fcon F-contrast. modmat design matrix. blockids block ids. autocor autocorrelation structure, either \"ar1\", \"ar2\", \"arma\", \"auto\".","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_arma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a multiresponse ARMA model — multiresponse_arma","text":"list containing contrasts, F-contrasts, beta statistics fitted ARMA model.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_bootstrap_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiresponse Bootstrap Linear Model — multiresponse_bootstrap_lm","title":"Multiresponse Bootstrap Linear Model — multiresponse_bootstrap_lm","text":"function performs multiresponse bootstrap linear model.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_bootstrap_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiresponse Bootstrap Linear Model — multiresponse_bootstrap_lm","text":"","code":"multiresponse_bootstrap_lm(   form,   data_env,   conlist,   vnames,   fcon,   modmat,   block_size = 30,   boot_rows = FALSE,   nboot = 100,   event_indices )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_bootstrap_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiresponse Bootstrap Linear Model — multiresponse_bootstrap_lm","text":"form Formula linear model. data_env Environment containing data linear model. conlist List contrasts. vnames Vector variable names. fcon Contrasts fixed effects. modmat Model matrix. block_size Size blocks bootstrap (default: 30). boot_rows Logical flag indicating whether bootstrap rows (default: FALSE). nboot Number bootstrap iterations (default: 100). event_indices Indices events.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_bootstrap_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiresponse Bootstrap Linear Model — multiresponse_bootstrap_lm","text":"list containing original fitted model bootstrap results.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiresponse Linear Model — multiresponse_lm","title":"Multiresponse Linear Model — multiresponse_lm","text":"function fits linear model multiple responses fMRI dataset.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiresponse Linear Model — multiresponse_lm","text":"","code":"multiresponse_lm(form, data_env, conlist, vnames, fcon, modmat = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiresponse Linear Model — multiresponse_lm","text":"form formula used define linear model. data_env environment containing data used linear model. conlist list contrasts used analysis. vnames names variables used linear model. fcon F-contrasts used analysis. modmat model matrix (default NULL, calculate model matrix using formula).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/multiresponse_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiresponse Linear Model — multiresponse_lm","text":"list containing results multiresponse linear model analysis.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/nbasis.html","id":null,"dir":"Reference","previous_headings":"","what":"return number of basis functions associated with hrf. — nbasis","title":"return number of basis functions associated with hrf. — nbasis","text":"return number basis functions associated hrf.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/nbasis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return number of basis functions associated with hrf. — nbasis","text":"","code":"nbasis(x)  # S3 method for convolved_term nbasis(x)  # S3 method for hrfspec nbasis(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/nbasis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return number of basis functions associated with hrf. — nbasis","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/nuisance.html","id":null,"dir":"Reference","previous_headings":"","what":"nuisance — nuisance","title":"nuisance — nuisance","text":"'nuisance' term consists arbitrary numeric matrix number rows image time points.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/nuisance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nuisance — nuisance","text":"","code":"nuisance(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/nuisance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nuisance — nuisance","text":"x matrix","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/nuisance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nuisance — nuisance","text":"class type nuisancespec","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/null_regressor.html","id":null,"dir":"Reference","previous_headings":"","what":"null_regressor — null_regressor","title":"null_regressor — null_regressor","text":"null_regressor","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/null_regressor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null_regressor — null_regressor","text":"","code":"null_regressor(hrf = HRF_SPMG1, span = 24)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/null_regressor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null_regressor — null_regressor","text":"hrf hrf function span hrf span","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/one_against_all_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"One Against All Contrast — one_against_all_contrast","title":"One Against All Contrast — one_against_all_contrast","text":"Construct contrasts comparing factor level average levels.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/one_against_all_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One Against All Contrast — one_against_all_contrast","text":"","code":"one_against_all_contrast(levels, facname, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/one_against_all_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One Against All Contrast — one_against_all_contrast","text":"levels vector factor levels compared. facname character string specifying name factor containing supplied levels. optional formula specifying subset contrast computed.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/one_against_all_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One Against All Contrast — one_against_all_contrast","text":"contrast_set object containing contrasts comparing factor level average levels.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/one_against_all_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One Against All Contrast — one_against_all_contrast","text":"","code":"fac <- factor(rep(c(\"A\", \"B\", \"C\"), 2)) con <- one_against_all_contrast(levels(fac), \"fac\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/onsets.html","id":null,"dir":"Reference","previous_headings":"","what":"get event onsets of a variable — onsets","title":"get event onsets of a variable — onsets","text":"return onset vector","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/onsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get event onsets of a variable — onsets","text":"","code":"onsets(x)  # S3 method for regressor onsets(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/onsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get event onsets of a variable — onsets","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/p_values.html","id":null,"dir":"Reference","previous_headings":"","what":"p_values — p_values","title":"p_values — p_values","text":"extract p-values fitted model","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/p_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p_values — p_values","text":"","code":"p_values(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/p_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p_values — p_values","text":"x object ... extra arguments","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/pair_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Pair Contrast — pair_contrast","title":"Pair Contrast — pair_contrast","text":"Construct sum--zero contrast two logical expressions.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/pair_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pair Contrast — pair_contrast","text":"","code":"pair_contrast(A, B, name, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/pair_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pair Contrast — pair_contrast","text":"formula representing first logical expression contrast. B formula representing second logical expression contrast. name character string specifying name contrast (mandatory). optional formula specifying subset contrast computed.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/pair_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pair Contrast — pair_contrast","text":"pair_contrast_spec object containing sum--zero contrast two logical expressions.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/pair_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pair Contrast — pair_contrast","text":"","code":"# A hypothetical experiment with a factor 'category' that takes on values of 'face' and 'scene' pair_contrast(~ category == \"face\", ~ category == \"scene\", name=\"face_scene\") #> contrast: face_scene  #>  A:  ~category == \"face\"  #>  B:  ~category == \"scene\""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/pairwise_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise Contrasts — pairwise_contrasts","title":"Pairwise Contrasts — pairwise_contrasts","text":"Construct pairwise contrasts combinations factor levels.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/pairwise_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise Contrasts — pairwise_contrasts","text":"","code":"pairwise_contrasts(levels, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/pairwise_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise Contrasts — pairwise_contrasts","text":"levels vector factor levels compared. optional formula specifying subset contrast computed.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/pairwise_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise Contrasts — pairwise_contrasts","text":"contrast_set object containing pairwise contrasts combinations factor levels.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/pairwise_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise Contrasts — pairwise_contrasts","text":"","code":"pairwise_contrasts(c(\"A\", \"B\", \"C\")) #> contrast: con_A_B  #>  A:  ~A  #>  B:  ~B  #>  #> contrast: con_A_C  #>  A:  ~A  #>  B:  ~C  #>  #> contrast: con_B_C  #>  A:  ~B  #>  B:  ~C  #>"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/parent_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"parent_terms — parent_terms","title":"parent_terms — parent_terms","text":"parent_terms","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/parent_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parent_terms — parent_terms","text":"","code":"parent_terms(x)  # S3 method for event_term parent_terms(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/parent_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parent_terms — parent_terms","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/plot.event_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an event_model object — plot.event_model","title":"Plot an event_model object — plot.event_model","text":"function creates plot event_model object, visualizing design matrix.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/plot.event_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an event_model object — plot.event_model","text":"","code":"# S3 method for event_model plot(x, y, term_name = NULL, longnames = TRUE, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/plot.event_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an event_model object — plot.event_model","text":"x event_model object. y Unused. term_name Name term plot (optional). longnames Logical flag; TRUE, use long names plot (default: TRUE). ... Additional arguments passed ggplot2 function.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/plot.event_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an event_model object — plot.event_model","text":"ggplot2 plot object.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/plot.regressor.html","id":null,"dir":"Reference","previous_headings":"","what":"plot a regressor object — plot.regressor","title":"plot a regressor object — plot.regressor","text":"plot regressor object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/plot.regressor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot a regressor object — plot.regressor","text":"","code":"# S3 method for regressor plot(x, samples, add = FALSE, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/plot.regressor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot a regressor object — plot.regressor","text":"x object samples times seconds along plot regressor function add whether add existing plot ... extra args send plot","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/poly_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Polynomial Contrast — poly_contrast","title":"Polynomial Contrast — poly_contrast","text":"Create polynomial contrast evaluated set (orderable) factor levels.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/poly_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polynomial Contrast — poly_contrast","text":"","code":"poly_contrast(A, name, where = NULL, degree = 1, value_map = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/poly_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polynomial Contrast — poly_contrast","text":"formula describing contrast. name character string representing name contrast. optional formula defining subset contrast computed. degree integer representing degree polynomial (default: 1). value_map optional list maps levels factor numeric value.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/poly_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polynomial Contrast — poly_contrast","text":"list containing polynomial contrast specification.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/poly_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polynomial Contrast — poly_contrast","text":"","code":"pcon <- poly_contrast(~ time, name=\"poly_time_3\", degree=3)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/print.fmri_betas.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty print method for fmri_betas objects — print.fmri_betas","title":"Pretty print method for fmri_betas objects — print.fmri_betas","text":"Pretty print method fmri_betas objects","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/print.fmri_betas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty print method for fmri_betas objects — print.fmri_betas","text":"","code":"# S3 method for fmri_betas print(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/print.fmri_betas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty print method for fmri_betas objects — print.fmri_betas","text":"x object class \"fmri_betas\" ... Additional arguments passed print function","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/read_fmri_config.html","id":null,"dir":"Reference","previous_headings":"","what":"read a basic fMRI configuration file — read_fmri_config","title":"read a basic fMRI configuration file — read_fmri_config","text":"read basic fMRI configuration file","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/read_fmri_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read a basic fMRI configuration file — read_fmri_config","text":"","code":"read_fmri_config(file_name, base_path = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/read_fmri_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read a basic fMRI configuration file — read_fmri_config","text":"file_name name configuration file base_path file path prepended relative file names","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/regressor.html","id":null,"dir":"Reference","previous_headings":"","what":"construct a regressor object — regressor","title":"construct a regressor object — regressor","text":"construct regressor object can used generate regression variables set onset times hemodynamic response function. regressor can evaluated set times generate time-course appropriate modeling fMRI response.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/regressor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct a regressor object — regressor","text":"","code":"regressor(   onsets,   hrf = HRF_SPMG1,   duration = 0,   amplitude = 1,   span = 40,   summate = TRUE )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/regressor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"construct a regressor object — regressor","text":"onsets event onsets seconds hrf hemodynamic response function, e.g. HRF_SPMG1 costum HRF duration duration events (default 0) amplitude scaling vector (default 1) span temporal window impulse response function (default 24) summate whether summate hrf amplitude function duration event.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/regressor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"construct a regressor object — regressor","text":"S3 list type regressor","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/regressor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"construct a regressor object — regressor","text":"","code":"reg <- regressor(c(10,12,14,16,18, 40), HRF_SPMG1, duration=3) pred <- evaluate(reg, seq(0,100,by=2)) nbasis(reg) == 1 #> [1] TRUE  reg2 <- regressor(c(10,12,14,16,18, 40), HRF_SPMG1, duration=3, summate=FALSE) pred2 <- evaluate(reg2, seq(0,100,by=2)) stopifnot(max(pred) > max(pred2))"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/run.afni_lm_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an afni_lm_spec object — run.afni_lm_spec","title":"Run an afni_lm_spec object — run.afni_lm_spec","text":"function runs 3dDeconvolve command specified afni_lm_spec object. outputs results specified directory can either execute command output shell '3dDeconvolve.sh' script.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/run.afni_lm_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an afni_lm_spec object — run.afni_lm_spec","text":"","code":"# S3 method for afni_lm_spec run(x, outdir, execute = TRUE, execfun = system, prepend = \"\", ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/run.afni_lm_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an afni_lm_spec object — run.afni_lm_spec","text":"x afni_lm_spec object containing model, dataset, options outdir output folder execute Whether execute command output shell '3dDeconvolve.sh' script (default TRUE) execfun Function used execute external system command (default system) prepend Prepend string command (default empty string) ... Additional arguments passed execfun","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/run.afni_lm_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an afni_lm_spec object — run.afni_lm_spec","text":"NULL. function used side effects, writing output files.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/run.afni_lm_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run an afni_lm_spec object — run.afni_lm_spec","text":"","code":"# Assuming you have created an afni_lm_spec object called alm run.afni_lm_spec(alm, outdir=\"results\") #> Error in run.afni_lm_spec(alm, outdir = \"results\"): could not find function \"run.afni_lm_spec\""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/run.html","id":null,"dir":"Reference","previous_headings":"","what":"run — run","title":"run — run","text":"function runs command x provided extra arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run — run","text":"","code":"run(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run — run","text":"x command run ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"run — run","text":"Run command.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/runwise_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Runwise Linear Model for fMRI Dataset — runwise_lm","title":"Runwise Linear Model for fMRI Dataset — runwise_lm","text":"function performs runwise linear model analysis fMRI dataset running linear model data run (responses split vertically) combines results runs via meta-analysis.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/runwise_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runwise Linear Model for fMRI Dataset — runwise_lm","text":"","code":"runwise_lm(dset, model, conlist, fcon, robust = FALSE, verbose = FALSE)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/runwise_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runwise Linear Model for fMRI Dataset — runwise_lm","text":"dset object class fmri_dataset. model fMRI model used analysis. conlist list contrasts used analysis. fcon F-contrasts used analysis. robust Whether use robust linear modeling (default FALSE). verbose Whether display progress messages (default FALSE).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/runwise_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runwise Linear Model for fMRI Dataset — runwise_lm","text":"list containing combined results runwise linear model analysis.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/samples.html","id":null,"dir":"Reference","previous_headings":"","what":"extract samples — samples","title":"extract samples — samples","text":"get sampling times regressor sampling frame","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract samples — samples","text":"","code":"samples(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract samples — samples","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/samples.sampling_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract samples from a sampling_frame — samples.sampling_frame","title":"Extract samples from a sampling_frame — samples.sampling_frame","text":"function extracts relative global time sample/acquisition sampling_frame.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/samples.sampling_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract samples from a sampling_frame — samples.sampling_frame","text":"","code":"# S3 method for sampling_frame samples(x, blockids = NULL, global = FALSE, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/samples.sampling_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract samples from a sampling_frame — samples.sampling_frame","text":"x sampling_frame object. blockids numeric vector block IDs extract samples . NULL (default), block IDs used. global logical value. TRUE, global time (respect first block) sample/acquisition returned. FALSE (default), relative time (respect last block) sample/acquisition returned. ... Additional arguments (currently unused).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/samples.sampling_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract samples from a sampling_frame — samples.sampling_frame","text":"numeric vector sample times extracted specified sampling_frame.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/samples.sampling_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract samples from a sampling_frame — samples.sampling_frame","text":"","code":"frame <- sampling_frame(blocklens = c(100, 100, 100), TR = 2, precision = 0.5) # The relative time (with respect to the last block) in seconds of each sample/acquisition sam <- samples(frame) # The global time (with respect to the first block) of each sample/acquisition gsam <- samples(frame, global = TRUE)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sampling_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a sampling_frame — sampling_frame","title":"Construct a sampling_frame — sampling_frame","text":"sampling_frame describes block structure temporal sampling fMRI paradigm.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sampling_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a sampling_frame — sampling_frame","text":"","code":"sampling_frame(blocklens, TR, start_time = TR/2, precision = 0.1)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sampling_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a sampling_frame — sampling_frame","text":"blocklens numeric vector representing number scans block. TR numeric value vector representing repetition time seconds (.e., spacing consecutive image acquisitions). start_time numeric value vector representing offset first scan block (default TR/2). precision numeric value representing discrete sampling interval used convolution hemodynamic response function (default 0.1).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sampling_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a sampling_frame — sampling_frame","text":"list class \"sampling_frame\" describing block structure temporal sampling fMRI paradigm.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sampling_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a sampling_frame — sampling_frame","text":"","code":"frame <- sampling_frame(blocklens = c(100, 100, 100), TR = 2, precision = 0.5)  # The relative time (with respect to the last block) in seconds of each sample/acquisition sam <- samples(frame) # The global time (with respect to the first block) of each sample/acquisition gsam <- samples(frame, global = TRUE)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift a time series object — shift","title":"Shift a time series object — shift","text":"generic function shift time series objects. goal provide simple way apply time shifts various time series objects, regressors time series data.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift a time series object — shift","text":"","code":"shift(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift a time series object — shift","text":"x object representing time series time-based data structure. shift_amount numeric value indicating amount time shift object . Positive values shift object right, negative values shift left.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift a time series object — shift","text":"object class input, shifted specified amount.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shift a time series object — shift","text":"","code":"if (FALSE) { # Shift a regressor object shifted_regressor <- shift(my_regressor, 5)  # Shift a time series object shifted_time_series <- shift(my_time_series, -2) }"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/shortnames.html","id":null,"dir":"Reference","previous_headings":"","what":"extract short shortnames of variable — shortnames","title":"extract short shortnames of variable — shortnames","text":"get short names set variable levels","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/shortnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract short shortnames of variable — shortnames","text":"","code":"shortnames(x, ...)  # S3 method for event_model shortnames(x, ...)  # S3 method for convolved_term shortnames(x, ...)  # S3 method for matrix_term shortnames(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/shortnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract short shortnames of variable — shortnames","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sim_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate fMRI Time Series — sim_ts","title":"Simulate fMRI Time Series — sim_ts","text":"function simulates fMRI time series multiple conditions specified parameters.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sim_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate fMRI Time Series — sim_ts","text":"","code":"sim_ts(ncond, nreps = 12, amps = rep(1, ncond), isi = c(3, 6), TR = 1.5)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sim_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate fMRI Time Series — sim_ts","text":"ncond number conditions simulate. nreps number repetitions per condition (default 12). amps vector amplitudes condition (default vector 1s length ncond). isi vector specifying range inter-stimulus intervals sample (default c(3, 6)). TR repetition time fMRI acquisition (default 1.5 seconds).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sim_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate fMRI Time Series — sim_ts","text":"list two elements: onset: vector onset times trial. mat: matrix containing simulated fMRI time series, time first column simulated responses condition subsequent columns.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/simulate_fmri_noise.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate fMRI Noise using ARMA Model — simulate_fmri_noise","title":"Simulate fMRI Noise using ARMA Model — simulate_fmri_noise","text":"function simulates fMRI noise using autoregressive moving average (ARMA) model.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/simulate_fmri_noise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate fMRI Noise using ARMA Model — simulate_fmri_noise","text":"","code":"simulate_fmri_noise(n, ar = c(0.3), ma = c(0.5), sd = 1, seed = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/simulate_fmri_noise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate fMRI Noise using ARMA Model — simulate_fmri_noise","text":"n number time points fMRI time series. ar numeric vector containing autoregressive (AR) coefficients (default c(0.3)). ma numeric vector containing moving average (MA) coefficients (default c(0.5)). sd standard deviation white noise component (default 1). seed optional seed reproducibility (default NULL).","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/simulate_fmri_noise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate fMRI Noise using ARMA Model — simulate_fmri_noise","text":"numeric vector containing simulated fMRI noise.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/single_trial_regressor.html","id":null,"dir":"Reference","previous_headings":"","what":"single_trial_regressor — single_trial_regressor","title":"single_trial_regressor — single_trial_regressor","text":"construct regressor object single onset","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/single_trial_regressor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"single_trial_regressor — single_trial_regressor","text":"","code":"single_trial_regressor(   onsets,   hrf = HRF_SPMG1,   duration = 0,   amplitude = 1,   span = 24 )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/single_trial_regressor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"single_trial_regressor — single_trial_regressor","text":"onsets event onset seconds, must length 1. hrf hemodynamic response function, e.g. HRF_SPMG1 duration duration event (default 0) amplitude scaling vector (default 1) span temporal window impulse response function (default 24)","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/single_trial_regressor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"single_trial_regressor — single_trial_regressor","text":"S3 list type single_trial_regressor","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/single_trial_regressor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"single_trial_regressor — single_trial_regressor","text":"","code":"reg <- single_trial_regressor(c(10), HRF_SPMG1) pred <- evaluate(reg, seq(0,100,by=2)) nbasis(reg) == 1 #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/soft_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Soft-threshold function — soft_threshold","title":"Soft-threshold function — soft_threshold","text":"function applies soft-thresholding input values, setting values threshold zero shrinking remaining values threshold amount.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/soft_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soft-threshold function — soft_threshold","text":"","code":"soft_threshold(x, threshold)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/soft_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Soft-threshold function — soft_threshold","text":"x numeric vector input values threshold non-negative threshold value soft-thresholding operation","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/soft_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Soft-threshold function — soft_threshold","text":"numeric vector soft-thresholded values","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/soft_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soft-threshold function — soft_threshold","text":"","code":"x <- c(-3, -2, -1, 0, 1, 2, 3) threshold <- 1 soft_thresholded <- soft_threshold(x, threshold) #> Error in soft_threshold(x, threshold): could not find function \"soft_threshold\" print(soft_thresholded) #> Error in print(soft_thresholded): object 'soft_thresholded' not found"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/split_by_block.html","id":null,"dir":"Reference","previous_headings":"","what":"split_by_block — split_by_block","title":"split_by_block — split_by_block","text":"split variables block id","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/split_by_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"split_by_block — split_by_block","text":"","code":"split_by_block(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/split_by_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"split_by_block — split_by_block","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/split_onsets.event_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Split onsets of an event_term object — split_onsets.event_term","title":"Split onsets of an event_term object — split_onsets.event_term","text":"function splits onsets event_term object based factor levels block identifiers. useful processing fMRI data analyzing event-related designs multiple conditions blocks.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/split_onsets.event_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split onsets of an event_term object — split_onsets.event_term","text":"","code":"# S3 method for event_term split_onsets(x, sframe, global = FALSE, blocksplit = FALSE, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/split_onsets.event_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split onsets of an event_term object — split_onsets.event_term","text":"x event_term object sframe data frame representing sampling frame global logical value indicating whether use global onsets (default: FALSE) blocksplit logical value indicating whether split onsets block identifiers (default: FALSE) ... Additional arguments passed methods","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/split_onsets.event_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split onsets of an event_term object — split_onsets.event_term","text":"list numeric vectors representing split onsets factor level block identifier","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/split_onsets.html","id":null,"dir":"Reference","previous_headings":"","what":"split an onset vector into a list — split_onsets","title":"split an onset vector into a list — split_onsets","text":"split onset vector list","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/split_onsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"split an onset vector into a list — split_onsets","text":"","code":"split_onsets(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/split_onsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"split an onset vector into a list — split_onsets","text":"x object associated onset vector ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/standard_error.fmri_latent_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the standard error for an fmri_latent_lm object — standard_error.fmri_latent_lm","title":"Calculate the standard error for an fmri_latent_lm object — standard_error.fmri_latent_lm","text":"Calculate standard error fmri_latent_lm object","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/standard_error.fmri_latent_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the standard error for an fmri_latent_lm object — standard_error.fmri_latent_lm","text":"","code":"# S3 method for fmri_latent_lm standard_error(x, type = c(\"estimates\", \"contrasts\"), recon = FALSE)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/standard_error.fmri_latent_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the standard error for an fmri_latent_lm object — standard_error.fmri_latent_lm","text":"x fmri_latent_lm object. type character string specifying whether return standard error \"estimates\" \"contrasts\". recon Logical, TRUE, function calculates standard error reconstructed data.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/standard_error.fmri_latent_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the standard error for an fmri_latent_lm object — standard_error.fmri_latent_lm","text":"tibble containing standard error values.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/standard_error.html","id":null,"dir":"Reference","previous_headings":"","what":"standard_error — standard_error","title":"standard_error — standard_error","text":"extract standard errors fitted model","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/standard_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"standard_error — standard_error","text":"","code":"standard_error(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/standard_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"standard_error — standard_error","text":"x object ... extra arguments","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/stats.html","id":null,"dir":"Reference","previous_headings":"","what":"stats — stats","title":"stats — stats","text":"extract statistics fitted model","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stats — stats","text":"","code":"stats(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stats — stats","text":"x object ... extra arguments","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sub_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"sub_basis — sub_basis","title":"sub_basis — sub_basis","text":"subset parametric basis regressor","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sub_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sub_basis — sub_basis","text":"","code":"sub_basis(x, subset)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/sub_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sub_basis — sub_basis","text":"x object subset subset","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"term_indices — term_indices","title":"term_indices — term_indices","text":"function retrieves term indices associated design matrix provided model term object x.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"term_indices — term_indices","text":"","code":"term_indices(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"term_indices — term_indices","text":"x model/term object ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"term_indices — term_indices","text":"vector term indices.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_indices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"term_indices — term_indices","text":"Get term indices associated design matrix.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_matrices.fmri_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct term matrices for an fMRI model — term_matrices.fmri_model","title":"Construct term matrices for an fMRI model — term_matrices.fmri_model","text":"function constructs term matrices fMRI model, consists event-related terms baseline-related terms. term matrices used building design matrix fMRI data analysis.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_matrices.fmri_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct term matrices for an fMRI model — term_matrices.fmri_model","text":"","code":"# S3 method for fmri_model term_matrices(x, blocknum = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_matrices.fmri_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct term matrices for an fMRI model — term_matrices.fmri_model","text":"x object class \"fmri_model\" containing event baseline models. blocknum (Optional) numeric vector specifying block numbers included term matrices. default, unique block numbers event model included.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_matrices.fmri_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct term matrices for an fMRI model — term_matrices.fmri_model","text":"named list term matrices, event terms followed baseline terms. Attributes \"event_term_indices\" \"baseline_term_indices\" store indices event baseline terms, \"blocknum\" stores block numbers, \"varnames\" stores variable names.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"term_matrices — term_matrices","title":"term_matrices — term_matrices","text":"term_matrices","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"term_matrices — term_matrices","text":"","code":"term_matrices(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"term_matrices — term_matrices","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_names.html","id":null,"dir":"Reference","previous_headings":"","what":"term_names — term_names","title":"term_names — term_names","text":"term_names","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"term_names — term_names","text":"","code":"term_names(x)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/term_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"term_names — term_names","text":"x object extra term names ","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/to_glt.html","id":null,"dir":"Reference","previous_headings":"","what":"convert a contrast to an AFNI 'GLT' — to_glt","title":"convert a contrast to an AFNI 'GLT' — to_glt","text":"convert contrast AFNI 'GLT'","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/to_glt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert a contrast to an AFNI 'GLT' — to_glt","text":"","code":"to_glt(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/to_glt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert a contrast to an AFNI 'GLT' — to_glt","text":"x contrast convert ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/trialwise.html","id":null,"dir":"Reference","previous_headings":"","what":"trialwise — trialwise","title":"trialwise — trialwise","text":"function used formulas fitting functions, e.g. onsets ~ trialwise() ...","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/trialwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"trialwise — trialwise","text":"","code":"trialwise(   label = \"trialwise\",   basis = \"spmg1\",   onsets = NULL,   durations = NULL,   prefix = NULL,   subset = NULL,   precision = 0.3,   id = NULL,   add_sum = FALSE )"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/trialwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"trialwise — trialwise","text":"label label generated variable. basis impulse response function name pre-supplied function, one : \"gamma\", \"spmg1\", \"spmg2\", \"spmg3\", \"bspline\", \"gaussian\". onsets optional onsets override. missing, onsets taken event_model durations optional durations override. missing, onsets taken event_model prefix character string prepended variable names used identify term. Can used disambiguate two hrf terms variable(s) different onsets basis functions. subset expression indicating subset 'onsets' keep precision sampling precision seconds id  unique character identifier used refer term, otherwise determined variable names. add_sum add sum trialwise regressors set. can sued model average effect.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/trialwise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"trialwise — trialwise","text":"","code":"x <- trialwise(basis=\"gaussian\", onsets=c(1,17,25), durations=c(1,2,3))"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/unit_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit Contrast — unit_contrast","title":"Unit Contrast — unit_contrast","text":"Construct contrast sums 1 used define contrasts baseline.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/unit_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit Contrast — unit_contrast","text":"","code":"unit_contrast(A, name, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/unit_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit Contrast — unit_contrast","text":"formula representing contrast expression. name character string specifying name contrast. optional formula specifying subset conditions apply contrast .","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/unit_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unit Contrast — unit_contrast","text":"unit_contrast_spec object containing contrast sums 1.","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/unit_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unit Contrast — unit_contrast","text":"","code":"con <- unit_contrast(~ Face, name=\"Main_face\")"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/wrap_chunked_lm_results.html","id":null,"dir":"Reference","previous_headings":"","what":"a beastly function that unravels multiple chunk-wise model fits results ... — wrap_chunked_lm_results","title":"a beastly function that unravels multiple chunk-wise model fits results ... — wrap_chunked_lm_results","text":"beastly function unravels multiple chunk-wise model fits results ...","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/wrap_chunked_lm_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a beastly function that unravels multiple chunk-wise model fits results ... — wrap_chunked_lm_results","text":"","code":"wrap_chunked_lm_results(cres, event_indices = NULL)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/write_glt.html","id":null,"dir":"Reference","previous_headings":"","what":"write a GLT file to disk — write_glt","title":"write a GLT file to disk — write_glt","text":"write GLT file disk","code":""},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/write_glt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write a GLT file to disk — write_glt","text":"","code":"write_glt(x, fname)"},{"path":"https://bbuchsbaum.github.io/fmrireg/reference/write_glt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write a GLT file to disk — write_glt","text":"x object fname file name write ","code":""}]
