% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basis.R, R/event-classes.R
\name{levels.Scale}
\alias{levels.Scale}
\alias{levels.ScaleWithin}
\alias{levels.RobustScale}
\alias{levels.event}
\alias{columns.event}
\title{Extract Levels from fmrireg Objects}
\usage{
\method{levels}{Scale}(x)

\method{levels}{ScaleWithin}(x)

\method{levels}{RobustScale}(x)

\method{levels}{event}(x)

\method{columns}{event}(x)
}
\arguments{
\item{x}{An object from which to extract levels. Can be:
\itemize{
\item An \code{event} object - returns factor levels or column names
\item A \code{Scale} object - returns the variable name
\item A \code{ScaleWithin} object - returns the variable name
\item A \code{RobustScale} object - returns the variable name
}}
}
\value{
A character vector of levels or names, depending on the object type:
\itemize{
\item For categorical events: the factor levels
\item For continuous events: the column names (matrices) or variable name (vectors)
\item For scale objects: the variable name being scaled
}
}
\description{
Extract levels from various fmrireg objects. These methods extend the base R
\code{\link[base]{levels}} generic to work with fmrireg-specific classes.
}
\section{Functions}{
\itemize{
\item \code{columns(event)}: Alias for levels.event

}}
\examples{
# Create a categorical event
fac_event <- event_factor(
  factor(c("A", "B", "A", "B")),
  name = "condition",
  onsets = c(1, 10, 20, 30),
  blockids = rep(1, 4)
)
levels(fac_event)  # Returns: c("A", "B")

# Create a continuous event
cont_event <- event_variable(
  c(1.2, 0.8, 1.5, 0.9),
  name = "reaction_time",
  onsets = c(1, 10, 20, 30),
  blockids = rep(1, 4)
)
levels(cont_event)  # Returns: "reaction_time"
}
