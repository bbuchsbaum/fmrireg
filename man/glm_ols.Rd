% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fmri_betas.R
\name{glm_ols}
\alias{glm_ols}
\title{GLM OLS Estimation Convenience Function}
\usage{
glm_ols(
  dataset,
  model_obj,
  basis_obj,
  basemod = NULL,
  block = ~1,
  progress = TRUE,
  ...
)
}
\arguments{
\item{dataset}{A \code{matrix_dataset} object containing the fMRI time series data}

\item{model_obj}{An \code{event_model} object specifying the experimental design}

\item{basis_obj}{An HRF basis object (e.g., from \code{fmrihrf::HRF_SPMG1}, \code{HRF_FIR}, etc.)}

\item{basemod}{A \code{baseline_model} instance to regress out of data before beta estimation (default: NULL)}

\item{block}{A formula specifying the block factor (default: ~ 1 for single block)}

\item{progress}{Logical; show progress bar (default: TRUE)}

\item{...}{Additional arguments passed to \code{estimate_betas}}
}
\value{
A list of class "fmri_betas" containing the estimated coefficients
}
\description{
A convenience wrapper around \code{estimate_betas} for ordinary least squares (OLS) estimation.
This function provides a simplified interface for fitting GLMs using OLS on matrix datasets.
}
\details{
\strong{Use Cases:}
\itemize{
\item \strong{Condition-level estimation}: Estimates average responses for each experimental condition
\item \strong{General linear modeling}: Standard GLM approach for group-level or condition-level effects
\item \strong{Multi-trial averaging}: Combines trials of the same condition to estimate mean responses
}

For single-trial estimation where each trial gets its own beta estimate, use \code{glm_lss()} instead.
}
\examples{
\dontrun{
# Create event model and data
event_data <- data.frame(
  onset = c(10, 30, 50, 70),
  condition = factor(c("A", "B", "A", "B")),
  run = rep(1, 4)
)
sframe <- fmrihrf::sampling_frame(blocklens = 100, TR = 2)
model_obj <- event_model(onset ~ hrf(condition), 
                        data = event_data, 
                        block = ~ run, 
                        sampling_frame = sframe)

# Create data matrix (100 timepoints, 10 voxels)
Y <- matrix(rnorm(1000), 100, 10)

# Create matrix_dataset with event table
dset <- matrix_dataset(Y, TR = 2, run_length = 100, event_table = event_data)

# Fit with OLS - estimates average response for each condition
fit <- glm_ols(dset, model_obj, fmrihrf::HRF_SPMG1)
dim(fit$betas_ran)  # 2 conditions x 10 voxels
}

}
\seealso{
\code{\link{estimate_betas}} for the underlying estimation function,
\code{\link{glm_lss}} for single trial estimation
}
