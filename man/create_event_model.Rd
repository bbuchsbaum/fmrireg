% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event_model.R
\name{create_event_model}
\alias{create_event_model}
\title{Create an event model directly from components, accepting variables as strings or expressions}
\usage{
create_event_model(
  event_terms,
  events,
  onsets,
  block,
  sampling_frame,
  durations = 0,
  drop_empty = TRUE,
  precision = 0.3
)
}
\arguments{
\item{event_terms}{A list of event term specifications. Each term is a list with components:
- \code{variables}: Character vector of variable names or expressions (captured using \code{rlang::exprs})
- \code{hrf}: HRF specification for the term}

\item{events}{A data frame of event variables. Variables involved in terms must be present here.}

\item{onsets}{A numeric vector of event onset times in seconds}

\item{block}{A vector of block IDs (must be strictly increasing integers)}

\item{sampling_frame}{The time series grid over which to sample the function}

\item{durations}{A numeric vector of event durations. Default is 0 for all events.}

\item{drop_empty}{Logical indicating whether to drop empty events. Default is TRUE.}

\item{precision}{Numeric value indicating the precision of HRF sampling. Default is 0.3.}
}
\value{
An event_model object
}
\description{
This function constructs an event model directly from its components, allowing variables
to be specified as character strings or expressions, similar to the formula interface.
}
\examples{
library(fmrireg)
library(rlang)

# Example with variables specified as character strings
event_terms <- list(
  list(
    variables = c("x", "y"),
    hrf = "spmg1"
  )
)

# Example with variables specified as expressions
event_terms <- list(
  list(
    variables = exprs(x, Poly(y, 2)),
    hrf = "spmg1"
  )
)

}
