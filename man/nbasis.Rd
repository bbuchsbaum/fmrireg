% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generic.R, R/basis.R, R/covariate.R
\name{nbasis}
\alias{nbasis}
\alias{nbasis.convolved_term}
\alias{nbasis.BSpline}
\alias{nbasis.Poly}
\alias{nbasis.Scale}
\alias{nbasis.ScaleWithin}
\alias{nbasis.RobustScale}
\alias{nbasis.Standardized}
\alias{nbasis.Ident}
\alias{nbasis.covariate_convolved_term}
\title{Return the global onsets of an object}
\usage{
nbasis(x, ...)

\method{nbasis}{convolved_term}(x, ...)

\method{nbasis}{BSpline}(x, ...)

\method{nbasis}{Poly}(x, ...)

\method{nbasis}{Scale}(x, ...)

\method{nbasis}{ScaleWithin}(x, ...)

\method{nbasis}{RobustScale}(x, ...)

\method{nbasis}{Standardized}(x, ...)

\method{nbasis}{Ident}(x, ...)

\method{nbasis}{covariate_convolved_term}(x, ...)
}
\arguments{
\item{x}{The object to query (typically an HRF, hrfspec, or convolved_term)}

\item{...}{Additional arguments passed to methods}

\item{onsets}{A numeric vector of relative onset times within each run/block}

\item{blockids}{Numeric vector specifying which block/run each onset belongs to}
}
\value{
A numeric vector of global onset times where:
\itemize{
\item Each onset is adjusted by the cumulative duration of previous runs
\item Times are in the same units as the input onsets (typically seconds)
\item NA is returned for onsets that exceed their block duration
}

An integer indicating the number of basis functions:
\itemize{
\item 1 for canonical HRFs (e.g., SPM gamma)
\item >1 for flexible basis sets (e.g., Fourier, B-spline)
\item For convolved terms: number of basis functions per condition
}
}
\description{
Convert relative onset times to global (cumulative) onset times across runs. Global onsets
are defined as cumulative time over runs, meaning they do not reset to zero for each run.
This is useful for:
\itemize{
\item Converting run-specific onsets to experiment-wide timings
\item Aligning events across multiple runs
\item Computing temporal distances between events in different runs
}

Get the number of basis functions used in a hemodynamic response function (HRF) or
model term. For canonical HRFs (like SPM's canonical HRF), this returns 1. For
flexible basis sets (like Fourier or B-spline bases), this returns the number of
basis functions used to model the response shape.
}
\examples{
# Create a sampling frame with three runs
sframe <- sampling_frame(
  blocklens = c(100, 100, 100),  # 100 scans per run
  TR = 2                         # 2 seconds per scan
)

# Define events in each run
run_onsets <- c(10, 20, 30)     # Events at 10s, 20s, 30s
run_ids <- c(1, 2, 3)           # One event per run

# Convert to global onsets
global_times <- global_onsets(
  sframe,
  onsets = run_onsets,
  blockids = run_ids
)
# Returns: c(10, 220, 430)
# Because:
#  - Run 1: 10s
#  - Run 2: 20s + (100 scans * 2s) = 220s
#  - Run 3: 30s + (200 scans * 2s) = 430s
# Check basis functions for different HRF types

# Canonical HRF (single basis)
canonical_hrf <- HRF_SPMG1
nbasis(canonical_hrf)  # Returns: 1

# Fourier basis set
fourier_hrf <- fmrihrf::gen_hrf("fourier", nbasis = 3)
nbasis(fourier_hrf)  # Returns: 3

# Create event model with multiple basis functions
event_data <- data.frame(
  condition = factor(c("A", "B", "A", "B")),
  onsets = c(1, 10, 20, 30),
  run = c(1, 1, 1, 1)
)
sframe <- sampling_frame(blocklens = 50, TR = 2)

# Model with Fourier basis
evmodel <- event_model(
  onsets ~ hrf(condition, basis = "fourier", nbasis = 3),
  data = event_data,
  block = ~run,
  sampling_frame = sframe
)

# Get number of basis functions for model term
nbasis(evmodel)  # Returns: 3 (basis functions per condition)
}
\seealso{
\code{\link[=sampling_frame]{sampling_frame()}}, \code{\link[=event_model]{event_model()}}
Return number of basis functions associated with HRF

\code{\link[fmrihrf:HRF_objects]{fmrihrf::HRF_SPMG1()}}, \code{\link[=event_model]{event_model()}}

Other timing: 
\code{\link{durations}()},
\code{\link{onsets}()},
\code{\link{split_by_block}()}

Other hrf: 
\code{\link{fitted_hrf}()},
\code{\link{penalty_matrix}()}
}
\concept{hrf}
\concept{timing}
