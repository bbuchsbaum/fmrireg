% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generic.R, R/event_model.R
\name{Fcontrasts}
\alias{Fcontrasts}
\alias{Fcontrasts.convolved_term}
\alias{Fcontrasts.event_model}
\title{Get block/run indices}
\usage{
Fcontrasts(x, ...)

\method{Fcontrasts}{convolved_term}(x, ...)

\method{Fcontrasts}{event_model}(x, ...)
}
\arguments{
\item{x}{The model term to generate contrasts for (typically an event_term or event_model)}

\item{...}{Additional arguments passed to methods. Common arguments include:
\describe{
\item{basis}{Character; type of basis functions used}
\item{nbasis}{Integer; number of basis functions}
\item{exclude}{Character vector of conditions to exclude}
}}
}
\value{
A numeric vector where:
\itemize{
\item Each element is the block/run ID for that scan
\item IDs are sequential integers starting from 1
\item Length matches the total number of scans
}

A numeric vector where:
\itemize{
\item Each element is the number of scans in a block or run
\item Length equals the number of blocks/runs
\item Values are positive integers
}

A list of contrast specifications where each contains:
\describe{
\item{weights}{Matrix of contrast weights}
\item{term}{The model term being tested}
\item{name}{Descriptive name for the contrast}
\item{df}{Degrees of freedom for the contrast}
}
}
\description{
Get the block or run number associated with each scan/timepoint in the dataset.
Block indices are used to:
\itemize{
\item Track which scans belong to which runs
\item Split data by experimental blocks
\item Align events with their corresponding runs
\item Apply run-specific processing
}

Get the number of scans or timepoints in each block/run of the dataset. Block lengths
are used to:
\itemize{
\item Define the temporal structure of the experiment by specifying scan counts and timing per run
\item Allocate memory for data matrices by pre-allocating arrays based on scan counts
\item Validate data dimensions across runs by checking against expected lengths
\item Calculate global timing information by computing cumulative timing across runs
}

Create F-contrasts to test for overall effects of model terms. F-contrasts are used to:
\describe{
\item{categorical}{Test for any effect of a categorical predictor}
\item{basis}{Compare multiple basis functions simultaneously}
\item{nonlinear}{Test for nonlinear effects of continuous predictors}
\item{overall}{Evaluate overall significance of model terms}
}
}
\details{
Row names of the contrast matrices can specify which levels of the term are
tested.  Any matching is done against the design matrix column names.
}
\examples{
# Create a sampling frame with multiple runs
sframe <- sampling_frame(
  blocklens = c(50, 75, 50),  # Different length runs
  TR = 2
)

# Get block IDs for all scans
block_ids <- blockids(sframe)
# Returns: c(1,1,...,1, 2,2,...,2, 3,3,...,3)
# 50 ones, 75 twos, 50 threes

# Create a matrix dataset
X <- matrix(rnorm(175 * 10), 175, 10)  # 175 timepoints (50+75+50), 10 voxels
dset <- fmridataset::matrix_dataset(
  X,
  TR = 2,
  run_length = c(50, 75, 50)
)

# Note: blockids method for matrix_dataset is in the fmridataset package
# To get block IDs from a dataset, ensure fmridataset is loaded
# Create a sampling frame with varying run lengths
sframe <- sampling_frame(
  blocklens = c(100, 150, 100),  # Different length runs
  TR = 2
)

# Get number of scans per run
run_lengths <- blocklens(sframe)  # Returns: c(100, 150, 100)

# Use block lengths to create a dataset
total_scans <- sum(run_lengths)  # 350 total timepoints
X <- matrix(rnorm(total_scans * 10), total_scans, 10)  # 10 voxels
dset <- fmridataset::matrix_dataset(
  X,
  TR = 2,
  run_length = run_lengths
)

# Verify block lengths in dataset
dset_lengths <- blocklens(dset)

# Use lengths to create time vectors for each run
time_vectors <- lapply(run_lengths, function(len) seq(0, by = 2, length.out = len))
# Create event data with multiple conditions
event_data <- data.frame(
  condition = factor(c("A", "B", "C", "A", "B", "C")),
  rt = c(0.8, 1.2, 0.9, 1.1, 0.7, 1.3),
  onsets = c(1, 10, 20, 30, 40, 50),
  run = c(1, 1, 1, 1, 1, 1)
)

# Create sampling frame
sframe <- sampling_frame(blocklens = 60, TR = 2)

# Create event model with multiple terms
evmodel <- event_model(
  onsets ~ hrf(condition) + hrf(rt),
  data = event_data,
  block = ~run,
  sampling_frame = sframe
)

# Get F-contrast for main effect of condition
cond_contrast <- Fcontrasts(evmodel)

# Create model with multiple basis functions
evmodel2 <- event_model(
  onsets ~ hrf(condition, basis = "fourier", nbasis = 3),
  data = event_data,
  block = ~run,
  sampling_frame = sframe
)

# Get F-contrasts testing all basis functions
basis_contrasts <- Fcontrasts(evmodel2)
}
\seealso{
\code{\link[=blocklens]{blocklens()}}, \code{\link[=split_by_block]{split_by_block()}}, \code{\link[=sampling_frame]{sampling_frame()}}
Get block/run lengths

\code{\link[=blockids]{blockids()}}, \code{\link[=split_by_block]{split_by_block()}}, \code{\link[=sampling_frame]{sampling_frame()}}
Generate F-contrasts for a model term

\code{\link[=event_model]{event_model()}}, \code{\link[=contrast_weights]{contrast_weights()}}

Other block_operations: 
\code{\link{split_by_block}()}

Other block_operations: 
\code{\link{split_by_block}()}
}
\concept{block_operations}
\concept{contrasts}
