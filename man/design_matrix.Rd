% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generic.R, R/fmri_model.R
\name{correlation_map}
\alias{correlation_map}
\alias{design_matrix.convolved_term}
\alias{design_matrix.fmri_model}
\title{Get term indices from a model or term}
\usage{
correlation_map(x, ...)

\method{design_matrix}{convolved_term}(x, blockid = NULL, ...)

\method{design_matrix}{fmri_model}(x, blockid = NULL, ...)
}
\arguments{
\item{x}{The model object (event_model, baseline_model, or fmri_model)}

\item{...}{Additional arguments passed to methods. Common arguments include:
\describe{
\item{method}{Correlation method ("pearson" or "spearman")}
\item{half_matrix}{Logical; if TRUE, show only lower triangle}
\item{absolute_limits}{Logical; if TRUE, set color limits to [-1,1]}
}}

\item{blockid}{Numeric vector specifying which blocks/runs to include (optional)}

\item{allrows}{Logical; if TRUE, return all rows including those with no events (default: FALSE)}

\item{drop.empty}{Logical; if TRUE, drop empty conditions (default: TRUE)}

\item{what}{Character; what to extract - "unique" for unique values or "all" for all values (default: "unique")}

\item{transformed}{Logical; if TRUE, return transformed values (default: FALSE)}
}
\value{
A named list where each element contains the column indices in the design matrix
corresponding to that term. For example:
\itemize{
\item For event terms: Indices for each experimental condition
\item For baseline terms: Indices for drift and block terms
\item For convolved terms: Indices for each basis function
}

A tibble containing the design matrix, where:
\itemize{
\item Rows represent time points (scans)
\item Columns represent predictor variables
\item Column names indicate the condition or regressor (see Details)
}

A vector containing the ordered elements:
\itemize{
\item For factors: The factor levels in their defined order
\item For numeric variables: Unique values in ascending order
\item For event terms: Combined elements from all variables
}

A ggplot2 object containing the correlation heatmap, where:
\itemize{
\item Rows and columns represent model terms
\item Colors indicate correlation strength (-1 to 1)
\item Darker colors indicate stronger correlations
}
}
\description{
Get the indices that map between model terms and their corresponding columns in the
design matrix. These indices are essential for:
\itemize{
\item Extracting coefficients for specific terms
\item Computing contrasts for specific model components
\item Mapping between event terms and baseline terms
\item Identifying which design matrix columns belong to which terms
}

Extract the unique elements from a term or variable in their natural order. For
categorical variables (factors), this returns the factor levels. For continuous
variables, this returns the unique values in ascending order. For event terms with
multiple variables, this returns the combined elements.

Generate a correlation heatmap showing the relationships between columns in a design
matrix. This visualization helps identify potential collinearity between regressors
in the model. For event models, it shows correlations between different conditions.
For baseline models, it shows correlations between drift and nuisance terms.
}
\details{
\subsection{Column Naming (Post-Refactor)}{

As of version X.Y.Z, column names in the final design matrix generated by
\code{event_model} follow the structure:
\code{term_tag} + \verb{_} + \code{condition_tag} + \verb{_b##} basis suffix

Refer to \code{event_model} documentation for details on \code{term_tag} and \code{condition_tag} generation.
The \code{design_matrix} methods for individual term types (like \code{design_matrix.event_term})
return unconvolved predictors whose names may \emph{not} yet follow this final structure.
The final naming is applied by \code{convolve.event_term} and assembled by
\code{build_event_model_design_matrix}.
}
}
\examples{
# Create a model with multiple terms
event_data <- data.frame(
  stimulus = factor(c("face", "house", "face", "house")),
  rt = c(0.8, 1.2, 0.9, 1.1),
  onsets = c(1, 10, 20, 30),
  run = c(1, 1, 1, 1)
)

# Create sampling frame
sframe <- sampling_frame(blocklens = 50, TR = 2)

# Create event model with multiple terms
evmodel <- event_model(
  onsets ~ hrf(stimulus) + hrf(rt, basis = "fourier", nbasis = 2),
  data = event_data,
  block = ~run,
  sampling_frame = sframe
)

# Get indices for each term
indices <- term_indices(evmodel)
# Returns list with:
#  - Indices for stimulus conditions
#  - Indices for rt basis functions

# Create full model with baseline
bmodel <- baseline_model(basis = "bs", degree = 3, sframe = sframe)
fmodel <- fmri_model(evmodel, bmodel)

# Get indices for full model
full_indices <- term_indices(fmodel)
# Returns indices for both event and baseline terms
# Create event terms with different types

# Categorical variable
event_data <- data.frame(
  condition = factor(c("A", "B", "A", "B"), levels = c("B", "A")),
  onsets = c(1, 10, 20, 30),
  run = c(1, 1, 1, 1)
)
cat_term <- event_term(
  list(condition = event_data$condition),
  onsets = event_data$onsets,
  blockids = event_data$run
)
elements(cat_term)  # Returns: c("B", "A")

# Continuous variable
event_data$rt <- c(1.2, 0.8, 1.1, 0.9)
cont_term <- event_term(
  list(rt = event_data$rt),
  onsets = event_data$onsets,
  blockids = event_data$run
)
elements(cont_term)  # Returns: c(0.8, 0.9, 1.1, 1.2)
# Create event data
event_data <- data.frame(
  condition = factor(c("face", "house", "face", "house")),
  rt = c(0.8, 1.2, 0.9, 1.1),
  onsets = c(1, 10, 20, 30),
  run = c(1, 1, 1, 1)
)

# Create sampling frame
sframe <- sampling_frame(blocklens = 50, TR = 2)

# Create event model
evmodel <- event_model(
  onsets ~ hrf(condition) + hrf(rt),
  data = event_data,
  block = ~run,
  sampling_frame = sframe
)

# Plot correlation map for event model
correlation_map(evmodel)

# Create baseline model
bmodel <- baseline_model(
  basis = "bs",
  degree = 3,
  sframe = sframe
)

# Plot correlation map for baseline model
correlation_map(bmodel)

# Create full model and plot combined correlations
fmodel <- fmri_model(evmodel, bmodel)
correlation_map(fmodel, method = "pearson", half_matrix = TRUE)
}
\seealso{
\code{\link[=event_terms]{event_terms()}}, \code{\link[=baseline_terms]{baseline_terms()}}, \code{\link[=design_matrix]{design_matrix()}}
design_matrix

Extract or construct the design matrix from a model term or object. The design matrix
contains the predictor variables used in the model, with one row per time point and
one column per predictor. For event-related designs, the design matrix typically
contains the convolved HRF responses. For baseline terms, it contains drift and
nuisance regressors.

\code{\link[=event_model]{event_model()}}, \code{\link[=baseline_model]{baseline_model()}}, \code{\link[=fmri_model]{fmri_model()}}
elements

Return the ordered elements of a term or variable.

\code{\link[=levels]{levels()}}, \code{\link[=event_term]{event_term()}}
correlation_map

Create a correlation heatmap for an fMRI design matrix.

\code{\link[=event_model]{event_model()}}, \code{\link[=baseline_model]{baseline_model()}}
}
\concept{design_matrices}
\concept{model_components}
\concept{term_properties}
\concept{visualization}
