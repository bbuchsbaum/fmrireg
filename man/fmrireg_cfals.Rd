% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cfals_wrapper.R
\name{fmrireg_cfals}
\alias{fmrireg_cfals}
\title{Estimate Rank-1 HRF Using LS+SVD/CF-ALS Methods}
\usage{
  fmrireg_cfals(
    fmri_data_obj,
    event_model,
    hrf_basis,
    confound_obj = NULL,
    method = c("ls_svd_1als", "ls_svd_only", "cf_als"),
    lambda_init = 1,
    lambda_b = 10,
    lambda_h = 1,
    fullXtX = FALSE,
    max_alt = 1
  )
}
\arguments{
  \item{fmri_data_obj}{An \code{fmri_dataset} or numeric matrix of BOLD data
  (time points x voxels). Sampling information is taken from the dataset or
  from the \code{sampling_frame} attribute of the matrix.}

  \item{event_model}{An \code{event_model} describing the stimuli.}

  \item{hrf_basis}{An \code{HRF} basis object used to create the design matrices.}

  \item{confound_obj}{Optional matrix of confound regressors with the same
  number of rows as the data matrix.}

  \item{method}{Estimation method. One of \code{"ls_svd_only"},
  \code{"ls_svd_1als"} (default) or \code{"cf_als"}.}

  \item{lambda_init}{Ridge penalty for the initial GLM solve used by LS+SVD
  methods.}

  \item{lambda_b}{Ridge penalty for the beta update step.}

  \item{lambda_h}{Ridge penalty for the h update step.}

  \item{fullXtX}{Logical; if \code{TRUE} include cross-condition terms in the
  h update (where supported).}

  \item{max_alt}{Number of alternating updates when \code{method = "cf_als"}.}
}
\value{An object of class \code{fmrireg_cfals_fit} containing HRF coefficients and
condition amplitudes.}
\description{High level wrapper that prepares design matrices and dispatches to
 the desired estimation engine. Supports the fast LS+SVD initialisation, the
 one-step refinement LS+SVD+1ALS, or the full alternating CF-ALS scheme.}
\details{The \code{lambda_*} parameters control ridge penalties for the initial
 GLM, beta updates, and h updates respectively. Setting \code{fullXtX = TRUE}
 uses cross-condition terms in the h update, which increases computational cost
 but can provide more accurate estimates when conditions are correlated.}
\examples{
  sframe <- sampling_frame(blocklens = 40, TR = 1)
  ev_df <- data.frame(onset = c(5, 15, 25), block = 1)
  emod <- event_model(onset ~ hrf(constant), data = ev_df,
                      block = ~ block, sampling_frame = sframe)
  Y <- matrix(rnorm(40 * 2), 40, 2)
  fit <- fmrireg_cfals(Y, emod, HRF_SPMG1)
  print(fit)
}
