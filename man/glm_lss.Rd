% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fmri_betas.R
\name{glm_lss}
\alias{glm_lss}
\title{GLM LSS Estimation Convenience Function (Single Trial Estimation)}
\usage{
glm_lss(
  dataset,
  model_obj,
  basis_obj,
  basemod = NULL,
  block = ~1,
  use_cpp = TRUE,
  progress = TRUE,
  ...
)
}
\arguments{
\item{dataset}{A \code{matrix_dataset} object containing the fMRI time series data}

\item{model_obj}{An \code{event_model} object specifying the experimental design}

\item{basis_obj}{An HRF basis object (e.g., from \code{HRF_SPMG1}, \code{HRF_FIR}, etc.)}

\item{basemod}{A \code{baseline_model} instance to regress out of data before beta estimation (default: NULL)}

\item{block}{A formula specifying the block factor (default: ~ 1 for single block)}

\item{use_cpp}{Logical; whether to use C++ implementation for speed (default: TRUE)}

\item{progress}{Logical; show progress bar (default: TRUE)}

\item{...}{Additional arguments passed to \code{estimate_betas}}
}
\value{
A list of class "fmri_betas" containing the estimated trial-wise coefficients
}
\description{
A convenience wrapper around \code{estimate_betas} for least squares separate (LSS) estimation.
\strong{This is primarily designed for single trial estimation}, where each individual trial/event
gets its own separate beta estimate rather than averaging across trials of the same condition.
}
\details{
\strong{Primary Use Case - Single Trial Estimation:}
\itemize{
\item \strong{Trial-wise beta estimation}: Each trial gets its own beta coefficient
\item \strong{Single trial analysis}: Useful for decoding, representational similarity analysis (RSA)
\item \strong{Trial-by-trial variability}: Captures individual trial responses rather than condition averages
\item \strong{Avoiding trial averaging}: Preserves trial-specific information that would be lost in standard GLM
}

\strong{Method Details:}
LSS (Least Squares Separate) fits a separate model for each trial, where the trial of interest
gets its own regressor while all other trials of the same condition are modeled together. This
approach avoids the collinearity issues that would arise from including separate regressors
for every trial simultaneously.

For standard condition-level estimation (averaging trials within conditions), use \code{glm_ols()} instead.
}
\examples{
\dontrun{
# Create event model and data
event_data <- data.frame(
  onset = c(10, 30, 50, 70),
  condition = factor(c("A", "B", "A", "B")),
  run = rep(1, 4)
)
sframe <- sampling_frame(blocklens = 100, TR = 2)
model_obj <- event_model(onset ~ hrf(condition), 
                        data = event_data, 
                        block = ~ run, 
                        sampling_frame = sframe)

# Create data matrix (100 timepoints, 10 voxels)
Y <- matrix(rnorm(1000), 100, 10)

# Create matrix_dataset with event table
dset <- matrix_dataset(Y, TR = 2, run_length = 100, event_table = event_data)

# Fit with LSS - estimates separate beta for each individual trial
fit <- glm_lss(dset, model_obj, HRF_SPMG1)
dim(fit$betas_ran)  # 4 trials x 10 voxels (NOT averaged by condition)

# This is useful for:
# - Decoding analysis (predicting condition from single trial patterns)
# - RSA (representational similarity analysis)
# - Studying trial-by-trial variability
}

}
\seealso{
\code{\link{estimate_betas}} for the underlying estimation function,
\code{\link{glm_ols}} for condition-level estimation
}
